url,commit message,file name,file status,page before commit,section modified,page after commit,new section
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Close #2894, add Bluesky to social sharing, update order",_includes/social-share.html,modified,"{% include base_path %}
<section class=""page__share"">
 {% if site.data.ui-text[site.locale].share_on_label %}
 <h4 class=""page__share-title"">
  {{ site.data.ui-text[site.locale].share_on_label | default: ""Share on"" }}
 </h4>
 {% endif %}
 <a class=""btn btn--x"" href=""https://x.com/intent/post?text={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} X"">
  <i aria-hidden=""true"" class=""fab fa-x-twitter"">
  </i>
  <span>
   X (formerly Twitter)
  </span>
 </a>
 <a class=""btn btn--facebook"" href=""https://www.facebook.com/sharer/sharer.php?u={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} Facebook"">
  <i aria-hidden=""true"" class=""fab fa-facebook"">
  </i>
  <span>
   Facebook
  </span>
 </a>
 <a class=""btn btn--linkedin"" href=""https://www.linkedin.com/shareArticle?mini=true&amp;url={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} LinkedIn"">
  <i aria-hidden=""true"" class=""fab fa-linkedin"">
  </i>
  <span>
   LinkedIn
  </span>
 </a>
</section>
","['<a href=""https://x.com/intent/post?text={{ base_path }}{{ page.url }}"" class=""btn btn--x"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: \'Share on\' }} X""><i class=""fab fa-x-twitter"" aria-hidden=""true""></i><span> X (formerly Twitter)</span></a>']","{% include base_path %}
<section class=""page__share"">
 {% if site.data.ui-text[site.locale].share_on_label %}
 <h4 class=""page__share-title"">
  {{ site.data.ui-text[site.locale].share_on_label | default: ""Share on"" }}
 </h4>
 {% endif %}
 <a class=""btn btn--bluesky"" href=""https://bsky.app/intent/compose?text={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} Bluesky"">
  <i aria-hidden=""true"" class=""fab fa-bluesky"">
  </i>
  <span>
   Bluesky
  </span>
 </a>
 <a class=""btn btn--facebook"" href=""https://www.facebook.com/sharer/sharer.php?u={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} Facebook"">
  <i aria-hidden=""true"" class=""fab fa-facebook"">
  </i>
  <span>
   Facebook
  </span>
 </a>
 <a class=""btn btn--linkedin"" href=""https://www.linkedin.com/shareArticle?mini=true&amp;url={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} LinkedIn"">
  <i aria-hidden=""true"" class=""fab fa-linkedin"">
  </i>
  <span>
   LinkedIn
  </span>
 </a>
 <a class=""btn btn--x"" href=""https://x.com/intent/post?text={{ base_path }}{{ page.url }}"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: 'Share on' }} X"">
  <i aria-hidden=""true"" class=""fab fa-x-twitter"">
  </i>
  <span>
   X (formerly Twitter)
  </span>
 </a>
</section>
","['<a href=""https://bsky.app/intent/compose?text={{ base_path }}{{ page.url }}"" class=""btn btn--bluesky"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: \'Share on\' }} Bluesky""><i class=""fab fa-bluesky"" aria-hidden=""true""></i><span> Bluesky</span></a>', '', '<a href=""https://x.com/intent/post?text={{ base_path }}{{ page.url }}"" class=""btn btn--x"" title=""{{ site.data.ui-text[site.locale].share_on_label | default: \'Share on\' }} X""><i class=""fab fa-x-twitter"" aria-hidden=""true""></i><span> X (formerly Twitter)</span></a>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Close #2894, add Bluesky to social sharing, update order",_sass/layout/_buttons.scss,modified,"/* ==========================================================================
   BUTTONS
   ========================================================================== */

/*
   Default button
   ========================================================================== */

.btn {
  /* default button */
  display: inline-block;
  margin-bottom: 0.25em;
  padding: 0.5em 1em;
  color: #fff !important;
  font-family: $sans-serif;
  font-size: $type-size-6;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  background-color: var(--global-base-color);
  border: 0 !important;
  border-radius: $border-radius;
  cursor: pointer;

  &amp;:hover {
    background-color: mix(white, #000, 20%);
  }

  .icon {
    margin-right: 0.5em;
  }

  .icon + .hidden {
    margin-left: -0.5em; /* override for hidden text*/
  }

  /* fills width of parent container */

  &amp;--block {
    display: block;
    width: 100%;

    + .btn--block {
      margin-top: 0.25em;
    }
  }

  /* for dark backgrounds */

  &amp;--inverse {
    color: var(--global-text-color-light) !important;
    border: 1px solid var(--global-border-color) !important; /* override*/
    background-color: var(--global-bg-color);

    &amp;:hover {
      color: #fff !important;
      border-color: var(--global-text-color-light);
    }
  }

  /* light outline */

  &amp;--light-outline {
    border: 1px solid #fff !important; /* override*/
    background-color: transparent;
  }

  /* information */

  &amp;--info {
    background-color: $info-color;

    &amp;:hover {
      background-color: mix(#000, $info-color, 20%);
    }
  }

  /* warning */

  &amp;--warning {
    background-color: $warning-color;

    &amp;:hover {
      background-color: mix(#000, $warning-color, 20%);
    }
  }

  /* success */

  &amp;--success {
    background-color: $success-color;

    &amp;:hover {
      background-color: mix(#000, $success-color, 20%);
    }
  }

  /* danger */

  &amp;--danger {
    background-color: $danger-color;

    &amp;:hover {
      background-color: mix(#000, $danger-color, 20%);
    }
  }

  /* disabled */

  &amp;--disabled {
    pointer-events: none;
    cursor: not-allowed;
    filter: alpha(opacity=65);
    box-shadow: none;
    opacity: 0.65;
  }

  /* social buttons */

  $social:
  (facebook, $facebook-color),
  (twitter, $twitter-color),
  (google-plus, $google-plus-color),
  (linkedin, $linkedin-color);

  @each $socialnetwork, $color in $social {
    &amp;--#{$socialnetwork} {
      background-color: $color;

      &amp;:hover {
        background-color: mix(#000, $color, 20%);
      }
    }
  }

  /* extra large button */

  &amp;--x-large {
    font-size: $type-size-4;
  }

  /* large button */

  &amp;--large {
    font-size: $type-size-5;
  }

  /* small button */

  &amp;--small {
    font-size: $type-size-7;
  }
}
",[],"/* ==========================================================================
   BUTTONS
   ========================================================================== */

/*
   Default button
   ========================================================================== */

.btn {
  /* default button */
  display: inline-block;
  margin-bottom: 0.25em;
  padding: 0.5em 1em;
  color: #fff !important;
  font-family: $sans-serif;
  font-size: $type-size-6;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  background-color: var(--global-base-color);
  border: 0 !important;
  border-radius: $border-radius;
  cursor: pointer;

  &amp;:hover {
    background-color: mix(white, #000, 20%);
  }

  .icon {
    margin-right: 0.5em;
  }

  .icon + .hidden {
    margin-left: -0.5em; /* override for hidden text*/
  }

  /* fills width of parent container */

  &amp;--block {
    display: block;
    width: 100%;

    + .btn--block {
      margin-top: 0.25em;
    }
  }

  /* for dark backgrounds */

  &amp;--inverse {
    color: var(--global-text-color-light) !important;
    border: 1px solid var(--global-border-color) !important; /* override*/
    background-color: var(--global-bg-color);

    &amp;:hover {
      color: #fff !important;
      border-color: var(--global-text-color-light);
    }
  }

  /* light outline */

  &amp;--light-outline {
    border: 1px solid #fff !important; /* override*/
    background-color: transparent;
  }

  /* information */

  &amp;--info {
    background-color: $info-color;

    &amp;:hover {
      background-color: mix(#000, $info-color, 20%);
    }
  }

  /* warning */

  &amp;--warning {
    background-color: $warning-color;

    &amp;:hover {
      background-color: mix(#000, $warning-color, 20%);
    }
  }

  /* success */

  &amp;--success {
    background-color: $success-color;

    &amp;:hover {
      background-color: mix(#000, $success-color, 20%);
    }
  }

  /* danger */

  &amp;--danger {
    background-color: $danger-color;

    &amp;:hover {
      background-color: mix(#000, $danger-color, 20%);
    }
  }

  /* disabled */

  &amp;--disabled {
    pointer-events: none;
    cursor: not-allowed;
    filter: alpha(opacity=65);
    box-shadow: none;
    opacity: 0.65;
  }

  /* social buttons */

  $social:
  (bluesky, $bluesky-color),
  (facebook, $facebook-color),
  (twitter, $twitter-color),
  (google-plus, $google-plus-color),
  (linkedin, $linkedin-color);

  @each $socialnetwork, $color in $social {
    &amp;--#{$socialnetwork} {
      background-color: $color;

      &amp;:hover {
        background-color: mix(#000, $color, 20%);
      }
    }
  }

  /* extra large button */

  &amp;--x-large {
    font-size: $type-size-4;
  }

  /* large button */

  &amp;--large {
    font-size: $type-size-5;
  }

  /* small button */

  &amp;--small {
    font-size: $type-size-7;
  }
}
","['(bluesky, $bluesky-color),']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"#2883 update navigation, add documentation",_data/navigation.yml,modified,"# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  - title: ""JSON CV""
    url: /cv-json/
    
  - title: ""Guide""
    url: /markdown/
","['- title: ""JSON CV""', 'url: /cv-json/']","# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.
#
# NOTE that only one of the CV options should be selected, the first is for the
#      Markdown formatted page while the second is generated using JSON.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  # - title: ""CV""
  #   url: /cv-json/
    
  - title: ""Guide""
    url: /markdown/
","['#', '# NOTE that only one of the CV options should be selected, the first is for the', '#      Markdown formatted page while the second is generated using JSON.', '# - title: ""CV""', '#   url: /cv-json/']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"#2883 update navigation, add documentation",_pages/markdown.md,modified,"---
permalink: /markdown/
title: ""Markdown""
author_profile: true
redirect_from: 
  - /md/
  - /markdown.html
---

## Locations of key files/directories

* Basic config options: _config.yml
* Top navigation bar config: _data/navigation.yml
* Single pages: _pages/
* Collections of pages are .md or .html files in:
  * _publications/
  * _portfolio/
  * _posts/
  * _teaching/
  * _talks/
* Footer: _includes/footer.html
* Static files (like PDFs): /files/
* Profile image (can set in _config.yml): images/profile.png

## Tips and hints

* Name a file "".md"" to have it render in markdown, name it "".html"" to render in HTML.
* Go to the [commit list](https://github.com/academicpages/academicpages.github.io/commits/master) (on your repo) to find the last version GitHub built with Jekyll. 
  * Green check: successful build
  * Orange circle: building
  * Red X: error
  * No icon: not built

* Academic Pages uses [Jekyll Kramdown](https://jekyllrb.com/docs/configuration/markdown/), GitHub Flavored Markdown (GFM) parser, which is similar to the version of Markdown used on GitHub, but may have some minor differences. 
  * Some of emoji supported on GitHub should be supposed via the [Jemoji](https://github.com/jekyll/jemoji) plugin :computer:.
  * The best list of the supported emoji can be found in the [Emojis for Jekyll via Jemoji](https://www.fabriziomusacchio.com/blog/2021-08-16-emojis_for_Jekyll/#computer) blog post.

* While GitHub Pages prevents server side code from running, client-side scripts are supported.
  * This means that Google Analytics is supported, and [the wiki](https://github.com/academicpages/academicpages.github.io/wiki/Adding-Google-Analytics) should contain the most up-to-date information on getting it working.

## Resources
 * [Liquid syntax guide](https://shopify.github.io/liquid/tags/control-flow/)
 * [MathJax Documentation](https://docs.mathjax.org/en/latest/)

## MathJax 

Support for MathJax Version 3.0 is included in the template:

$$
\displaylines{
\nabla \cdot E= \frac{\rho}{\epsilon_0} \\\
\nabla \cdot B=0 \\\
\nabla \times E= -\partial_tB \\\
\nabla \times B  = \mu_0 \left(J + \varepsilon_0 \partial_t E \right)
}
$$

The default delimiters of `$$...$$` and `\\[...\\]` are supported for displayed mathematics, while `\\(...\\)` should be used for in-line mathematics (ex., \\(a^2 + b^2 = c^2\\))

**Note** that since Academic Pages uses Markdown which cases some interference with MathJax and LaTeX for escaping characters and new lines, although [some workarounds exist](https://math.codidact.com/posts/278763/278772#answer-278772).

## Markdown guide

Academic Pages uses [kramdown](https://kramdown.gettalong.org/index.html) for Markdown rendering, which has some differences from other Markdown implementations such as GitHub's. In addition to this guide, please see the [kramdown Syntax page](https://kramdown.gettalong.org/syntax.html) for full documentation.  

### Header three

#### Header four

##### Header five

###### Header six

## Blockquotes

Single line blockquote:

&gt; Quotes are cool.

## Tables

### Table 1

| Entry            | Item   |                                                              |
| --------         | ------ | ------------------------------------------------------------ |
| [John Doe](#)    | 2016   | Description of the item in the list                          |
| [Jane Doe](#)    | 2019   | Description of the item in the list                          |
| [Doe Doe](#)     | 2022   | Description of the item in the list                          |

### Table 2

| Header1 | Header2 | Header3 |
|:--------|:-------:|--------:|
| cell1   | cell2   | cell3   |
| cell4   | ce
ll5   | cell6   |
|-----------------------------|
| cell1   | cell2   | cell3   |
| cell4   | cell5   | cell6   |
|=============================|
| Foot1   | Foot2   | Foot3   |

## Definition Lists

Definition List Title
:   Definition list division.

Startup
:   A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.

#dowork
:   Coined by Rob Dyrdek and his personal body guard Christopher ""Big Black"" Boykins, ""Do Work"" works as a self motivator, to motivating your friends.

Do It Live
:   I'll let Bill O'Reilly [explain](https://www.youtube.com/watch?v=O_HyZ5aW76c ""We'll Do It Live"") this one.

## Unordered Lists (Nested)

  * List item one 
      * List item one 
          * List item one
          * List item two
          * List item three
          * List item four
      * List item two
      * List item three
      * List item four
  * List item two
  * List item three
  * List item four

## Ordered List (Nested)

  1. List item one 
      1. List item one 
          1. List item one
          2. List item two
          3. List item three
          4. List item four
      2. List item two
      3. List item three
      4. List item four
  2. List item two
  3. List item three
  4. List item four

## Buttons

Make any link standout more when applying the `.btn` class.

## Notices

Basic notices or call-outs are supported using the following syntax:

```markdown
**Watch out!** You can also add notices by appending `{: .notice}` to the line following paragraph.
{: .notice}
```

which wil render as:

**Watch out!** You can also add notices by appending `{: .notice}` to the line following paragraph.
{: .notice}

### Footnotes

Footnotes can be useful for clarifying points in the text, or citing information.[^1] Markdown support numeric footnotes, as well as text as long as the values are unique.[^note]

```markdown
This is the regular text.[^1] This is more regular text.[^note]

[^1]: This is the footnote itself.
[^note]: This is another footnote.
```

[^1]: Such as this footnote.
[^note]: When using text for footnotes markers, no spaces are permitted in the name.

## HTML Tags

### Address Tag
<address>
 1 Infinite Loop
 <br/>
 Cupertino, CA 95014
 <br/>
 United States
</address>
### Anchor Tag (aka. Link)

This is an example of a [link](http://github.com ""GitHub"").

### Abbreviation Tag

The abbreviation CSS stands for ""Cascading Style Sheets"".

*[CSS]: Cascading Style Sheets

### Cite Tag

""Code is poetry."" ---
<cite>
 Automattic
</cite>
### Code Tag

You will learn later on in these tests that `word-wrap: break-word;` will be your best friend.

You can also write larger blocks of code with syntax highlighting supported for some languages, such as Python:

```python
print('Hello World!')
```

or R:

```R
print(""Hello World!"", quote = FALSE)
```

### Details Tag (collapsible sections)

The HTML `
<details>
 ` tag works well with Markdown and allows you to include collapsible sections, see [W3Schools](https://www.w3schools.com/tags/tag_details.asp) for more information on how to use the tag.
 <details>
  <summary>
   Collapsed by default
  </summary>
  This section was collapsed by default!
 </details>
 The source code:

```HTML
 <details>
  <summary>
   Collapsed by default
  </summary>
  This section was collapsed by default!
 </details>
 ```

Or, you can leave a section open by default by including the `open` attribute in the tag:
 <details open="""">
  <summary>
   Open by default
  </summary>
  This section is open by default thanks to open in the &lt;details open&gt; tag!
 </details>
 ### Emphasize Tag

The emphasize tag should _italicize_ text.

### Insert Tag

This tag should denote
 <ins>
  inserted
 </ins>
 text.

### Keyboard Tag

This scarcely known tag emulates
 <kbd>
  keyboard text
 </kbd>
 , which is usually styled like the `
 <code>
  ` tag.

### Preformatted Tag

This tag styles large blocks of code.
  <pre>
.post-title {
  margin: 0 0 5px;
  font-weight: bold;
  font-size: 38px;
  line-height: 1.2;
  and here's a line of some really, really, really, really long text, just to see how the PRE tag handles it and to find out how it overflows;
}
</pre>
  ### Quote Tag
  <q>
   Developers, developers, developers…
  </q>
  –Steve Ballmer

### Strike Tag

This tag will let you
  <strike>
   strikeout text
  </strike>
  .

### Strong Tag

This tag shows **bold text**.

### Subscript Tag

Getting our science styling on with H
  <sub>
   2
  </sub>
  O, which should push the ""2"" down.

### Superscript Tag

Still sticking with science and Isaac Newton's E = MC
  <sup>
   2
  </sup>
  , which should lift the 2 up.

### Variable Tag

This allows you to denote
  <var>
   variables
  </var>
  .

***
**Footnotes**

The footnotes in the page will be returned following this line, return to the section on
  <a href=""#footnotes"">
   Markdown Footnotes
  </a>
  .
 </code>
</details>
",[],"---
permalink: /markdown/
title: ""Markdown""
author_profile: true
redirect_from: 
  - /md/
  - /markdown.html
---

## Locations of key files/directories

* Basic config options: _config.yml
* Top navigation bar config: _data/navigation.yml
* Single pages: _pages/
* Collections of pages are .md or .html files in:
  * _publications/
  * _portfolio/
  * _posts/
  * _teaching/
  * _talks/
* Footer: _includes/footer.html
* Static files (like PDFs): /files/
* Profile image (can set in _config.yml): images/profile.png

## Tips and hints

* Name a file "".md"" to have it render in markdown, name it "".html"" to render in HTML.
* Go to the [commit list](https://github.com/academicpages/academicpages.github.io/commits/master) (on your repo) to find the last version GitHub built with Jekyll. 
  * Green check: successful build
  * Orange circle: building
  * Red X: error
  * No icon: not built

* Academic Pages uses [Jekyll Kramdown](https://jekyllrb.com/docs/configuration/markdown/), GitHub Flavored Markdown (GFM) parser, which is similar to the version of Markdown used on GitHub, but may have some minor differences. 
  * Some of emoji supported on GitHub should be supposed via the [Jemoji](https://github.com/jekyll/jemoji) plugin :computer:.
  * The best list of the supported emoji can be found in the [Emojis for Jekyll via Jemoji](https://www.fabriziomusacchio.com/blog/2021-08-16-emojis_for_Jekyll/#computer) blog post.

* While GitHub Pages prevents server side code from running, client-side scripts are supported.
  * This means that Google Analytics is supported, and [the wiki](https://github.com/academicpages/academicpages.github.io/wiki/Adding-Google-Analytics) should contain the most up-to-date information on getting it working.

* Your CV can be written using either Markdown ([preview](https://academicpages.github.io/cv/)) or generated via JSON ([preview](https://academicpages.github.io/cv-json/)) and the layouts are slightly different. You can update the path to the one being used in `_data/navigation.yml` with the JSON formatted CV being hidden by default.

## Resources
 * [Liquid syntax guide](https://shopify.github.io/liquid/tags/control-flow/)
 * [MathJax Documentation](https://docs.mathjax.org/en/latest/)

## MathJax 

Support for MathJax Version 3.0 is included in the template:

$$
\displaylines{
\nabla \cdot E= \frac{\rho}{\epsilon_0} \\\
\nabla \cdot B=0 \\\
\nabla \times E= -\partial_tB \\\
\nabla \times B  = \mu_0 \left(J + \varepsilon_0 \partial_t E \right)
}
$$

The default delimiters of `$$...$$` and `\\[...\\]` are supported for displayed mathematics, while `\\(...\\)` should be used for in-line mathematics (ex., \\(a^2 + b^2 = c^2\\))

**Note** that since Academic Pages uses Markdown which cases some interference with MathJax and LaTeX for escaping characters and new lines, although [some workarounds exist](https://math.codidact.com/posts/278763/278772#answer-278772).

## Markdown guide

Academic Pages uses [kramdown](https://kramdown.gettalong.org/index.html) for Markdown rendering, which has some differences from other Markdown implementations such as GitHub's. In addition to this guide, please see the [kramdown Syntax page](https://kramdown.gettalong.org/syntax.html) for full documentation.  

### Header three

#### Header four

##### Header five

###### Header six

## Blockquotes

Single line blockquote:

&gt; Quotes are cool.

## Tables

### Table 1

| Entry            | Item   |                                                              |
| --------         | ------ | ------------------------------------------------------------ |
| [John Doe](#)    | 2016   | Description of the item in the list                          |
| [Jane Doe](#)    | 2019   | Description of the item in the list                          |
| [Doe Doe](#)     | 2022   | Description of the item in the list                          |

### Table 2

| Header1 | Header2 | Header3 |
|:--------|:-------:|--------:|
| cell1   | cell2   | cell3   |
| cell4   | ce
ll5   | cell6   |
|-----------------------------|
| cell1   | cell2   | cell3   |
| cell4   | cell5   | cell6   |
|=============================|
| Foot1   | Foot2   | Foot3   |

## Definition Lists

Definition List Title
:   Definition list division.

Startup
:   A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.

#dowork
:   Coined by Rob Dyrdek and his personal body guard Christopher ""Big Black"" Boykins, ""Do Work"" works as a self motivator, to motivating your friends.

Do It Live
:   I'll let Bill O'Reilly [explain](https://www.youtube.com/watch?v=O_HyZ5aW76c ""We'll Do It Live"") this one.

## Unordered Lists (Nested)

  * List item one 
      * List item one 
          * List item one
          * List item two
          * List item three
          * List item four
      * List item two
      * List item three
      * List item four
  * List item two
  * List item three
  * List item four

## Ordered List (Nested)

  1. List item one 
      1. List item one 
          1. List item one
          2. List item two
          3. List item three
          4. List item four
      2. List item two
      3. List item three
      4. List item four
  2. List item two
  3. List item three
  4. List item four

## Buttons

Make any link standout more when applying the `.btn` class.

## Notices

Basic notices or call-outs are supported using the following syntax:

```markdown
**Watch out!** You can also add notices by appending `{: .notice}` to the line following paragraph.
{: .notice}
```

which wil render as:

**Watch out!** You can also add notices by appending `{: .notice}` to the line following paragraph.
{: .notice}

### Footnotes

Footnotes can be useful for clarifying points in the text, or citing information.[^1] Markdown support numeric footnotes, as well as text as long as the values are unique.[^note]

```markdown
This is the regular text.[^1] This is more regular text.[^note]

[^1]: This is the footnote itself.
[^note]: This is another footnote.
```

[^1]: Such as this footnote.
[^note]: When using text for footnotes markers, no spaces are permitted in the name.

## HTML Tags

### Address Tag
<address>
 1 Infinite Loop
 <br/>
 Cupertino, CA 95014
 <br/>
 United States
</address>
### Anchor Tag (aka. Link)

This is an example of a [link](http://github.com ""GitHub"").

### Abbreviation Tag

The abbreviation CSS stands for ""Cascading Style Sheets"".

*[CSS]: Cascading Style Sheets

### Cite Tag

""Code is poetry."" ---
<cite>
 Automattic
</cite>
### Code Tag

You will learn later on in these tests that `word-wrap: break-word;` will be your best friend.

You can also write larger blocks of code with syntax highlighting supported for some languages, such as Python:

```python
print('Hello World!')
```

or R:

```R
print(""Hello World!"", quote = FALSE)
```

### Details Tag (collapsible sections)

The HTML `
<details>
 ` tag works well with Markdown and allows you to include collapsible sections, see [W3Schools](https://www.w3schools.com/tags/tag_details.asp) for more information on how to use the tag.
 <details>
  <summary>
   Collapsed by default
  </summary>
  This section was collapsed by default!
 </details>
 The source code:

```HTML
 <details>
  <summary>
   Collapsed by default
  </summary>
  This section was collapsed by default!
 </details>
 ```

Or, you can leave a section open by default by including the `open` attribute in the tag:
 <details open="""">
  <summary>
   Open by default
  </summary>
  This section is open by default thanks to open in the &lt;details open&gt; tag!
 </details>
 ### Emphasize Tag

The emphasize tag should _italicize_ text.

### Insert Tag

This tag should denote
 <ins>
  inserted
 </ins>
 text.

### Keyboard Tag

This scarcely known tag emulates
 <kbd>
  keyboard text
 </kbd>
 , which is usually styled like the `
 <code>
  ` tag.

### Preformatted Tag

This tag styles large blocks of code.
  <pre>
.post-title {
  margin: 0 0 5px;
  font-weight: bold;
  font-size: 38px;
  line-height: 1.2;
  and here's a line of some really, really, really, really long text, just to see how the PRE tag handles it and to find out how it overflows;
}
</pre>
  ### Quote Tag
  <q>
   Developers, developers, developers…
  </q>
  –Steve Ballmer

### Strike Tag

This tag will let you
  <strike>
   strikeout text
  </strike>
  .

### Strong Tag

This tag shows **bold text**.

### Subscript Tag

Getting our science styling on with H
  <sub>
   2
  </sub>
  O, which should push the ""2"" down.

### Superscript Tag

Still sticking with science and Isaac Newton's E = MC
  <sup>
   2
  </sup>
  , which should lift the 2 up.

### Variable Tag

This allows you to denote
  <var>
   variables
  </var>
  .

***
**Footnotes**

The footnotes in the page will be returned following this line, return to the section on
  <a href=""#footnotes"">
   Markdown Footnotes
  </a>
  .
 </code>
</details>
","['* Your CV can be written using either Markdown ([preview](https://academicpages.github.io/cv/)) or generated via JSON ([preview](https://academicpages.github.io/cv-json/)) and the layouts are slightly different. You can update the path to the one being used in `_data/navigation.yml` with the JSON formatted CV being hidden by default.', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_data/cv.json,added,"page does not exist
",[],"{
  ""basics"": {
    ""name"": ""Your Sidebar Name"",
    ""email"": ""none@example.org"",
    ""phone"": """",
    ""website"": ""https://academicpages.github.io"",
    ""summary"": ""Currently employed at Red Brick University. Short biography for the left-hand sidebar"",
    ""location"": {
      ""address"": """",
      ""postalCode"": """",
      ""city"": ""Earth"",
      ""countryCode"": ""US"",
      ""region"": """"
    },
    ""profiles"": [
      {
        ""network"": ""Google Scholar"",
        ""username"": """",
        ""url"": ""https://scholar.google.com/citations?user=PS_CX0AAAAAJ""
      },
      {
        ""network"": ""ORCID"",
        ""username"": """",
        ""url"": ""http://orcid.org/yourorcidurl""
      },
      {
        ""network"": ""GitHub"",
        ""username"": ""academicpages"",
        ""url"": ""https://github.com/academicpages""
      }
    ]
  },
  ""work"": [],
  ""education"": [
    {
      ""institution"": ""GitHub University"",
      ""area"": ""Ph.D in Version Control Theory"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2018"",
      ""gpa"": null,
      ""courses"": []
    },
    {
      ""institution"": ""GitHub University"",
      ""area"": ""M.S. in Jekyll"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2014"",
      ""gpa"": null,
      ""courses"": []
    },
    {
      ""institution"": ""GitHub University"",
      ""area"": ""B.S. in GitHub"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2012"",
      ""gpa"": null,
      ""courses"": []
    }
  ],
  ""skills"": [],
  ""languages"": [],
  ""interests"": [],
  ""references"": [],
  ""publications"": [
    {
      ""name"": ""Paper Title Number 1"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2009-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper1.pdf"",
      ""summary"": ""This paper is about the number 1. The number 2 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 2"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2010-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper2.pdf"",
      ""summary"": ""This paper is about the number 2. The number 3 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 3"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2015-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper3.pdf"",
      ""summary"": ""This paper is about the number 3. The number 4 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 4"",
      ""publisher"": ""GitHub Journal of Bugs"",
      ""releaseDate"": ""2024-02-17"",
      ""website"": ""http://academicpages.github.io/files/paper3.pdf"",
      ""summary"": ""This paper is about fixing template issue #693.""
    }
  ],
  ""presentations"": [
    {
      ""name"": ""Talk 1 on Relevant Topic in Your Field"",
      ""event"": ""UC San Francisco, Department of Testing"",
      ""date"": ""2012-03-01"",
      ""location"": ""San Francisco, CA, USA"",
      ""description"": """"
    },
    {
      ""name"": ""Tutorial 1 on Relevant Topic in Your Field"",
      ""event"": ""UC-Berkeley Institute for Testing Science"",
      ""date"": ""2013-03-01"",
      ""location"": ""Berkeley, CA, USA"",
      ""description"": """"
    },
    {
      ""name"": ""Talk 2 on Relevant Topic in Your Field"",
      ""event"": ""London School of Testing"",
      ""date"": ""2014-02-01"",
      ""location"": ""London, UK"",
      ""description"": """"
    },
    {
      ""name"": ""Conference Proceeding talk 3 on Relevant Topic in Your Field"",
      ""event"": ""Testing Institute of America 2014 Annual Conference"",
      ""date"": ""2014-03-01"",
      ""location"": ""Los Angeles, CA, USA"",
      ""description"": """"
    }
  ],
  ""teaching"": [
    {
      ""course"": ""Teaching experience 1"",
      ""institution"": ""University 1, Department"",
      ""date"": ""2014-01-01"",
      ""role"": ""Undergraduate course"",
      ""description"": """"
    },
    {
      ""course"": ""Teaching experience 2"",
      ""institution"": ""University 1, Department"",
      ""date"": ""2015-01-01"",
      ""role"": ""Workshop"",
      ""description"": """"
    }
  ],
  ""portfolio"": [
    {
      ""name"": ""Portfolio item number 1"",
      ""category"": ""portfolio"",
      ""date"": """",
      ""url"": """",
      ""description"": ""Short description of portfolio item number 1
<br/>
<img src=""/images/500x300.png""/>
""
    }
  ]
}
","['{', '""basics"": {', '""name"": ""Your Sidebar Name"",', '""email"": ""none@example.org"",', '""phone"": """",', '""website"": ""https://academicpages.github.io"",', '""summary"": ""Currently employed at Red Brick University. Short biography for the left-hand sidebar"",', '""location"": {', '""address"": """",', '""postalCode"": """",', '""city"": ""Earth"",', '""countryCode"": ""US"",', '""region"": """"', '},', '""profiles"": [', '{', '""network"": ""Google Scholar"",', '""username"": """",', '""url"": ""https://scholar.google.com/citations?user=PS_CX0AAAAAJ""', '},', '{', '""network"": ""ORCID"",', '""username"": """",', '""url"": ""http://orcid.org/yourorcidurl""', '},', '{', '""network"": ""GitHub"",', '""username"": ""academicpages"",', '""url"": ""https://github.com/academicpages""', '}', ']', '},', '""work"": [],', '""education"": [', '{', '""institution"": ""GitHub University"",', '""area"": ""Ph.D in Version Control Theory"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2018"",', '""gpa"": null,', '""courses"": []', '},', '{', '""institution"": ""GitHub University"",', '""area"": ""M.S. in Jekyll"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2014"",', '""gpa"": null,', '""courses"": []', '},', '{', '""institution"": ""GitHub University"",', '""area"": ""B.S. in GitHub"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2012"",', '""gpa"": null,', '""courses"": []', '}', '],', '""skills"": [],', '""languages"": [],', '""interests"": [],', '""references"": [],', '""publications"": [', '{', '""name"": ""Paper Title Number 1"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2009-10-01"",', '""website"": ""http://academicpages.github.io/files/paper1.pdf"",', '""summary"": ""This paper is about the number 1. The number 2 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 2"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2010-10-01"",', '""website"": ""http://academicpages.github.io/files/paper2.pdf"",', '""summary"": ""This paper is about the number 2. The number 3 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 3"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2015-10-01"",', '""website"": ""http://academicpages.github.io/files/paper3.pdf"",', '""summary"": ""This paper is about the number 3. The number 4 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 4"",', '""publisher"": ""GitHub Journal of Bugs"",', '""releaseDate"": ""2024-02-17"",', '""website"": ""http://academicpages.github.io/files/paper3.pdf"",', '""summary"": ""This paper is about fixing template issue #693.""', '}', '],', '""presentations"": [', '{', '""name"": ""Talk 1 on Relevant Topic in Your Field"",', '""event"": ""UC San Francisco, Department of Testing"",', '""date"": ""2012-03-01"",', '""location"": ""San Francisco, CA, USA"",', '""description"": """"', '},', '{', '""name"": ""Tutorial 1 on Relevant Topic in Your Field"",', '""event"": ""UC-Berkeley Institute for Testing Science"",', '""date"": ""2013-03-01"",', '""location"": ""Berkeley, CA, USA"",', '""description"": """"', '},', '{', '""name"": ""Talk 2 on Relevant Topic in Your Field"",', '""event"": ""London School of Testing"",', '""date"": ""2014-02-01"",', '""location"": ""London, UK"",', '""description"": """"', '},', '{', '""name"": ""Conference Proceeding talk 3 on Relevant Topic in Your Field"",', '""event"": ""Testing Institute of America 2014 Annual Conference"",', '""date"": ""2014-03-01"",', '""location"": ""Los Angeles, CA, USA"",', '""description"": """"', '}', '],', '""teaching"": [', '{', '""course"": ""Teaching experience 1"",', '""institution"": ""University 1, Department"",', '""date"": ""2014-01-01"",', '""role"": ""Undergraduate course"",', '""description"": """"', '},', '{', '""course"": ""Teaching experience 2"",', '""institution"": ""University 1, Department"",', '""date"": ""2015-01-01"",', '""role"": ""Workshop"",', '""description"": """"', '}', '],', '""portfolio"": [', '{', '""name"": ""Portfolio item number 1"",', '""category"": ""portfolio"",', '""date"": """",', '""url"": """",', '""description"": ""Short description of portfolio item number 1<br/><img src=\'/images/500x300.png\'>""', '}', ']', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_data/navigation.yml,modified,"# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  - title: ""Guide""
    url: /markdown/
",[],"# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  - title: ""JSON CV""
    url: /cv-json/
    
  - title: ""Guide""
    url: /markdown/
","['- title: ""JSON CV""', 'url: /cv-json/', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_includes/cv-template.html,added,"page does not exist
",[],"{% assign cv = site.data.cv %}
<div class=""cv-container"">
 <!-- Basic Information -->
 <div class=""cv-section cv-header"">
  <h1>
   {{ cv.basics.name }}
  </h1>
  {% if cv.basics.label %}
  <h2>
   {{ cv.basics.label }}
  </h2>
  {% endif %}
  <div class=""cv-contact"">
   {% if cv.basics.email %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-envelope"">
    </i>
    {{ cv.basics.email }}
   </div>
   {% endif %}
      
      {% if cv.basics.phone %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-phone"">
    </i>
    {{ cv.basics.phone }}
   </div>
   {% endif %}
      
      {% if cv.basics.website %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-globe"">
    </i>
    <a href=""{{ cv.basics.website }}"" target=""_blank"">
     {{ cv.basics.website }}
    </a>
   </div>
   {% endif %}
      
      {% if cv.basics.location.city %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-map-marker-alt"">
    </i>
    {{ cv.basics.location.city }}{% if cv.basics.location.region %}, {{ cv.basics.location.region }}{% endif %}{% if cv.basics.location.countryCode %}, {{ cv.basics.location.countryCode }}{% endif %}
   </div>
   {% endif %}
  </div>
  {% if cv.basics.profiles.size &gt; 0 %}
  <div class=""cv-profiles"">
   {% for profile in cv.basics.profiles %}
   <a class=""cv-profile-link"" href=""{{ profile.url }}"" target=""_blank"">
    <i class=""fab fa-{{ profile.network | downcase }}"">
    </i>
    {{ profile.network }}
   </a>
   {% endfor %}
  </div>
  {% endif %}
 </div>
 {% if cv.basics.summary %}
 <!-- Summary -->
 <div class=""cv-section"">
  <h2>
   Summary
  </h2>
  <p>
   {{ cv.basics.summary }}
  </p>
 </div>
 {% endif %}
  
  {% if cv.education.size &gt; 0 %}
 <!-- Education -->
 <div class=""cv-section"">
  <h2>
   Education
  </h2>
  <ul class=""cv-list"">
   {% for education in cv.education %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ education.area }}
     </div>
     <div class=""cv-item-date"">
      {{ education.endDate }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ education.institution }}
     </div>
     {% if education.gpa %}
     <div class=""cv-item-detail"">
      GPA: {{ education.gpa }}
     </div>
     {% endif %}
          {% if education.courses.size &gt; 0 %}
     <div class=""cv-item-detail"">
      <strong>
       Courses:
      </strong>
      {{ education.courses | join: "", "" }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.work.size &gt; 0 %}
 <!-- Work Experience -->
 <div class=""cv-section"">
  <h2>
   Work Experience
  </h2>
  <ul class=""cv-list"">
   {% for work in cv.work %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ work.position }}
     </div>
     <div class=""cv-item-date"">
      {{ work.startDate }}{% if work.endDate %} - {{ work.endDate }}{% endif %}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ work.company }}
     </div>
     {% if work.summary %}
     <div class=""cv-item-detail"">
      {{ work.summary }}
     </div>
     {% endif %}
          {% if work.highlights.size &gt; 0 %}
     <ul class=""cv-highlights"">
      {% for highlight in work.highlights %}
      <li>
       {{ highlight }}
      </li>
      {% endfor %}
     </ul>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.skills.size &gt; 0 %}
 <!-- Skills -->
 <div class=""cv-section"">
  <h2>
   Skills
  </h2>
  <div class=""cv-skills"">
   {% for skill in cv.skills %}
   <div class=""cv-skill-category"">
    <h3>
     {{ skill.name }}
    </h3>
    <ul class=""cv-skill-list"">
     {% for keyword in skill.keywords %}
     <li>
      {{ keyword }}
     </li>
     {% endfor %}
    </ul>
   </div>
   {% endfor %}
  </div>
 </div>
 {% endif %}
  
  {% if cv.publications.size &gt; 0 %}
 <!-- Publications -->
 <div class=""cv-section"">
  <h2>
   Publications
  </h2>
  <ul class=""cv-list"">
   {% for publication in cv.publications %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ publication.name }}
     </div>
     <div class=""cv-item-date"">
      {{ publication.releaseDate | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ publication.publisher }}
     </div>
     {% if publication.summary %}
     <div class=""cv-item-detail"">
      {{ publication.summary }}
     </div>
     {% endif %}
          {% if publication.website %}
     <div class=""cv-item-detail"">
      <a href=""{{ publication.website }}"" target=""_blank"">
       View Publication
      </a>
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.presentations.size &gt; 0 %}
 <!-- Presentations/Talks -->
 <div class=""cv-section"">
  <h2>
   Presentations
  </h2>
  <ul class=""cv-list"">
   {% for talk in cv.presentations %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ talk.name }}
     </div>
     <div class=""cv-item-date"">
      {{ talk.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ talk.event }}
     </div>
     {% if talk.location %}
     <div class=""cv-item-detail"">
      {{ talk.location }}
     </div>
     {% endif %}
          {% if talk.description %}
     <div class=""cv-item-detail"">
      {{ talk.description }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.teaching.size &gt; 0 %}
 <!-- Teaching -->
 <div class=""cv-section"">
  <h2>
   Teaching
  </h2>
  <ul class=""cv-list"">
   {% for teaching in cv.teaching %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ teaching.course }}
     </div>
     <div class=""cv-item-date"">
      {{ teaching.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ teaching.institution }}
     </div>
     {% if teaching.role %}
     <div class=""cv-item-detail"">
      Role: {{ teaching.role }}
     </div>
     {% endif %}
          {% if teaching.description %}
     <div class=""cv-item-detail"">
      {{ teaching.description }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.portfolio.size &gt; 0 %}
 <!-- Portfolio -->
 <div class=""cv-section"">
  <h2>
   Portfolio
  </h2>
  <ul class=""cv-list"">
   {% for item in cv.portfolio %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ item.name }}
     </div>
     <div class=""cv-item-date"">
      {{ item.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ item.category | capitalize }}
     </div>
     {% if item.description %}
     <div class=""cv-item-detail"">
      {{ item.description }}
     </div>
     {% endif %}
          {% if item.url %}
     <div class=""cv-item-detail"">
      <a href=""{{ item.url }}"" target=""_blank"">
       View Project
      </a>
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.languages.size &gt; 0 %}
 <!-- Languages -->
 <div class=""cv-section"">
  <h2>
   Languages
  </h2>
  <ul class=""cv-list"">
   {% for language in cv.languages %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ language.language }}
     </div>
     <div class=""cv-item-detail"">
      {{ language.fluency }}
     </div>
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.interests.size &gt; 0 %}
 <!-- Interests -->
 <div class=""cv-section"">
  <h2>
   Interests
  </h2>
  <ul class=""cv-list"">
   {% for interest in cv.interests %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ interest.name }}
     </div>
     {% if interest.keywords.size &gt; 0 %}
     <div class=""cv-item-detail"">
      {{ interest.keywords | join: "", "" }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.references.size &gt; 0 %}
 <!-- References -->
 <div class=""cv-section"">
  <h2>
   References
  </h2>
  <ul class=""cv-list"">
   {% for reference in cv.references %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ reference.name }}
     </div>
     {% if reference.reference %}
     <div class=""cv-item-detail"">
      {{ reference.reference }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
</div>
","['{% assign cv = site.data.cv %}', '', '<div class=""cv-container"">', '<!-- Basic Information -->', '<div class=""cv-section cv-header"">', '<h1>{{ cv.basics.name }}</h1>', '{% if cv.basics.label %}', '<h2>{{ cv.basics.label }}</h2>', '{% endif %}', '', '<div class=""cv-contact"">', '{% if cv.basics.email %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-envelope""></i> {{ cv.basics.email }}', '</div>', '{% endif %}', '', '{% if cv.basics.phone %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-phone""></i> {{ cv.basics.phone }}', '</div>', '{% endif %}', '', '{% if cv.basics.website %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-globe""></i> <a href=""{{ cv.basics.website }}"" target=""_blank"">{{ cv.basics.website }}</a>', '</div>', '{% endif %}', '', '{% if cv.basics.location.city %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-map-marker-alt""></i> {{ cv.basics.location.city }}{% if cv.basics.location.region %}, {{ cv.basics.location.region }}{% endif %}{% if cv.basics.location.countryCode %}, {{ cv.basics.location.countryCode }}{% endif %}', '</div>', '{% endif %}', '</div>', '', '{% if cv.basics.profiles.size > 0 %}', '<div class=""cv-profiles"">', '{% for profile in cv.basics.profiles %}', '<a href=""{{ profile.url }}"" target=""_blank"" class=""cv-profile-link"">', '<i class=""fab fa-{{ profile.network | downcase }}""></i> {{ profile.network }}', '</a>', '{% endfor %}', '</div>', '{% endif %}', '</div>', '', '{% if cv.basics.summary %}', '<!-- Summary -->', '<div class=""cv-section"">', '<h2>Summary</h2>', '<p>{{ cv.basics.summary }}</p>', '</div>', '{% endif %}', '', '{% if cv.education.size > 0 %}', '<!-- Education -->', '<div class=""cv-section"">', '<h2>Education</h2>', '<ul class=""cv-list"">', '{% for education in cv.education %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ education.area }}</div>', '<div class=""cv-item-date"">{{ education.endDate }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ education.institution }}</div>', '{% if education.gpa %}', '<div class=""cv-item-detail"">GPA: {{ education.gpa }}</div>', '{% endif %}', '{% if education.courses.size > 0 %}', '<div class=""cv-item-detail"">', '<strong>Courses:</strong> {{ education.courses | join: "", "" }}', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.work.size > 0 %}', '<!-- Work Experience -->', '<div class=""cv-section"">', '<h2>Work Experience</h2>', '<ul class=""cv-list"">', '{% for work in cv.work %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ work.position }}</div>', '<div class=""cv-item-date"">{{ work.startDate }}{% if work.endDate %} - {{ work.endDate }}{% endif %}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ work.company }}</div>', '{% if work.summary %}', '<div class=""cv-item-detail"">{{ work.summary }}</div>', '{% endif %}', '{% if work.highlights.size > 0 %}', '<ul class=""cv-highlights"">', '{% for highlight in work.highlights %}', '<li>{{ highlight }}</li>', '{% endfor %}', '</ul>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.skills.size > 0 %}', '<!-- Skills -->', '<div class=""cv-section"">', '<h2>Skills</h2>', '<div class=""cv-skills"">', '{% for skill in cv.skills %}', '<div class=""cv-skill-category"">', '<h3>{{ skill.name }}</h3>', '<ul class=""cv-skill-list"">', '{% for keyword in skill.keywords %}', '<li>{{ keyword }}</li>', '{% endfor %}', '</ul>', '</div>', '{% endfor %}', '</div>', '</div>', '{% endif %}', '', '{% if cv.publications.size > 0 %}', '<!-- Publications -->', '<div class=""cv-section"">', '<h2>Publications</h2>', '<ul class=""cv-list"">', '{% for publication in cv.publications %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ publication.name }}</div>', '<div class=""cv-item-date"">{{ publication.releaseDate | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ publication.publisher }}</div>', '{% if publication.summary %}', '<div class=""cv-item-detail"">{{ publication.summary }}</div>', '{% endif %}', '{% if publication.website %}', '<div class=""cv-item-detail"">', '<a href=""{{ publication.website }}"" target=""_blank"">View Publication</a>', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.presentations.size > 0 %}', '<!-- Presentations/Talks -->', '<div class=""cv-section"">', '<h2>Presentations</h2>', '<ul class=""cv-list"">', '{% for talk in cv.presentations %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ talk.name }}</div>', '<div class=""cv-item-date"">{{ talk.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ talk.event }}</div>', '{% if talk.location %}', '<div class=""cv-item-detail"">{{ talk.location }}</div>', '{% endif %}', '{% if talk.description %}', '<div class=""cv-item-detail"">{{ talk.description }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.teaching.size > 0 %}', '<!-- Teaching -->', '<div class=""cv-section"">', '<h2>Teaching</h2>', '<ul class=""cv-list"">', '{% for teaching in cv.teaching %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ teaching.course }}</div>', '<div class=""cv-item-date"">{{ teaching.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ teaching.institution }}</div>', '{% if teaching.role %}', '<div class=""cv-item-detail"">Role: {{ teaching.role }}</div>', '{% endif %}', '{% if teaching.description %}', '<div class=""cv-item-detail"">{{ teaching.description }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.portfolio.size > 0 %}', '<!-- Portfolio -->', '<div class=""cv-section"">', '<h2>Portfolio</h2>', '<ul class=""cv-list"">', '{% for item in cv.portfolio %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ item.name }}</div>', '<div class=""cv-item-date"">{{ item.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ item.category | capitalize }}</div>', '{% if item.description %}', '<div class=""cv-item-detail"">{{ item.description }}</div>', '{% endif %}', '{% if item.url %}', '<div class=""cv-item-detail"">', '<a href=""{{ item.url }}"" target=""_blank"">View Project</a>', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.languages.size > 0 %}', '<!-- Languages -->', '<div class=""cv-section"">', '<h2>Languages</h2>', '<ul class=""cv-list"">', '{% for language in cv.languages %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ language.language }}</div>', '<div class=""cv-item-detail"">{{ language.fluency }}</div>', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.interests.size > 0 %}', '<!-- Interests -->', '<div class=""cv-section"">', '<h2>Interests</h2>', '<ul class=""cv-list"">', '{% for interest in cv.interests %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ interest.name }}</div>', '{% if interest.keywords.size > 0 %}', '<div class=""cv-item-detail"">{{ interest.keywords | join: "", "" }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.references.size > 0 %}', '<!-- References -->', '<div class=""cv-section"">', '<h2>References</h2>', '<ul class=""cv-list"">', '{% for reference in cv.references %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ reference.name }}</div>', '{% if reference.reference %}', '<div class=""cv-item-detail"">{{ reference.reference }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '</div>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_layouts/cv-layout.html,added,"page does not exist
",[],"---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html class=""no-js"" en""="""" lang=""{{ site.locale | slice: 0,2 | default: "" }}""="""">
 <head>
  <meta charset=""utf-8""/>
  <meta content=""IE=edge"" http-equiv=""X-UA-Compatible""/>
  <meta content=""width=device-width, initial-scale=1.0"" name=""viewport""/>
  <title>
   {% if page.title %}{{ page.title | escape }}{% else %}{{ site.title | escape }}{% endif %} | {{ site.name | default: site.title }}
  </title>
  {% include head.html %}
    {% include head/custom.html %}
  <link href=""{{ site.baseurl }}/assets/css/cv-layout.css"" rel=""stylesheet""/>
 </head>
 <body class=""cv-layout"">
  {% include browser-upgrade.html %}
    {% include masthead.html %}
  <div id=""main"" role=""main"">
   <div class=""container"">
    {{ content }}
   </div>
  </div>
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['---', 'layout: compress', '---', '', '{% include base_path %}', '', '<!doctype html>', '<html lang=""{{ site.locale | slice: 0,2 | default: ""en"" }}"" class=""no-js"">', '<head>', '<meta charset=""utf-8"">', '<meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">', '<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">', '<title>{% if page.title %}{{ page.title | escape }}{% else %}{{ site.title | escape }}{% endif %} | {{ site.name | default: site.title }}</title>', '{% include head.html %}', '{% include head/custom.html %}', '<link rel=""stylesheet"" href=""{{ site.baseurl }}/assets/css/cv-layout.css"">', '</head>', '', '<body class=""cv-layout"">', '{% include browser-upgrade.html %}', '{% include masthead.html %}', '', '<div id=""main"" role=""main"">', '<div class=""container"">', '{{ content }}', '</div>', '</div>', '', '<div class=""page__footer"">', '<footer>', '{% include footer/custom.html %}', '{% include footer.html %}', '</footer>', '</div>', '', '{% include scripts.html %}', '', '</body>', '</html>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_pages/cv-json.md,added,"page does not exist
",[],"---
layout: archive
title: ""CV""
permalink: /cv-json/
author_profile: false
redirect_from:
  - /resume-json
---

{% include base_path %}
<link href=""{{ base_path }}/assets/css/cv-style.css"" rel=""stylesheet""/>
<link href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"" rel=""stylesheet""/>
<style>
 .archive {
    width: 80%;
    margin: 0 auto;
    float: none;
    padding-right: 0;
  }
  
  @media (min-width: 80em) {
    .archive {
      width: 70%;
    }
  }
</style>
{% include cv-template.html %}
<div class=""cv-download-links"">
 <a class=""btn btn--primary"" href=""{{ base_path }}/files/cv.pdf"">
  Download CV as PDF
 </a>
 <a class=""btn btn--inverse"" href=""{{ base_path }}"">
  View Markdown CV
 </a>
</div>
","['---', 'layout: archive', 'title: ""CV""', 'permalink: /cv-json/', 'author_profile: false', 'redirect_from:', '- /resume-json', '---', '', '{% include base_path %}', '', '<link rel=""stylesheet"" href=""{{ base_path }}/assets/css/cv-style.css"">', '<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"">', '', '<style>', '.archive {', 'width: 80%;', 'margin: 0 auto;', 'float: none;', 'padding-right: 0;', '}', '', '@media (min-width: 80em) {', '.archive {', 'width: 70%;', '}', '}', '</style>', '', '{% include cv-template.html %}', '', '<div class=""cv-download-links"">', '<a href=""{{ base_path }}/files/cv.pdf"" class=""btn btn--primary"">Download CV as PDF</a>', '<a href=""{{ base_path }}"" class=""btn btn--inverse"">View Markdown CV</a>', '</div>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,assets/css/cv-layout.css,added,"page does not exist
",[],"/* CV Layout Specific Styles */
.cv-header-nav {
  padding: 1rem 0;
  text-align: center;
  margin-bottom: 2rem;
  border-bottom: 1px solid #f2f2f2;
}

.cv-header-nav .home-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: #2a7ae2;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  font-weight: 500;
  transition: background-color 0.2s;
}

.cv-header-nav .home-button:hover {
  background-color: #1756a9;
}

.cv-container {
  max-width: 1000px;
  margin: 0 auto;
}

/* Download links styling */
.cv-download-links {
  margin-top: 2rem;
  text-align: center;
  padding: 1rem;
  border-top: 1px solid #f2f2f2;
}

.cv-download-links a {
  margin: 0 0.5rem;
}
","['/* CV Layout Specific Styles */', '.cv-header-nav {', 'padding: 1rem 0;', 'text-align: center;', 'margin-bottom: 2rem;', 'border-bottom: 1px solid #f2f2f2;', '}', '', '.cv-header-nav .home-button {', 'display: inline-flex;', 'align-items: center;', 'gap: 0.5rem;', 'padding: 0.5rem 1rem;', 'background-color: #2a7ae2;', 'color: white;', 'text-decoration: none;', 'border-radius: 4px;', 'font-weight: 500;', 'transition: background-color 0.2s;', '}', '', '.cv-header-nav .home-button:hover {', 'background-color: #1756a9;', '}', '', '.cv-container {', 'max-width: 1000px;', 'margin: 0 auto;', '}', '', '/* Download links styling */', '.cv-download-links {', 'margin-top: 2rem;', 'text-align: center;', 'padding: 1rem;', 'border-top: 1px solid #f2f2f2;', '}', '', '.cv-download-links a {', 'margin: 0 0.5rem;', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,assets/css/cv-style.css,added,"page does not exist
",[],"/* CV Template Styles */
.cv-container {
  max-width: 1000px;
  margin: 0 auto;
  font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  color: #333;
  line-height: 1.6;
}

/* Header Styles */
.cv-header {
  margin-bottom: 2rem;
  border-bottom: 2px solid #f2f2f2;
  padding-bottom: 1rem;
}

.cv-header h1 {
  margin-bottom: 0.5rem;
  color: #2a7ae2;
}

.cv-contact-info {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 0.5rem;
}

.cv-contact-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.cv-profiles {
  display: flex;
  gap: 1rem;
  margin-top: 0.5rem;
}

.cv-profile-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.cv-profile-item a {
  color: #2a7ae2;
  text-decoration: none;
}

.cv-profile-item a:hover {
  text-decoration: underline;
}

/* Section Styles */
.cv-section {
  margin-bottom: 2rem;
}

.cv-section h2 {
  border-bottom: 1px solid #f2f2f2;
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #2a7ae2;
}

.cv-section h2 i {
  color: #666;
}

/* Item Styles */
.cv-item {
  margin-bottom: 1.5rem;
}

.cv-item-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.cv-item-title {
  font-weight: bold;
  font-size: 1.1rem;
}

.cv-item-date {
  color: #666;
}

.cv-item-subtitle {
  color: #666;
  margin-bottom: 0.5rem;
}

.cv-item-summary {
  margin-bottom: 0.5rem;
}

.cv-item-highlights {
  margin-top: 0.5rem;
  padding-left: 1.5rem;
}

.cv-item-highlights li {
  margin-bottom: 0.25rem;
}

.cv-item-courses ul {
  margin-top: 0.25rem;
  padding-left: 1.5rem;
}

.cv-item-courses li {
  margin-bottom: 0.25rem;
}

/* Skills Styles */
.cv-skills {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.cv-skill-category h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.cv-skill-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.cv-skill-keyword {
  background-color: #f2f2f2;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* Project Styles */
.cv-project-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

.cv-project-keyword {
  background-color: #e6f3ff;
  color: #2a7ae2;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* Languages Styles */
.cv-languages {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.cv-language {
  display: flex;
  flex-direction: column;
}

.cv-language-name {
  font-weight: bold;
}

.cv-language-fluency {
  color: #666;
  font-size: 0.9rem;
}

/* Interests Styles */
.cv-interests {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.cv-interest h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.cv-interest-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.cv-interest-keyword {
  background-color: #f9f9f9;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* References Styles */
.cv-references {
  font-style: italic;
  color: #666;
}

/* Print Styles */
@media print {
  .cv-container {
    max-width: 100%;
  }
  
  .cv-header {
    border-bottom-color: #ccc;
  }
  
  .cv-section h2 {
    border-bottom-color: #ccc;
  }
  
  .cv-skill-keyword,
  .cv-project-keyword,
  .cv-interest-keyword {
    border: 1px solid #ccc;
    background-color: transparent;
  }
}
","['/* CV Template Styles */', '.cv-container {', 'max-width: 1000px;', 'margin: 0 auto;', ""font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;"", 'color: #333;', 'line-height: 1.6;', '}', '', '/* Header Styles */', '.cv-header {', 'margin-bottom: 2rem;', 'border-bottom: 2px solid #f2f2f2;', 'padding-bottom: 1rem;', '}', '', '.cv-header h1 {', 'margin-bottom: 0.5rem;', 'color: #2a7ae2;', '}', '', '.cv-contact-info {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 1rem;', 'margin-bottom: 0.5rem;', '}', '', '.cv-contact-item {', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', '}', '', '.cv-profiles {', 'display: flex;', 'gap: 1rem;', 'margin-top: 0.5rem;', '}', '', '.cv-profile-item {', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', '}', '', '.cv-profile-item a {', 'color: #2a7ae2;', 'text-decoration: none;', '}', '', '.cv-profile-item a:hover {', 'text-decoration: underline;', '}', '', '/* Section Styles */', '.cv-section {', 'margin-bottom: 2rem;', '}', '', '.cv-section h2 {', 'border-bottom: 1px solid #f2f2f2;', 'padding-bottom: 0.5rem;', 'margin-bottom: 1rem;', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', 'color: #2a7ae2;', '}', '', '.cv-section h2 i {', 'color: #666;', '}', '', '/* Item Styles */', '.cv-item {', 'margin-bottom: 1.5rem;', '}', '', '.cv-item-header {', 'display: flex;', 'justify-content: space-between;', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-title {', 'font-weight: bold;', 'font-size: 1.1rem;', '}', '', '.cv-item-date {', 'color: #666;', '}', '', '.cv-item-subtitle {', 'color: #666;', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-summary {', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-highlights {', 'margin-top: 0.5rem;', 'padding-left: 1.5rem;', '}', '', '.cv-item-highlights li {', 'margin-bottom: 0.25rem;', '}', '', '.cv-item-courses ul {', 'margin-top: 0.25rem;', 'padding-left: 1.5rem;', '}', '', '.cv-item-courses li {', 'margin-bottom: 0.25rem;', '}', '', '/* Skills Styles */', '.cv-skills {', 'display: grid;', 'grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));', 'gap: 1.5rem;', '}', '', '.cv-skill-category h3 {', 'margin-bottom: 0.5rem;', 'color: #333;', '}', '', '.cv-skill-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', '}', '', '.cv-skill-keyword {', 'background-color: #f2f2f2;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* Project Styles */', '.cv-project-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', 'margin-top: 0.5rem;', '}', '', '.cv-project-keyword {', 'background-color: #e6f3ff;', 'color: #2a7ae2;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* Languages Styles */', '.cv-languages {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 1rem;', '}', '', '.cv-language {', 'display: flex;', 'flex-direction: column;', '}', '', '.cv-language-name {', 'font-weight: bold;', '}', '', '.cv-language-fluency {', 'color: #666;', 'font-size: 0.9rem;', '}', '', '/* Interests Styles */', '.cv-interests {', 'display: grid;', 'grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));', 'gap: 1.5rem;', '}', '', '.cv-interest h3 {', 'margin-bottom: 0.5rem;', 'color: #333;', '}', '', '.cv-interest-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', '}', '', '.cv-interest-keyword {', 'background-color: #f9f9f9;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* References Styles */', '.cv-references {', 'font-style: italic;', 'color: #666;', '}', '', '/* Print Styles */', '@media print {', '.cv-container {', 'max-width: 100%;', '}', '', '.cv-header {', 'border-bottom-color: #ccc;', '}', '', '.cv-section h2 {', 'border-bottom-color: #ccc;', '}', '', '.cv-skill-keyword,', '.cv-project-keyword,', '.cv-interest-keyword {', 'border: 1px solid #ccc;', 'background-color: transparent;', '}', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,scripts/cv_markdown_to_json.py,added,"page does not exist
",[],"#!/usr/bin/env python3
""""""
Script to convert markdown CV to JSON format
Author: Yuan Chen
""""""

import os
import re
import json
import yaml
import argparse
from datetime import datetime, date
from pathlib import Path
import glob

# Custom JSON encoder to handle date objects
class DateTimeEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, (datetime, date)):
            return obj.isoformat()
        return super().default(obj)

def parse_markdown_cv(md_file):
    """"""Parse the markdown CV file and extract sections.""""""
    with open(md_file, 'r', encoding='utf-8') as file:
        content = file.read()
    
    # Remove YAML front matter
    content = re.sub(r'^---.*?---\s*', '', content, flags=re.DOTALL)
    
    # Extract sections
    sections = {}
    current_section = None
    section_content = []
    
    for line in content.split('\n'):
        if re.match(r'^=+$', line):
            continue
        
        section_match = re.match(r'^([A-Za-z\s]+)$', line.strip())
        if section_match and len(line.strip()) &gt; 0:
            if current_section:
                sections[current_section] = '\n'.join(section_content).strip()
                section_content = []
            current_section = section_match.group(1).strip()
        elif current_section:
            section_content.append(line)
    
    # Add the last section
    if current_section and section_content:
        sections[current_section] = '\n'.join(section_content).strip()
    
    return sections

def parse_config(config_file):
    """"""Parse the Jekyll _config.yml file for additional information.""""""
    if not os.path.exists(config_file):
        return {}
    
    with open(config_file, 'r', encoding='utf-8') as file:
        config = yaml.safe_load(file)
    
    return config

def extract_author_info(config):
    """"""Extract author information from the config file.""""""
    author_info = {
        ""name"": config.get('name', ''),
        ""email"": """",
        ""phone"": """",
        ""website"": config.get('url', ''),
        ""summary"": """",
        ""location"": {
            ""address"": """",
            ""postalCode"": """",
            ""city"": """",
            ""countryCode"": ""US"",
            ""region"": """"
        },
        ""profiles"": []
    }
    
    # Extract author details if available
    if 'author' in config:
        author = config.get('author', {})
        
        # Override name if author name is available
        if author.get('name'):
            author_info['name'] = author.get('name')
        
        # Add email
        if author.get('email'):
            author_info['email'] = author.get('email')
        
        # Add location
        if author.get('location'):
            author_info['location']['city'] = author.get('location', '')
        
        # Add employer as part of summary
        if author.get('employer'):
            author_info['summary'] = f""Currently employed at {author.get('employer')}""
        
        # Add bio to summary if available
        if author.get('bio'):
            if author_info['summary']:
                author_info['summary'] += f"". {author.get('bio')}""
            else:
                author_info['summary'] = author.get('bio')
        
        # Add social profiles
        profiles = []
        
        # Academic profiles
        if author.get('googlescholar'):
            profiles.append({
                ""network"": ""Google Scholar"",
                ""username"": """",
                ""url"": author.get('googlescholar')
            })
        
        if author.get('orcid'):
            profiles.append({
                ""network"": ""ORCID"",
                ""username"": """",
                ""url"": author.get('orcid')
            })
        
        if author.get('researchgate'):
            profiles.append({
                ""network"": ""ResearchGate"",
                ""username"": """",
                ""url"": author.get('researchgate')
            })
        
        # Social media profiles
        if author.get('github'):
            profiles.append({
                ""network"": ""GitHub"",
                ""username"": author.get('github'),
                ""url"": f""https://github.com/{author.get('github')}""
            })
        
        if author.get('linkedin'):
            profiles.append({
                ""network"": ""LinkedIn"",
                ""username"": author.get('linkedin'),
                ""url"": f""https://www.linkedin.com/in/{author.get('linkedin')}""
            })
        
        if author.get('twitter'):
            profiles.append({
                ""network"": ""Twitter"",
                ""username"": author.get('twitter'),
                ""url"": f""https://twitter.com/{author.get('twitter')}""
            })
        
        author_info['profiles'] = profiles
    
    return author_info

def parse_education(education_text):
    """"""Parse education section from markdown.""""""
    education_entries = []
    
    # Extract education entries
    entries = re.findall(r'\* (.*?)(?=\n\*|\Z)', education_text, re.DOTALL)
    
    for entry in entries:
        # Parse degree, institution, and year
        match = re.match(r'([^,]+), ([^,]+), (\d{4})(.*)', entry.strip())
        if match:
            degree, institution, year, additional = match.groups()
            
            # Extract GPA if available
            gpa_match = re.search(r'GPA: ([\d\.]+)', additional)
            gpa = gpa_match.group(1) if gpa_match else None
            
            education_entries.append({
                ""institution"": institution.strip(),
                ""area"": degree.strip(),
                ""studyType"": """",
                ""startDate"": """",
                ""endDate"": year.strip(),
                ""gpa"": gpa,
                ""courses"": []
            })
    
    return education_entries

def parse_work_experience(work_text):
    """"""Parse work experience section from markdown.""""""
    work_entries = []
    
    # Extract work entries
    entries = re.findall(r'\* (.*?)(?=\n\*|\Z)', work_text, re.DOTALL)
    
    for entry in entries:
        lines = entry.strip().split('\n')
        if not lines:
            continue
            
        # Parse position and company
        first_line = lines[0].strip()
        position_match = re.match(r'(.*?), (.*?)(?:, |$)', first_line)
        
        if position_match:
            position, company = position_match.groups()
            
            # Extract dates if available
            date_match = re.search(r'(\d{4})\s*-\s*(\d{4}|present)', entry, re.IGNORECASE)
            start_date = date_match.group(1) if date_match else """"
            end_date = date_match.group(2) if date_match else """"
            
            # Extract highlights
            highlights = []
            for line in lines[1:]:
                if line.strip().startswith('*') or line.strip().startswith('-'):
                    highlights.append(line.strip()[1:].strip())
            
            work_entries.append({
                ""company"": company.strip(),
                ""position"": position.strip(),
                ""website"": """",
                ""startDate"": start_date,
                ""endDate"": end_date,
                ""summary"": """",
                ""highlights"": highlights
            })
    
    return work_entries

def parse_skills(skills_text):
    """"""Parse skills section from markdown.""""""
    skills_entries = []
    
    # Extract skill categories
    categories = re.findall(r'(?:^|\n)(\w+.*?):\s*(.*?)(?=\n\w+.*?:|\Z)', skills_text, re.DOTALL)
    
    for category, skills in categories:
        # Extract individual skills
        skill_list = [s.strip() for s in re.split(r',|\n', skills) if s.strip()]
        
        skills_entries.append({
            ""name"": category.strip(),
            ""level"": """",
            ""keywords"": skill_list
        })
    
    return skills_entries

def parse_publications(pub_dir):
    """"""Parse publications from the _publications directory.""""""
    publications = []
    
    if not os.path.exists(pub_dir):
        return publications
    
    for pub_file in sorted(glob.glob(os.path.join(pub_dir, ""*.md""))):
        with open(pub_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract publication details
            pub_entry = {
                ""name"": front_matter.get('title', ''),
                ""publisher"": front_matter.get('venue', ''),
                ""releaseDate"": front_matter.get('date', ''),
                ""website"": front_matter.get('paperurl', ''),
                ""summary"": front_matter.get('excerpt', '')
            }
            
            publications.append(pub_entry)
    
    return publications

def parse_talks(talks_dir):
    """"""Parse talks from the _talks directory.""""""
    talks = []
    
    if not os.path.exists(talks_dir):
        return talks
    
    for talk_file in sorted(glob.glob(os.path.join(talks_dir, ""*.md""))):
        with open(talk_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract talk details
            talk_entry = {
                ""name"": front_matter.get('title', ''),
                ""event"": front_matter.get('venue', ''),
                ""date"": front_matter.get('date', ''),
                ""location"": front_matter.get('location', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            talks.append(talk_entry)
    
    return talks

def parse_teaching(teaching_dir):
    """"""Parse teaching from the _teaching directory.""""""
    teaching = []
    
    if not os.path.exists(teaching_dir):
        return teaching
    
    for teaching_file in sorted(glob.glob(os.path.join(teaching_dir, ""*.md""))):
        with open(teaching_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract teaching details
            teaching_entry = {
                ""course"": front_matter.get('title', ''),
                ""institution"": front_matter.get('venue', ''),
                ""date"": front_matter.get('date', ''),
                ""role"": front_matter.get('type', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            teaching.append(teaching_entry)
    
    return teaching

def parse_portfolio(portfolio_dir):
    """"""Parse portfolio items from the _portfolio directory.""""""
    portfolio = []
    
    if not os.path.exists(portfolio_dir):
        return portfolio
    
    for portfolio_file in sorted(glob.glob(os.path.join(portfolio_dir, ""*.md""))):
        with open(portfolio_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract portfolio details
            portfolio_entry = {
                ""name"": front_matter.get('title', ''),
                ""category"": front_matter.get('collection', 'portfolio'),
                ""date"": front_matter.get('date', ''),
                ""url"": front_matter.get('permalink', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            portfolio.append(portfolio_entry)
    
    return portfolio

def create_cv_json(md_file, config_file, repo_root, output_file):
    """"""Create a JSON CV from markdown and other repository data.""""""
    # Parse the markdown CV
    sections = parse_markdown_cv(md_file)
    
    # Parse config file
    config = parse_config(config_file)
    
    # Extract author information
    author_info = extract_author_info(config)
    
    # Create the JSON structure
    cv_json = {
        ""basics"": author_info,
        ""work"": parse_work_experience(sections.get('Work experience', '')),
        ""education"": parse_education(sections.get('Education', '')),
        ""skills"": parse_skills(sections.get('Skills', '')),
        ""languages"": [],
        ""interests"": [],
        ""references"": []
    }
    
    # Add publications
    cv_json[""publications""] = parse_publications(os.path.join(repo_root, ""_publications""))
    
    # Add talks
    cv_json[""presentations""] = parse_talks(os.path.join(repo_root, ""_talks""))
    
    # Add teaching
    cv_json[""teaching""] = parse_teaching(os.path.join(repo_root, ""_teaching""))
    
    # Add portfolio
    cv_json[""portfolio""] = parse_portfolio(os.path.join(repo_root, ""_portfolio""))
    
    # Extract languages and interests from config if available
    if 'languages' in config:
        cv_json[""languages""] = config.get('languages', [])
    
    if 'interests' in config:
        cv_json[""interests""] = config.get('interests', [])
    
    # Write the JSON to a file
    with open(output_file, 'w', encoding='utf-8') as file:
        json.dump(cv_json, file, indent=2, cls=DateTimeEncoder)
    
    print(f""Successfully converted {md_file} to {output_file}"")

def main():
    """"""Main function to parse arguments and run the conversion.""""""
    parser = argparse.ArgumentParser(description='Convert markdown CV to JSON format')
    parser.add_argument('--input', '-i', required=True, help='Input markdown CV file')
    parser.add_argument('--output', '-o', required=True, help='Output JSON file')
    parser.add_argument('--config', '-c', help='Jekyll _config.yml file')
    
    args = parser.parse_args()
    
    # Get repository root (parent directory of the input file's directory)
    repo_root = str(Path(args.input).parent.parent)
    
    create_cv_json(args.input, args.config, repo_root, args.output)

if __name__ == '__main__':
    main()
","['#!/usr/bin/env python3', '""""""', 'Script to convert markdown CV to JSON format', 'Author: Yuan Chen', '""""""', '', 'import os', 'import re', 'import json', 'import yaml', 'import argparse', 'from datetime import datetime, date', 'from pathlib import Path', 'import glob', '', '# Custom JSON encoder to handle date objects', 'class DateTimeEncoder(json.JSONEncoder):', 'def default(self, obj):', 'if isinstance(obj, (datetime, date)):', 'return obj.isoformat()', 'return super().default(obj)', '', 'def parse_markdown_cv(md_file):', '""""""Parse the markdown CV file and extract sections.""""""', ""with open(md_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Remove YAML front matter', ""content = re.sub(r'^---.*?---\\s*', '', content, flags=re.DOTALL)"", '', '# Extract sections', 'sections = {}', 'current_section = None', 'section_content = []', '', ""for line in content.split('\\n'):"", ""if re.match(r'^=+$', line):"", 'continue', '', ""section_match = re.match(r'^([A-Za-z\\s]+)$', line.strip())"", 'if section_match and len(line.strip()) > 0:', 'if current_section:', ""sections[current_section] = '\\n'.join(section_content).strip()"", 'section_content = []', 'current_section = section_match.group(1).strip()', 'elif current_section:', 'section_content.append(line)', '', '# Add the last section', 'if current_section and section_content:', ""sections[current_section] = '\\n'.join(section_content).strip()"", '', 'return sections', '', 'def parse_config(config_file):', '""""""Parse the Jekyll _config.yml file for additional information.""""""', 'if not os.path.exists(config_file):', 'return {}', '', ""with open(config_file, 'r', encoding='utf-8') as file:"", 'config = yaml.safe_load(file)', '', 'return config', '', 'def extract_author_info(config):', '""""""Extract author information from the config file.""""""', 'author_info = {', '""name"": config.get(\'name\', \'\'),', '""email"": """",', '""phone"": """",', '""website"": config.get(\'url\', \'\'),', '""summary"": """",', '""location"": {', '""address"": """",', '""postalCode"": """",', '""city"": """",', '""countryCode"": ""US"",', '""region"": """"', '},', '""profiles"": []', '}', '', '# Extract author details if available', ""if 'author' in config:"", ""author = config.get('author', {})"", '', '# Override name if author name is available', ""if author.get('name'):"", ""author_info['name'] = author.get('name')"", '', '# Add email', ""if author.get('email'):"", ""author_info['email'] = author.get('email')"", '', '# Add location', ""if author.get('location'):"", ""author_info['location']['city'] = author.get('location', '')"", '', '# Add employer as part of summary', ""if author.get('employer'):"", 'author_info[\'summary\'] = f""Currently employed at {author.get(\'employer\')}""', '', '# Add bio to summary if available', ""if author.get('bio'):"", ""if author_info['summary']:"", 'author_info[\'summary\'] += f"". {author.get(\'bio\')}""', 'else:', ""author_info['summary'] = author.get('bio')"", '', '# Add social profiles', 'profiles = []', '', '# Academic profiles', ""if author.get('googlescholar'):"", 'profiles.append({', '""network"": ""Google Scholar"",', '""username"": """",', '""url"": author.get(\'googlescholar\')', '})', '', ""if author.get('orcid'):"", 'profiles.append({', '""network"": ""ORCID"",', '""username"": """",', '""url"": author.get(\'orcid\')', '})', '', ""if author.get('researchgate'):"", 'profiles.append({', '""network"": ""ResearchGate"",', '""username"": """",', '""url"": author.get(\'researchgate\')', '})', '', '# Social media profiles', ""if author.get('github'):"", 'profiles.append({', '""network"": ""GitHub"",', '""username"": author.get(\'github\'),', '""url"": f""https://github.com/{author.get(\'github\')}""', '})', '', ""if author.get('linkedin'):"", 'profiles.append({', '""network"": ""LinkedIn"",', '""username"": author.get(\'linkedin\'),', '""url"": f""https://www.linkedin.com/in/{author.get(\'linkedin\')}""', '})', '', ""if author.get('twitter'):"", 'profiles.append({', '""network"": ""Twitter"",', '""username"": author.get(\'twitter\'),', '""url"": f""https://twitter.com/{author.get(\'twitter\')}""', '})', '', ""author_info['profiles'] = profiles"", '', 'return author_info', '', 'def parse_education(education_text):', '""""""Parse education section from markdown.""""""', 'education_entries = []', '', '# Extract education entries', ""entries = re.findall(r'\\* (.*?)(?=\\n\\*|\\Z)', education_text, re.DOTALL)"", '', 'for entry in entries:', '# Parse degree, institution, and year', ""match = re.match(r'([^,]+), ([^,]+), (\\d{4})(.*)', entry.strip())"", 'if match:', 'degree, institution, year, additional = match.groups()', '', '# Extract GPA if available', ""gpa_match = re.search(r'GPA: ([\\d\\.]+)', additional)"", 'gpa = gpa_match.group(1) if gpa_match else None', '', 'education_entries.append({', '""institution"": institution.strip(),', '""area"": degree.strip(),', '""studyType"": """",', '""startDate"": """",', '""endDate"": year.strip(),', '""gpa"": gpa,', '""courses"": []', '})', '', 'return education_entries', '', 'def parse_work_experience(work_text):', '""""""Parse work experience section from markdown.""""""', 'work_entries = []', '', '# Extract work entries', ""entries = re.findall(r'\\* (.*?)(?=\\n\\*|\\Z)', work_text, re.DOTALL)"", '', 'for entry in entries:', ""lines = entry.strip().split('\\n')"", 'if not lines:', 'continue', '', '# Parse position and company', 'first_line = lines[0].strip()', ""position_match = re.match(r'(.*?), (.*?)(?:, |$)', first_line)"", '', 'if position_match:', 'position, company = position_match.groups()', '', '# Extract dates if available', ""date_match = re.search(r'(\\d{4})\\s*-\\s*(\\d{4}|present)', entry, re.IGNORECASE)"", 'start_date = date_match.group(1) if date_match else """"', 'end_date = date_match.group(2) if date_match else """"', '', '# Extract highlights', 'highlights = []', 'for line in lines[1:]:', ""if line.strip().startswith('*') or line.strip().startswith('-'):"", 'highlights.append(line.strip()[1:].strip())', '', 'work_entries.append({', '""company"": company.strip(),', '""position"": position.strip(),', '""website"": """",', '""startDate"": start_date,', '""endDate"": end_date,', '""summary"": """",', '""highlights"": highlights', '})', '', 'return work_entries', '', 'def parse_skills(skills_text):', '""""""Parse skills section from markdown.""""""', 'skills_entries = []', '', '# Extract skill categories', ""categories = re.findall(r'(?:^|\\n)(\\w+.*?):\\s*(.*?)(?=\\n\\w+.*?:|\\Z)', skills_text, re.DOTALL)"", '', 'for category, skills in categories:', '# Extract individual skills', ""skill_list = [s.strip() for s in re.split(r',|\\n', skills) if s.strip()]"", '', 'skills_entries.append({', '""name"": category.strip(),', '""level"": """",', '""keywords"": skill_list', '})', '', 'return skills_entries', '', 'def parse_publications(pub_dir):', '""""""Parse publications from the _publications directory.""""""', 'publications = []', '', 'if not os.path.exists(pub_dir):', 'return publications', '', 'for pub_file in sorted(glob.glob(os.path.join(pub_dir, ""*.md""))):', ""with open(pub_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract publication details', 'pub_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""publisher"": front_matter.get(\'venue\', \'\'),', '""releaseDate"": front_matter.get(\'date\', \'\'),', '""website"": front_matter.get(\'paperurl\', \'\'),', '""summary"": front_matter.get(\'excerpt\', \'\')', '}', '', 'publications.append(pub_entry)', '', 'return publications', '', 'def parse_talks(talks_dir):', '""""""Parse talks from the _talks directory.""""""', 'talks = []', '', 'if not os.path.exists(talks_dir):', 'return talks', '', 'for talk_file in sorted(glob.glob(os.path.join(talks_dir, ""*.md""))):', ""with open(talk_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract talk details', 'talk_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""event"": front_matter.get(\'venue\', \'\'),', '""date"": front_matter.get(\'date\', \'\'),', '""location"": front_matter.get(\'location\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'talks.append(talk_entry)', '', 'return talks', '', 'def parse_teaching(teaching_dir):', '""""""Parse teaching from the _teaching directory.""""""', 'teaching = []', '', 'if not os.path.exists(teaching_dir):', 'return teaching', '', 'for teaching_file in sorted(glob.glob(os.path.join(teaching_dir, ""*.md""))):', ""with open(teaching_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract teaching details', 'teaching_entry = {', '""course"": front_matter.get(\'title\', \'\'),', '""institution"": front_matter.get(\'venue\', \'\'),', '""date"": front_matter.get(\'date\', \'\'),', '""role"": front_matter.get(\'type\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'teaching.append(teaching_entry)', '', 'return teaching', '', 'def parse_portfolio(portfolio_dir):', '""""""Parse portfolio items from the _portfolio directory.""""""', 'portfolio = []', '', 'if not os.path.exists(portfolio_dir):', 'return portfolio', '', 'for portfolio_file in sorted(glob.glob(os.path.join(portfolio_dir, ""*.md""))):', ""with open(portfolio_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract portfolio details', 'portfolio_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""category"": front_matter.get(\'collection\', \'portfolio\'),', '""date"": front_matter.get(\'date\', \'\'),', '""url"": front_matter.get(\'permalink\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'portfolio.append(portfolio_entry)', '', 'return portfolio', '', 'def create_cv_json(md_file, config_file, repo_root, output_file):', '""""""Create a JSON CV from markdown and other repository data.""""""', '# Parse the markdown CV', 'sections = parse_markdown_cv(md_file)', '', '# Parse config file', 'config = parse_config(config_file)', '', '# Extract author information', 'author_info = extract_author_info(config)', '', '# Create the JSON structure', 'cv_json = {', '""basics"": author_info,', '""work"": parse_work_experience(sections.get(\'Work experience\', \'\')),', '""education"": parse_education(sections.get(\'Education\', \'\')),', '""skills"": parse_skills(sections.get(\'Skills\', \'\')),', '""languages"": [],', '""interests"": [],', '""references"": []', '}', '', '# Add publications', 'cv_json[""publications""] = parse_publications(os.path.join(repo_root, ""_publications""))', '', '# Add talks', 'cv_json[""presentations""] = parse_talks(os.path.join(repo_root, ""_talks""))', '', '# Add teaching', 'cv_json[""teaching""] = parse_teaching(os.path.join(repo_root, ""_teaching""))', '', '# Add portfolio', 'cv_json[""portfolio""] = parse_portfolio(os.path.join(repo_root, ""_portfolio""))', '', '# Extract languages and interests from config if available', ""if 'languages' in config:"", 'cv_json[""languages""] = config.get(\'languages\', [])', '', ""if 'interests' in config:"", 'cv_json[""interests""] = config.get(\'interests\', [])', '', '# Write the JSON to a file', ""with open(output_file, 'w', encoding='utf-8') as file:"", 'json.dump(cv_json, file, indent=2, cls=DateTimeEncoder)', '', 'print(f""Successfully converted {md_file} to {output_file}"")', '', 'def main():', '""""""Main function to parse arguments and run the conversion.""""""', ""parser = argparse.ArgumentParser(description='Convert markdown CV to JSON format')"", ""parser.add_argument('--input', '-i', required=True, help='Input markdown CV file')"", ""parser.add_argument('--output', '-o', required=True, help='Output JSON file')"", ""parser.add_argument('--config', '-c', help='Jekyll _config.yml file')"", '', 'args = parser.parse_args()', '', ""# Get repository root (parent directory of the input file's directory)"", 'repo_root = str(Path(args.input).parent.parent)', '', 'create_cv_json(args.input, args.config, repo_root, args.output)', '', ""if __name__ == '__main__':"", 'main()']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,scripts/update_cv_json.sh,added,"page does not exist
",[],"#!/bin/bash

# Script to update the CV JSON file from the markdown CV
# Author: Yuan Chen

# Set the base directory to the repository root
BASE_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")/.."" &amp;&amp; pwd)""

# Define file paths
CV_MARKDOWN=""$BASE_DIR/_pages/cv.md""
CV_JSON=""$BASE_DIR/_data/cv.json""
CONFIG_FILE=""$BASE_DIR/_config.yml""

# Check if the Python script exists
PYTHON_SCRIPT=""$BASE_DIR/scripts/cv_markdown_to_json.py""
if [ ! -f ""$PYTHON_SCRIPT"" ]; then
  echo ""Error: Python script not found at $PYTHON_SCRIPT""
  exit 1
fi

# Check if the markdown CV exists
if [ ! -f ""$CV_MARKDOWN"" ]; then
  echo ""Error: Markdown CV not found at $CV_MARKDOWN""
  exit 1
fi

# Run the Python script to convert markdown to JSON
echo ""Converting markdown CV to JSON...""
python3 ""$PYTHON_SCRIPT"" --input ""$CV_MARKDOWN"" --output ""$CV_JSON"" --config ""$CONFIG_FILE""

# Check if the conversion was successful
if [ $? -eq 0 ]; then
  echo ""Successfully updated CV JSON file at $CV_JSON""
  
  # Optional: Build the Jekyll site to see the changes
  echo ""Would you like to build the Jekyll site to see the changes? (y/n)""
  read -r answer
  if [[ ""$answer"" =~ ^[Yy]$ ]]; then
    echo ""Building Jekyll site...""
    cd ""$BASE_DIR"" &amp;&amp; bundle exec jekyll serve
  fi
else
  echo ""Error: Failed to update CV JSON file""
  exit 1
fi

exit 0
","['#!/bin/bash', '', '# Script to update the CV JSON file from the markdown CV', '# Author: Yuan Chen', '', '# Set the base directory to the repository root', 'BASE_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")/.."" && pwd)""', '', '# Define file paths', 'CV_MARKDOWN=""$BASE_DIR/_pages/cv.md""', 'CV_JSON=""$BASE_DIR/_data/cv.json""', 'CONFIG_FILE=""$BASE_DIR/_config.yml""', '', '# Check if the Python script exists', 'PYTHON_SCRIPT=""$BASE_DIR/scripts/cv_markdown_to_json.py""', 'if [ ! -f ""$PYTHON_SCRIPT"" ]; then', 'echo ""Error: Python script not found at $PYTHON_SCRIPT""', 'exit 1', 'fi', '', '# Check if the markdown CV exists', 'if [ ! -f ""$CV_MARKDOWN"" ]; then', 'echo ""Error: Markdown CV not found at $CV_MARKDOWN""', 'exit 1', 'fi', '', '# Run the Python script to convert markdown to JSON', 'echo ""Converting markdown CV to JSON...""', 'python3 ""$PYTHON_SCRIPT"" --input ""$CV_MARKDOWN"" --output ""$CV_JSON"" --config ""$CONFIG_FILE""', '', '# Check if the conversion was successful', 'if [ $? -eq 0 ]; then', 'echo ""Successfully updated CV JSON file at $CV_JSON""', '', '# Optional: Build the Jekyll site to see the changes', 'echo ""Would you like to build the Jekyll site to see the changes? (y/n)""', 'read -r answer', 'if [[ ""$answer"" =~ ^[Yy]$ ]]; then', 'echo ""Building Jekyll site...""', 'cd ""$BASE_DIR"" && bundle exec jekyll serve', 'fi', 'else', 'echo ""Error: Failed to update CV JSON file""', 'exit 1', 'fi', '', 'exit 0']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_includes/masthead.html,modified,"{% include base_path %}
<div class=""masthead"">
 <div class=""masthead__inner-wrap"">
  <div class=""masthead__menu"">
   <nav class=""greedy-nav"" id=""site-nav"">
    <button>
     <div class=""navicon"">
     </div>
    </button>
    <ul class=""visible-links"">
     <li class=""masthead__menu-item masthead__menu-item--lg"">
      <a href=""{{ base_path }}/"">
       {{ site.title }}
      </a>
     </li>
     {% for link in site.data.navigation.main %}
            {% if link.url contains 'http' %}
              {% assign domain = '' %}
              {% else %}
              {% assign domain = base_path %}
            {% endif %}
     <li class=""masthead__menu-item"">
      <a href=""{{ domain }}{{ link.url }}"">
       {{ link.title }}
      </a>
     </li>
     {% endfor %}
    </ul>
    <ul class=""hidden-links hidden"">
    </ul>
   </nav>
  </div>
 </div>
</div>
","['<li class=""masthead__menu-item masthead__menu-item--lg""><a href=""{{ base_path }}/"">{{ site.title }}</a></li>', '{% else %}']","{% include base_path %}
<div class=""masthead"">
 <div class=""masthead__inner-wrap"">
  <div class=""masthead__menu"">
   <nav class=""greedy-nav"" id=""site-nav"">
    <button>
     <div class=""navicon"">
     </div>
    </button>
    <ul class=""visible-links"">
     <li class=""masthead__menu-item masthead__menu-item--lg persist"">
      <a href=""{{ base_path }}/"">
       {{ site.title }}
      </a>
     </li>
     {% for link in site.data.navigation.main %}
            {% if link.url contains 'http' %}
              {% assign domain = '' %}
            {% else %}
              {% assign domain = base_path %}
            {% endif %}
     <li class=""masthead__menu-item"">
      <a href=""{{ domain }}{{ link.url }}"">
       {{ link.title }}
      </a>
     </li>
     {% endfor %}
     <li class=""masthead__menu-item persist tail"" id=""theme-toggle"">
      <a>
       <i aria-hidden=""true"" class=""fa-solid fa-sun"" id=""theme-icon"" title=""toggle theme"">
       </i>
      </a>
     </li>
    </ul>
    <ul class=""hidden-links hidden"">
    </ul>
   </nav>
  </div>
 </div>
</div>
","['<li class=""masthead__menu-item masthead__menu-item--lg persist""><a href=""{{ base_path }}/"">{{ site.title }}</a></li>', '{% else %}', '<li id=""theme-toggle"" class=""masthead__menu-item persist tail"">', '<a><i id=""theme-icon"" class=""fa-solid fa-sun"" aria-hidden=""true"" title=""toggle theme""></i></a>', '</li>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_layouts/default.html,modified,"---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html class=""no-js"" lang=""{{ site.locale | slice: 0,2 }}"">
 <head>
  {% include head.html %}
    {% include head/custom.html %}
 </head>
 <body>
  {% include browser-upgrade.html %}
    {% include masthead.html %}

    {{ content }}
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['<html lang=""{{ site.locale | slice: 0,2 }}"" class=""no-js"">']","---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html %}="""" class=""no-js"" data-theme=""dark"" endif="""" if="""" lang=""{{ site.locale | slice: 0,2 }}"" site.site_theme=""dark"" {%="""">
 <head>
  {% include head.html %}
    {% include head/custom.html %}
 </head>
 <body>
  {% include browser-upgrade.html %}
    {% include masthead.html %}

    {{ content }}
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['<html lang=""{{ site.locale | slice: 0,2 }}"" class=""no-js""{% if site.site_theme == ""dark"" %} data-theme=""dark""{% endif %}>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/layout/_masthead.scss,modified,"/* ==========================================================================
   MASTHEAD
   ========================================================================== */

.masthead {
  position: fixed;
  background: var(--global-bg-color);
  border-bottom: 1px solid var(--global-border-color);
  height: $masthead-height;
  top: 0;
  width: 100%;

  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
  z-index: 20;

  &amp;__inner-wrap {
    @include container;
    @include clearfix;
    padding: 1em 1em 1em;
    font-family: $sans-serif-narrow;

    @include breakpoint($x-large) {
      max-width: $x-large;
    }

    nav {
      z-index: 10;
    }

    a {
      text-decoration: none;
    }
  }
}

.masthead__menu {

  ul {
    margin: 0;
    padding: 0;
    clear: both;
    list-style-type: none;
  }
}

.masthead__menu-item {
  background-color: var(--global-bg-color);
  display: block;
  list-style-type: none;
  white-space: nowrap;

  &amp;--lg {
    padding-right: 2em;
    font-weight: 700;
  }
}
","['border-bottom: 1px solid var(--global-border-color);', 'height: $masthead-height;', 'padding: 1em 1em 1em;']","/* ==========================================================================
   MASTHEAD
   ========================================================================== */

.masthead {
  position: fixed;
  background: var(--global-bg-color);
  height: fit-content;
  top: 0;
  width: 100%;

  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
  z-index: 20;

  &amp;::after {
    content: """";
    position: absolute;
    bottom: 0;
    height: 1px;
    background: var(--global-border-color);
    width: 100%;
  }

  &amp;__inner-wrap {
    @include container;
    @include clearfix;
    padding: 0.5em 1em;
    font-family: $sans-serif-narrow;

    @include breakpoint($x-large) {
      max-width: $x-large;
    }

    nav {
      z-index: 10;
    }

    a {
      text-decoration: none;
    }
  }
}

.masthead__menu {

  ul {
    margin: 0;
    padding: 0;
    clear: both;
    list-style-type: none;
  }
}

.masthead__menu-item {
  background-color: var(--global-bg-color);
  display: block;
  list-style-type: none;
  white-space: nowrap;

  &amp;--lg {
    padding-right: 2em;
    font-weight: 700;
  }
}
","['height: fit-content;', '&::after {', 'content: """";', 'position: absolute;', 'bottom: 0;', 'height: 1px;', 'background: var(--global-border-color);', 'width: 100%;', '}', '', 'padding: 0.5em 1em;']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/layout/_navigation.scss,modified,"/* ==========================================================================
   NAVIGATION
   ========================================================================== */

/*
   Breadcrumb navigation links
   ========================================================================== */

.breadcrumbs {
  @include container;
  @include clearfix;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
  padding-right: 2em;
  font-family: $sans-serif;
  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.30s;
          animation-delay: 0.30s;

  @include breakpoint($large) {
    padding-left: 1em;
    padding-right: 1em;
  }

  @include breakpoint($x-large) {
    max-width: $x-large;
  }

  ol {
    padding: 0;
    list-style: none;
    font-size: $type-size-6;

    @include breakpoint($large) {
      @include span(10 of 12 last);
    }

    @include breakpoint($x-large) {
      @include prefix(0.5 of 12);
    }
  }

  li {
    display: inline;
  }

  .current {
    font-weight: bold;
  }
}


/*
   Post pagination navigation links
   ========================================================================== */

.pagination {
  @include full();
  @include clearfix();
  margin-top: 1em;
  padding-top: 1em;

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    font-family: $sans-serif;
  }

  li {
    display: block;
    float: left;
    margin-left: -1px;

    a {
      margin-bottom: 0.25em;
      padding: 0.5em 1em;
      font-family: $sans-serif;
      font-size: 14px;
      font-weight: bold;
      line-height: 1.5;
      text-align: center;
      text-decoration: none;
      color: var(--global-text-color-light);
      border: 1px solid var(var(--global-border-color));
      border-radius: 0;

      &amp;:hover {
        color: var(--global-link-color-hover);
      }

      &amp;.current {
        color: #fff;
        background: var(--global-base-color);
      }

      &amp;.disabled {
        color: var(--global-text-color-light);
        pointer-events: none;
        cursor: not-allowed;
      }
    }

    &amp;:first-child {
      margin-left: 0;

      a {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
      }
    }

    &amp;:last-child {
      a {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }
    }
  }

  /* next/previous buttons */
  &amp;--pager {
    display: block;
    padding: 1em 2em;
    float: left;
    width: 50%;
    font-family: $sans-serif;
    font-size: $type-size-5;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--global-text-color-light);
    border: 1px solid var(var(--global-border-color));
    border-radius: $border-radius;

    &amp;:hover {
      color: var(--global-link-color-hover);
    }

    &amp;:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &amp;:last-child {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &amp;.disabled {
      color: var(--global-text-color-light);
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}

.page__content + .pagination,
.page__meta + .pagination,
.page__share + .pagination,
.page__comments + .pagination {
  margin-top: 2em;
  padding-top: 2em;
  border-top: 1px solid var(--global-border-color);
}


/*
   Priority plus navigation
   ========================================================================== */

.greedy-nav {
  position: relative;
  min-width: 250px;
  background: var(--global-bg-color);

  a {
    display: block;
    margin: 0 1rem;
    padding: 0.5rem 0;
    color: var(--global-masthead-link-color);
    text-decoration: none;

    &amp;:hover {
      color: var(--global-masthead-link-color-hover);
    }
  }

  button {
    position: absolute;
    height: 2.5rem;
    right: 0;
    padding: 0 0.5rem;
    border: 0;
    outline: none;
    background-color: var(--global-base-color);
    color: #fff;
    cursor: pointer;
    z-index: 100;
  }

  .visible-links {
    display: table;

    li {
      display: table-cell;
      vertical-align: middle;

      &amp;:first-child {
        font-weight: bold;
        text-wrap: wrap;

        a {
          margin-left: 0;
        }
      }

      &amp;:last-child {
        a {
          margin-right: 0;
        }
      }
    }

    a {
      position: relative;

      &amp;:before {
        content: """";
        position: absolute;
        left: 0;
        bottom: 0;
        height: 4px;
        background: var(--global-border-color);
        width: 100%;
        -webkit-transition: $global-transition;
        transition: $global-transition;
        -webkit-transform: scaleX(0);
            -ms-transform: scaleX(0);
                transform: scaleX(0); /* hide*/
      }

      &amp;:hover:before {
        -webkit-transform: scaleX(1);
            -ms-transform: scaleX(1);
                transform: scaleX(1); /* reveal*/
      }
    }
  }

  .hidden-links {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 15px;
    padding: 5px;
    border: 1px solid var(--global-border-color);
    border-radius: $border-radius;
    background: #fff;
    box-shadow: 0 0 10px rgba(#000, 0.25);

    a {
      margin: 0;
      padding: 10px 20px;
      font-size: $type-size-5;

      &amp;:hover {
        color: var(--global-masthead-link-color-hover);
        background: var(--global-border-color);
      }
    }

    &amp;:before {
      content: """";
      position: absolute;
      top: -11px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: var(--global-border-color) transparent;
      display: block;
      z-index: 0;
    }

    &amp;:after {
      content: """";
      position: absolute;
      top: -10px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: #fff transparent;
      display: block;
      z-index: 1;
    }

    li {
      display: block;
      border-bottom: 1px solid var(--global-border-color);

      &amp;:last-child {
        border-bottom: none;
      }
    }
  }
}


/*
   Navigation list
   ========================================================================== */

.nav__list {
  font-size: 1.25rem;

  ul {
    margin-bottom: 1em;
  }

  a {
    display: block;
    padding: 0.125em 0;
    color: inherit;

    &amp;:hover {
      text-decoration: underline;
    }
  }

  .active {
    margin-left: -0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    color: #fff;
    font-weight: bold;
    background: var(--global-base-color);
    border-radius: $border-radius;

    &amp;:hover {
      color: #fff;
    }
  }
}

.nav__title {
  margin: 0;
  padding: 0.5rem 1rem;
  font-family: $sans-serif-narrow;
  font-size: $type-size-5;
  font-weight: bold;
}

.nav__sub-title {
  display: block;
  margin: 0.5rem 0;
  padding: 0.5rem 0;
  font-family: $sans-serif-narrow;
  font-size: $type-size-6;
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 1px solid var(--global-border-color);
}


/*
   Table of contents navigation
   ========================================================================== */

.toc {
  font-family: $sans-serif-narrow;
  color: var(--global-text-color-light);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #fff;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  .nav__title {
    color: #fff;
    font-size: $type-size-6;
    background: var(--global-base-color);
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}

.toc__menu {
  margin: 0;
  padding: 0;
  width: 100%;
  list-style: none;
  font-size: 0.8rem;

  a {
    display: block;
    padding: 0.5rem 1rem;
    color: var(--global-text-color-light);
    font-size: $type-size-7;
    font-weight: bold;
    line-height: 1.5;
    border-bottom: 1px solid var(--global-border-color);
    text-decoration-line: none !important;

    &amp;:hover {
      color: #000;
      background: var(--global-link-color-hover);
    }
  }

  &gt; li:last-child {
    a {
      border-bottom: none;
    }
  }

  li ul &gt; li a {
    padding-left: 2rem;
    font-weight: normal;
  }

  /* hide sub sub links on small screens*/
  li &gt; ul li {
    display: none;

    @include breakpoint($medium) {
      display: block;
    }
  }
}
",[],"/* ==========================================================================
   NAVIGATION
   ========================================================================== */

/*
   Breadcrumb navigation links
   ========================================================================== */

.breadcrumbs {
  @include container;
  @include clearfix;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
  padding-right: 2em;
  font-family: $sans-serif;
  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.30s;
          animation-delay: 0.30s;

  @include breakpoint($large) {
    padding-left: 1em;
    padding-right: 1em;
  }

  @include breakpoint($x-large) {
    max-width: $x-large;
  }

  ol {
    padding: 0;
    list-style: none;
    font-size: $type-size-6;

    @include breakpoint($large) {
      @include span(10 of 12 last);
    }

    @include breakpoint($x-large) {
      @include prefix(0.5 of 12);
    }
  }

  li {
    display: inline;
  }

  .current {
    font-weight: bold;
  }
}


/*
   Post pagination navigation links
   ========================================================================== */

.pagination {
  @include full();
  @include clearfix();
  margin-top: 1em;
  padding-top: 1em;

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    font-family: $sans-serif;
  }

  li {
    display: block;
    float: left;
    margin-left: -1px;

    a {
      margin-bottom: 0.25em;
      padding: 0.5em 1em;
      font-family: $sans-serif;
      font-size: 14px;
      font-weight: bold;
      line-height: 1.5;
      text-align: center;
      text-decoration: none;
      color: var(--global-text-color-light);
      border: 1px solid var(var(--global-border-color));
      border-radius: 0;

      &amp;:hover {
        color: var(--global-link-color-hover);
      }

      &amp;.current {
        color: #fff;
        background: var(--global-base-color);
      }

      &amp;.disabled {
        color: var(--global-text-color-light);
        pointer-events: none;
        cursor: not-allowed;
      }
    }

    &amp;:first-child {
      margin-left: 0;

      a {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
      }
    }

    &amp;:last-child {
      a {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }
    }
  }

  /* next/previous buttons */
  &amp;--pager {
    display: block;
    padding: 1em 2em;
    float: left;
    width: 50%;
    font-family: $sans-serif;
    font-size: $type-size-5;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--global-text-color-light);
    border: 1px solid var(var(--global-border-color));
    border-radius: $border-radius;

    &amp;:hover {
      color: var(--global-link-color-hover);
    }

    &amp;:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &amp;:last-child {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &amp;.disabled {
      color: var(--global-text-color-light);
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}

.page__content + .pagination,
.page__meta + .pagination,
.page__share + .pagination,
.page__comments + .pagination {
  margin-top: 2em;
  padding-top: 2em;
  border-top: 1px solid var(--global-border-color);
}


/*
   Priority plus navigation
   ========================================================================== */

.greedy-nav {
  position: relative;
  min-width: 250px;
  background: var(--global-bg-color);

  a {
    display: block;
    margin: 0 1rem;
    padding: 0.5rem 0;
    color: var(--global-masthead-link-color);
    text-decoration: none;

    &amp;:hover {
      color: var(--global-masthead-link-color-hover);
    }
  }

  button {
    position: absolute;
    height: 2.5rem;
    right: 0;
    padding: 0 0.5rem;
    border: 0;
    outline: none;
    background-color: var(--global-base-color);
    color: #fff;
    cursor: pointer;
    z-index: 100;
  }

  .visible-links {
    display: table;

    li {
      display: table-cell;
      vertical-align: middle;

      &amp;:first-child {
        font-weight: bold;
        text-wrap: wrap;

        a {
          margin-left: 0;
        }
      }

      &amp;:last-child {
        a {
          margin-right: 0;
        }
      }
    }

    #theme-toggle {
      a {
        width: 25px;
        display: flex;
        justify-content: center;
        cursor: pointer;
      }
    }

    a {
      position: relative;

      &amp;:before {
        content: """";
        position: absolute;
        left: 0;
        bottom: 0;
        height: 4px;
        background: var(--global-border-color);
        width: 100%;
        -webkit-transition: $global-transition;
        transition: $global-transition;
        -webkit-transform: scaleX(0);
            -ms-transform: scaleX(0);
                transform: scaleX(0); /* hide*/
      }

      &amp;:hover:before {
        -webkit-transform: scaleX(1);
            -ms-transform: scaleX(1);
                transform: scaleX(1); /* reveal*/
      }
    }
  }

  .hidden-links {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 15px;
    padding: 5px;
    border: 1px solid var(--global-border-color);
    border-radius: $border-radius;
    background: #fff;
    box-shadow: 0 0 10px rgba(#000, 0.25);

    a {
      margin: 0;
      padding: 10px 20px;
      font-size: $type-size-5;

      &amp;:hover {
        color: var(--global-masthead-link-color-hover);
        background: var(--global-border-color);
      }
    }

    &amp;:before {
      content: """";
      position: absolute;
      top: -11px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: var(--global-border-color) transparent;
      display: block;
      z-index: 0;
    }

    &amp;:after {
      content: """";
      position: absolute;
      top: -10px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: #fff transparent;
      display: block;
      z-index: 1;
    }

    li {
      display: block;
      border-bottom: 1px solid var(--global-border-color);

      &amp;:last-child {
        border-bottom: none;
      }
    }
  }
}


/*
   Navigation list
   ========================================================================== */

.nav__list {
  font-size: 1.25rem;

  ul {
    margin-bottom: 1em;
  }

  a {
    display: block;
    padding: 0.125em 0;
    color: inherit;

    &amp;:hover {
      text-decoration: underline;
    }
  }

  .active {
    margin-left: -0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    color: #fff;
    font-weight: bold;
    background: var(--global-base-color);
    border-radius: $border-radius;

    &amp;:hover {
      color: #fff;
    }
  }
}

.nav__title {
  margin: 0;
  padding: 0.5rem 1rem;
  font-family: $sans-serif-narrow;
  font-size: $type-size-5;
  font-weight: bold;
}

.nav__sub-title {
  display: block;
  margin: 0.5rem 0;
  padding: 0.5rem 0;
  font-family: $sans-serif-narrow;
  font-size: $type-size-6;
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 1px solid var(--global-border-color);
}


/*
   Table of contents navigation
   ========================================================================== */

.toc {
  font-family: $sans-serif-narrow;
  color: var(--global-text-color-light);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #fff;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  .nav__title {
    color: #fff;
    font-size: $type-size-6;
    background: var(--global-base-color);
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}

.toc__menu {
  margin: 0;
  padding: 0;
  width: 100%;
  list-style: none;
  font-size: 0.8rem;

  a {
    display: block;
    padding: 0.5rem 1rem;
    color: var(--global-text-color-light);
    font-size: $type-size-7;
    font-weight: bold;
    line-height: 1.5;
    border-bottom: 1px solid var(--global-border-color);
    text-decoration-line: none !important;

    &amp;:hover {
      color: #000;
      background: var(--global-link-color-hover);
    }
  }

  &gt; li:last-child {
    a {
      border-bottom: none;
    }
  }

  li ul &gt; li a {
    padding-left: 2rem;
    font-weight: normal;
  }

  /* hide sub sub links on small screens*/
  li &gt; ul li {
    display: none;

    @include breakpoint($medium) {
      display: block;
    }
  }
}
","['#theme-toggle {', 'a {', 'width: 25px;', 'display: flex;', 'justify-content: center;', 'cursor: pointer;', '}', '}', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/layout/_sidebar.scss,modified,"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;
   
  @media (orientation: portrait) {
    margin-top: 5em;
  }

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
","['', 'margin-top: 5em;']","/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;

  @media (orientation: portrait) {
    margin-top: 1em;
  }

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
","['', 'margin-top: 1em;']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/theme/_dark.scss,modified,"/* ==========================================================================
   DARK THEME
   ========================================================================== */

/* Color codes used for the theme */
$gray                       : #7a8288;
$dark-gray                  : mix(#000, $gray, 40%);
$darker-gray                : mix(#000, $gray, 60%);
$light-gray                 : mix(#fff, $gray, 50%);

$background                 : #474747;
$background-light           : mix(#fff, $background, 80%);
$background-lighter         : mix(#fff, $background, 90%);
$text                       : #ffffff;
$link                       : #0ea1c5;
$link-dark                  : mix(#000, $link, 25%);
$link-light                 : mix(#fff, $link, 25%);

/* Color codes used for the site */
$danger-color               : #ee5f5b;
$info-color                 : #2f7f93;
$notice-color               : #7a8288;
$success-color              : #62c462;
$warning-color              : #f89406;

/* Other basic settings for the template */
$border-radius              : 4px;
$box-shadow                 : 0 1px 1px rgba(0, 0, 0, 0.125);
$global-transition          : all 0.2s ease-in-out;
$masthead-height            : 70px;
$navicon-width              : 28px;
$navicon-height             : 4px;
$sidebar-link-max-width     : 250px;
$sidebar-screen-min-width   : 1024px;

/* Dark theme for the site */
:root {
    --global-base-color                 : #{$background};
    --global-bg-color                   : #{$background};
    --global-border-color               : #{$background-light};
    --global-code-background-color      : #fafafa;
    --global-code-text-color            : #{$darker-gray};
    --global-fig-caption-color          : #{$dark-gray};
    --global-link-color                 : #{$link};
    --global-link-color-hover           : #{$link-dark};
    --global-link-color-visited         : #{$link-light};    
    --global-masthead-link-color        : #{$text};
    --global-masthead-link-color-hover  : #{$background-light};    
    --global-text-color                 : #{$text};
    --global-text-color-light           : #{$light-gray};
    --global-thead-color                : #{$background-lighter};
}
","[':root {', '--global-link-color-visited         : #{$link-light};', '--global-masthead-link-color-hover  : #{$background-light};']","/* ==========================================================================
   DARK THEME
   ========================================================================== */

/* Color codes used for the theme */
$gray                       : #7a8288;
$dark-gray                  : mix(#000, $gray, 40%);
$darker-gray                : mix(#000, $gray, 60%);
$light-gray                 : mix(#fff, $gray, 50%);

$background                 : #474747;
$background-light           : mix(#fff, $background, 80%);
$background-lighter         : mix(#fff, $background, 90%);
$text                       : #ffffff;
$link                       : #0ea1c5;
$link-dark                  : mix(#000, $link, 25%);
$link-light                 : mix(#fff, $link, 25%);

/* Color codes used for the site */
$danger-color               : #ee5f5b;
$info-color                 : #2f7f93;
$notice-color               : #7a8288;
$success-color              : #62c462;
$warning-color              : #f89406;

/* Other basic settings for the template */
$border-radius              : 4px;
$box-shadow                 : 0 1px 1px rgba(0, 0, 0, 0.125);
$global-transition          : all 0.2s ease-in-out;
$masthead-height            : 70px;
$navicon-width              : 28px;
$navicon-height             : 4px;
$sidebar-link-max-width     : 250px;
$sidebar-screen-min-width   : 1024px;

/* Dark theme for the site */
html[data-theme=""dark""] {
    --global-base-color                 : #{$background};
    --global-bg-color                   : #{$background};
    --global-border-color               : #{$background-light};
    --global-code-background-color      : #fafafa;
    --global-code-text-color            : #{$darker-gray};
    --global-fig-caption-color          : #{$dark-gray};
    --global-link-color                 : #{$link};
    --global-link-color-hover           : #{$link-dark};
    --global-link-color-visited         : #{$link-light};
    --global-masthead-link-color        : #{$text};
    --global-masthead-link-color-hover  : #{$background-light};
    --global-text-color                 : #{$text};
    --global-text-color-light           : #{$light-gray};
    --global-thead-color                : #{$background-lighter};
}
","['html[data-theme=""dark""] {', '--global-link-color-visited         : #{$link-light};', '--global-masthead-link-color-hover  : #{$background-light};']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/css/main.scss,modified,"---
---

/*
 * This file controls what is imported from /_sass
 *
 * Note that the files are processed in the order they are imported, so they are partly
   sorted by the dependencies. Also, the first two lines of the file are required by Jekyll.
 */

@import 
    ""vendor/breakpoint/breakpoint"",

    ""themes"",
    ""theme/{{ site.site_theme | default: 'default' }}"",

    ""include/mixins"",
    ""vendor/susy/susy"",

    ""layout/reset"",
    ""layout/base"",

    ""include/utilities"",
    ""layout/tables"",
    ""layout/buttons"",
    ""layout/notices"",
    ""layout/masthead"",
    ""layout/navigation"",
    ""layout/footer"",
    ""syntax"",

    ""layout/forms"",

    ""layout/page"",
    ""layout/archive"",
    ""layout/sidebar"",
    
    ""vendor/font-awesome/fontawesome"",
    ""vendor/font-awesome/solid"",
    ""vendor/font-awesome/brands"",
    ""vendor/magnific-popup/magnific-popup""
;
","['@import', '""theme/{{ site.site_theme | default: \'default\' }}"",', '']","---
---

/*
 * This file controls what is imported from /_sass
 *
 * Note that the files are processed in the order they are imported, so they are partly
   sorted by the dependencies. Also, the first two lines of the file are required by Jekyll.
 */

@import
    ""vendor/breakpoint/breakpoint"",

    ""themes"",
    ""theme/default"",
    ""theme/dark"",

    ""include/mixins"",
    ""vendor/susy/susy"",

    ""layout/reset"",
    ""layout/base"",

    ""include/utilities"",
    ""layout/tables"",
    ""layout/buttons"",
    ""layout/notices"",
    ""layout/masthead"",
    ""layout/navigation"",
    ""layout/footer"",
    ""syntax"",

    ""layout/forms"",

    ""layout/page"",
    ""layout/archive"",
    ""layout/sidebar"",

    ""vendor/font-awesome/fontawesome"",
    ""vendor/font-awesome/solid"",
    ""vendor/font-awesome/brands"",
    ""vendor/magnific-popup/magnific-popup""
;
","['@import', '""theme/default"",', '""theme/dark"",', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/js/_main.js,modified,"/* ==========================================================================
   jQuery plugin settings and other scripts
   ========================================================================== */

$(document).ready(function(){
  // These should be the same as the settings in _variables.scss
  scssLarge = 925; // pixels

  // Sticky footer
  var bumpIt = function() {
      $(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));
    },
    didResize = false;

  bumpIt();

  $(window).resize(function() {
    didResize = true;
  });
  setInterval(function() {
    if (didResize) {
      didResize = false;
      bumpIt();
    }
  }, 250);
  
  // FitVids init
  fitvids();

  // Follow menu drop down
  $("".author__urls-wrapper button"").on(""click"", function() {
    $("".author__urls"").fadeToggle(""fast"", function() {});
    $("".author__urls-wrapper button"").toggleClass(""open"");
  });

  // Restore the follow menu if toggled on a window resize
  jQuery(window).on('resize', function() {
    if ($('.author__urls.social-icons').css('display') == 'none' &amp;&amp; $(window).width() &gt;= scssLarge) {
      $("".author__urls"").css('display', 'block')
    }
  });    

  // init smooth scroll, this needs to be slightly more than then fixed masthead height
  $(""a"").smoothScroll({offset: -65});

  // add lightbox class to all image links
  $(""a[href$='.jpg'],a[href$='.jpeg'],a[href$='.JPG'],a[href$='.png'],a[href$='.gif']"").addClass(""image-popup"");

  // Magnific-Popup options
  $("".image-popup"").magnificPopup({
    type: 'image',
    tLoading: 'Loading image #%curr%...',
    gallery: {
      enabled: true,
      navigateByImgClick: true,
      preload: [0,1] // Will preload 0 - before current, and 1 after the current image
    },
    image: {
      tError: '
<a href=""%url%"">
 Image #%curr%
</a>
could not be loaded.',
    },
    removalDelay: 500, // Delay in milliseconds before popup is removed
    // Class that is added to body when popup is open.
    // make it unique to apply your CSS animations just to this exact popup
    mainClass: 'mfp-zoom-in',
    callbacks: {
      beforeOpen: function() {
        // just a hack that adds mfp-anim class to markup
        this.st.image.markup = this.st.image.markup.replace('mfp-figure', 'mfp-figure mfp-with-anim');
      }
    },
    closeOnContentClick: true,
    midClick: true // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
  });

});
","['$(document).ready(function(){', 'scssLarge = 925; // pixels', 'var bumpIt = function() {', '$(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));', '},', '$(window).resize(function() {', 'setInterval(function() {', '', '$("".author__urls-wrapper button"").on(""click"", function() {', '$("".author__urls"").fadeToggle(""fast"", function() {});', ""jQuery(window).on('resize', function() {"", '});', '$(""a"").smoothScroll({offset: -65});', 'preload: [0,1] // Will preload 0 - before current, and 1 after the current image', 'beforeOpen: function() {']","/* ==========================================================================
   jQuery plugin settings and other scripts
   ========================================================================== */

$(document).ready(function () {
  // Set the theme on page load
  var setTheme = function (theme) {
    const use_theme = theme || localStorage.getItem(""theme"") || $(""html"").attr(""data-theme"");
    if (use_theme === ""dark"") {
      $(""html"").attr(""data-theme"", ""dark"");
      $(""#theme-icon"").removeClass(""fa-sun"").addClass(""fa-moon"");
    } else if (use_theme === ""light"") {
      $(""html"").removeAttr(""data-theme"");
      $(""#theme-icon"").removeClass(""fa-moon"").addClass(""fa-sun"");
    }
  }
  setTheme();

  // Toggle the theme
  var toggleTheme = function () {
    const current_theme = $(""html"").attr(""data-theme"");
    const new_theme = current_theme === ""dark"" ? ""light"" : ""dark"";
    localStorage.setItem(""theme"", new_theme);
    setTheme(new_theme);
  }
  $('#theme-toggle').on('click', function () {
    toggleTheme();
  });

  // These should be the same as the settings in _variables.scss
  const scssLarge = 925; // pixels

  // Sticky footer
  var bumpIt = function () {
    $(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));
  },
    didResize = false;

  bumpIt();

  $(window).resize(function () {
    didResize = true;
  });
  setInterval(function () {
    if (didResize) {
      didResize = false;
      bumpIt();
    }
  }, 250);

  // FitVids init
  fitvids();

  // Follow menu drop down
  $("".author__urls-wrapper button"").on(""click"", function () {
    $("".author__urls"").fadeToggle(""fast"", function () { });
    $("".author__urls-wrapper button"").toggleClass(""open"");
  });

  // Restore the follow menu if toggled on a window resize
  jQuery(window).on('resize', function () {
    if ($('.author__urls.social-icons').css('display') == 'none' &amp;&amp; $(window).width() &gt;= scssLarge) {
      $("".author__urls"").css('display', 'block')
    }
  });

  // init smooth scroll, this needs to be slightly more than then fixed masthead height
  $(""a"").smoothScroll({ offset: -65 });

  // add lightbox class to all image links
  $(""a[href$='.jpg'],a[href$='.jpeg'],a[href$='.JPG'],a[href$='.png'],a[href$='.gif']"").addClass(""image-popup"");

  // Magnific-Popup options
  $("".image-popup"").magnificPopup({
    type: 'image',
    tLoading: 'Loading image #%curr%...',
    gallery: {
      enabled: true,
      navigateByImgClick: true,
      preload: [0, 1] // Will preload 0 - before current, and 1 after the current image
    },
    image: {
      tError: '
<a href=""%url%"">
 Image #%curr%
</a>
could not be loaded.',
    },
    removalDelay: 500, // Delay in milliseconds before popup is removed
    // Class that is added to body when popup is open.
    // make it unique to apply your CSS animations just to this exact popup
    mainClass: 'mfp-zoom-in',
    callbacks: {
      beforeOpen: function () {
        // just a hack that adds mfp-anim class to markup
        this.st.image.markup = this.st.image.markup.replace('mfp-figure', 'mfp-figure mfp-with-anim');
      }
    },
    closeOnContentClick: true,
    midClick: true // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
  });

});
","['$(document).ready(function () {', '// Set the theme on page load', 'var setTheme = function (theme) {', 'const use_theme = theme || localStorage.getItem(""theme"") || $(""html"").attr(""data-theme"");', 'if (use_theme === ""dark"") {', '$(""html"").attr(""data-theme"", ""dark"");', '$(""#theme-icon"").removeClass(""fa-sun"").addClass(""fa-moon"");', '} else if (use_theme === ""light"") {', '$(""html"").removeAttr(""data-theme"");', '$(""#theme-icon"").removeClass(""fa-moon"").addClass(""fa-sun"");', '}', '}', 'setTheme();', '', '// Toggle the theme', 'var toggleTheme = function () {', 'const current_theme = $(""html"").attr(""data-theme"");', 'const new_theme = current_theme === ""dark"" ? ""light"" : ""dark"";', 'localStorage.setItem(""theme"", new_theme);', 'setTheme(new_theme);', '}', ""$('#theme-toggle').on('click', function () {"", 'toggleTheme();', '});', '', 'const scssLarge = 925; // pixels', 'var bumpIt = function () {', '$(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));', '},', '$(window).resize(function () {', 'setInterval(function () {', '', '$("".author__urls-wrapper button"").on(""click"", function () {', '$("".author__urls"").fadeToggle(""fast"", function () { });', ""jQuery(window).on('resize', function () {"", '});', '$(""a"").smoothScroll({ offset: -65 });', 'preload: [0, 1] // Will preload 0 - before current, and 1 after the current image', 'beforeOpen: function () {']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/js/main.min.js,modified,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/js/plugins/jquery.greedy-navigation.js,modified,"/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children('*:not(.masthead__menu-item--lg)').length &gt; 0) {

      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);

      availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;
      
      // Show the dropdown btn
      if($btn.hasClass('hidden')) {
        $btn.removeClass('hidden');
      }
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while(breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length-1]) {
      // Move the item to the visible list
      $hlinks.children().first().appendTo($vlinks);
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if(breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

}

// Window listeners

$(window).on('resize', function() {
  updateNav();
});
screen.orientation.addEventListener(""change"", function(){
  updateNav();
});

$btn.on('click', function() {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","['if($vlinks.width() > availableSpace) {', '', ""while ($vlinks.width() > availableSpace && $vlinks.children('*:not(.masthead__menu-item--lg)').length > 0) {"", ""$vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);"", ""availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;"", '', ""if($btn.hasClass('hidden')) {"", ""$btn.removeClass('hidden');"", '}', 'while(breaks.length > 0 && availableSpace > breaks[breaks.length-1]) {', '$hlinks.children().first().appendTo($vlinks);', 'if(breaks.length < 1) {', ""$(window).on('resize', function() {"", 'screen.orientation.addEventListener(""change"", function(){', ""$btn.on('click', function() {""]","/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $vlinks_persist_tail = $vlinks.children(""*.persist.tail"");
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if ($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children(""*:not(.persist)"").length &gt; 0) {
      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children(""*:not(.persist)"").last().prependTo($hlinks);

      availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;

      // Show the dropdown btn
      $btn.removeClass(""hidden"");
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while (breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length - 1]) {
      // Move the item to the visible list
      if ($vlinks_persist_tail.children().length &gt; 0) {
        $hlinks.children().first().insertBefore($vlinks_persist_tail);
      } else {
        $hlinks.children().first().appendTo($vlinks);
      }
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if (breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

  // update masthead height and the body/sidebar top padding
  var mastheadHeight = $('.masthead').height();
  $('body').css('padding-top', mastheadHeight + 'px');
  if ($("".author__urls-wrapper button"").is("":visible"")) {
    $("".sidebar"").css(""padding-top"", """");
  } else {
    $("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");
  }

}

// Window listeners

$(window).on('resize', function () {
  updateNav();
});
screen.orientation.addEventListener(""change"", function () {
  updateNav();
});

$btn.on('click', function () {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","['var $vlinks_persist_tail = $vlinks.children(""*.persist.tail"");', 'if ($vlinks.width() > availableSpace) {', 'while ($vlinks.width() > availableSpace && $vlinks.children(""*:not(.persist)"").length > 0) {', '$vlinks.children(""*:not(.persist)"").last().prependTo($hlinks);', '', 'availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;', '$btn.removeClass(""hidden"");', 'while (breaks.length > 0 && availableSpace > breaks[breaks.length - 1]) {', 'if ($vlinks_persist_tail.children().length > 0) {', '$hlinks.children().first().insertBefore($vlinks_persist_tail);', '} else {', '$hlinks.children().first().appendTo($vlinks);', '}', 'if (breaks.length < 1) {', '// update masthead height and the body/sidebar top padding', ""var mastheadHeight = $('.masthead').height();"", ""$('body').css('padding-top', mastheadHeight + 'px');"", 'if ($("".author__urls-wrapper button"").is("":visible"")) {', '$("".sidebar"").css(""padding-top"", """");', '} else {', '$("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");', '}', '', ""$(window).on('resize', function () {"", 'screen.orientation.addEventListener(""change"", function () {', ""$btn.on('click', function () {""]"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_data/cv.json,added,"page does not exist
",[],"{
  ""basics"": {
    ""name"": ""Your Sidebar Name"",
    ""email"": ""none@example.org"",
    ""phone"": """",
    ""website"": ""https://academicpages.github.io"",
    ""summary"": ""Currently employed at Red Brick University. Short biography for the left-hand sidebar"",
    ""location"": {
      ""address"": """",
      ""postalCode"": """",
      ""city"": ""Earth"",
      ""countryCode"": ""US"",
      ""region"": """"
    },
    ""profiles"": [
      {
        ""network"": ""Google Scholar"",
        ""username"": """",
        ""url"": ""https://scholar.google.com/citations?user=PS_CX0AAAAAJ""
      },
      {
        ""network"": ""ORCID"",
        ""username"": """",
        ""url"": ""http://orcid.org/yourorcidurl""
      },
      {
        ""network"": ""GitHub"",
        ""username"": ""academicpages"",
        ""url"": ""https://github.com/academicpages""
      }
    ]
  },
  ""work"": [],
  ""education"": [
    {
      ""institution"": ""GitHub University"",
      ""area"": ""Ph.D in Version Control Theory"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2018"",
      ""gpa"": null,
      ""courses"": []
    },
    {
      ""institution"": ""GitHub University"",
      ""area"": ""M.S. in Jekyll"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2014"",
      ""gpa"": null,
      ""courses"": []
    },
    {
      ""institution"": ""GitHub University"",
      ""area"": ""B.S. in GitHub"",
      ""studyType"": """",
      ""startDate"": """",
      ""endDate"": ""2012"",
      ""gpa"": null,
      ""courses"": []
    }
  ],
  ""skills"": [],
  ""languages"": [],
  ""interests"": [],
  ""references"": [],
  ""publications"": [
    {
      ""name"": ""Paper Title Number 1"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2009-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper1.pdf"",
      ""summary"": ""This paper is about the number 1. The number 2 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 2"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2010-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper2.pdf"",
      ""summary"": ""This paper is about the number 2. The number 3 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 3"",
      ""publisher"": ""Journal 1"",
      ""releaseDate"": ""2015-10-01"",
      ""website"": ""http://academicpages.github.io/files/paper3.pdf"",
      ""summary"": ""This paper is about the number 3. The number 4 is left for future work.""
    },
    {
      ""name"": ""Paper Title Number 4"",
      ""publisher"": ""GitHub Journal of Bugs"",
      ""releaseDate"": ""2024-02-17"",
      ""website"": ""http://academicpages.github.io/files/paper3.pdf"",
      ""summary"": ""This paper is about fixing template issue #693.""
    }
  ],
  ""presentations"": [
    {
      ""name"": ""Talk 1 on Relevant Topic in Your Field"",
      ""event"": ""UC San Francisco, Department of Testing"",
      ""date"": ""2012-03-01"",
      ""location"": ""San Francisco, CA, USA"",
      ""description"": """"
    },
    {
      ""name"": ""Tutorial 1 on Relevant Topic in Your Field"",
      ""event"": ""UC-Berkeley Institute for Testing Science"",
      ""date"": ""2013-03-01"",
      ""location"": ""Berkeley, CA, USA"",
      ""description"": """"
    },
    {
      ""name"": ""Talk 2 on Relevant Topic in Your Field"",
      ""event"": ""London School of Testing"",
      ""date"": ""2014-02-01"",
      ""location"": ""London, UK"",
      ""description"": """"
    },
    {
      ""name"": ""Conference Proceeding talk 3 on Relevant Topic in Your Field"",
      ""event"": ""Testing Institute of America 2014 Annual Conference"",
      ""date"": ""2014-03-01"",
      ""location"": ""Los Angeles, CA, USA"",
      ""description"": """"
    }
  ],
  ""teaching"": [
    {
      ""course"": ""Teaching experience 1"",
      ""institution"": ""University 1, Department"",
      ""date"": ""2014-01-01"",
      ""role"": ""Undergraduate course"",
      ""description"": """"
    },
    {
      ""course"": ""Teaching experience 2"",
      ""institution"": ""University 1, Department"",
      ""date"": ""2015-01-01"",
      ""role"": ""Workshop"",
      ""description"": """"
    }
  ],
  ""portfolio"": [
    {
      ""name"": ""Portfolio item number 1"",
      ""category"": ""portfolio"",
      ""date"": """",
      ""url"": """",
      ""description"": ""Short description of portfolio item number 1
<br/>
<img src=""/images/500x300.png""/>
""
    }
  ]
}
","['{', '""basics"": {', '""name"": ""Your Sidebar Name"",', '""email"": ""none@example.org"",', '""phone"": """",', '""website"": ""https://academicpages.github.io"",', '""summary"": ""Currently employed at Red Brick University. Short biography for the left-hand sidebar"",', '""location"": {', '""address"": """",', '""postalCode"": """",', '""city"": ""Earth"",', '""countryCode"": ""US"",', '""region"": """"', '},', '""profiles"": [', '{', '""network"": ""Google Scholar"",', '""username"": """",', '""url"": ""https://scholar.google.com/citations?user=PS_CX0AAAAAJ""', '},', '{', '""network"": ""ORCID"",', '""username"": """",', '""url"": ""http://orcid.org/yourorcidurl""', '},', '{', '""network"": ""GitHub"",', '""username"": ""academicpages"",', '""url"": ""https://github.com/academicpages""', '}', ']', '},', '""work"": [],', '""education"": [', '{', '""institution"": ""GitHub University"",', '""area"": ""Ph.D in Version Control Theory"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2018"",', '""gpa"": null,', '""courses"": []', '},', '{', '""institution"": ""GitHub University"",', '""area"": ""M.S. in Jekyll"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2014"",', '""gpa"": null,', '""courses"": []', '},', '{', '""institution"": ""GitHub University"",', '""area"": ""B.S. in GitHub"",', '""studyType"": """",', '""startDate"": """",', '""endDate"": ""2012"",', '""gpa"": null,', '""courses"": []', '}', '],', '""skills"": [],', '""languages"": [],', '""interests"": [],', '""references"": [],', '""publications"": [', '{', '""name"": ""Paper Title Number 1"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2009-10-01"",', '""website"": ""http://academicpages.github.io/files/paper1.pdf"",', '""summary"": ""This paper is about the number 1. The number 2 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 2"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2010-10-01"",', '""website"": ""http://academicpages.github.io/files/paper2.pdf"",', '""summary"": ""This paper is about the number 2. The number 3 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 3"",', '""publisher"": ""Journal 1"",', '""releaseDate"": ""2015-10-01"",', '""website"": ""http://academicpages.github.io/files/paper3.pdf"",', '""summary"": ""This paper is about the number 3. The number 4 is left for future work.""', '},', '{', '""name"": ""Paper Title Number 4"",', '""publisher"": ""GitHub Journal of Bugs"",', '""releaseDate"": ""2024-02-17"",', '""website"": ""http://academicpages.github.io/files/paper3.pdf"",', '""summary"": ""This paper is about fixing template issue #693.""', '}', '],', '""presentations"": [', '{', '""name"": ""Talk 1 on Relevant Topic in Your Field"",', '""event"": ""UC San Francisco, Department of Testing"",', '""date"": ""2012-03-01"",', '""location"": ""San Francisco, CA, USA"",', '""description"": """"', '},', '{', '""name"": ""Tutorial 1 on Relevant Topic in Your Field"",', '""event"": ""UC-Berkeley Institute for Testing Science"",', '""date"": ""2013-03-01"",', '""location"": ""Berkeley, CA, USA"",', '""description"": """"', '},', '{', '""name"": ""Talk 2 on Relevant Topic in Your Field"",', '""event"": ""London School of Testing"",', '""date"": ""2014-02-01"",', '""location"": ""London, UK"",', '""description"": """"', '},', '{', '""name"": ""Conference Proceeding talk 3 on Relevant Topic in Your Field"",', '""event"": ""Testing Institute of America 2014 Annual Conference"",', '""date"": ""2014-03-01"",', '""location"": ""Los Angeles, CA, USA"",', '""description"": """"', '}', '],', '""teaching"": [', '{', '""course"": ""Teaching experience 1"",', '""institution"": ""University 1, Department"",', '""date"": ""2014-01-01"",', '""role"": ""Undergraduate course"",', '""description"": """"', '},', '{', '""course"": ""Teaching experience 2"",', '""institution"": ""University 1, Department"",', '""date"": ""2015-01-01"",', '""role"": ""Workshop"",', '""description"": """"', '}', '],', '""portfolio"": [', '{', '""name"": ""Portfolio item number 1"",', '""category"": ""portfolio"",', '""date"": """",', '""url"": """",', '""description"": ""Short description of portfolio item number 1<br/><img src=\'/images/500x300.png\'>""', '}', ']', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_data/navigation.yml,modified,"# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  - title: ""Guide""
    url: /markdown/
",[],"# The following is the order of the links in the header of the website.
#
# Changing the order here will adjust the order and you can also add additional
# links. Removing a link prevents it from showing in the header, but does not
# prevent it from being included in the site.

main:
  - title: ""Publications""
    url: /publications/

  - title: ""Talks""
    url: /talks/    

  - title: ""Teaching""
    url: /teaching/    
    
  - title: ""Portfolio""
    url: /portfolio/
        
  - title: ""Blog Posts""
    url: /year-archive/
    
  - title: ""CV""
    url: /cv/
    
  - title: ""JSON CV""
    url: /cv-json/
    
  - title: ""Guide""
    url: /markdown/
","['- title: ""JSON CV""', 'url: /cv-json/', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_includes/cv-template.html,added,"page does not exist
",[],"{% assign cv = site.data.cv %}
<div class=""cv-container"">
 <!-- Basic Information -->
 <div class=""cv-section cv-header"">
  <h1>
   {{ cv.basics.name }}
  </h1>
  {% if cv.basics.label %}
  <h2>
   {{ cv.basics.label }}
  </h2>
  {% endif %}
  <div class=""cv-contact"">
   {% if cv.basics.email %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-envelope"">
    </i>
    {{ cv.basics.email }}
   </div>
   {% endif %}
      
      {% if cv.basics.phone %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-phone"">
    </i>
    {{ cv.basics.phone }}
   </div>
   {% endif %}
      
      {% if cv.basics.website %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-globe"">
    </i>
    <a href=""{{ cv.basics.website }}"" target=""_blank"">
     {{ cv.basics.website }}
    </a>
   </div>
   {% endif %}
      
      {% if cv.basics.location.city %}
   <div class=""cv-contact-item"">
    <i class=""fas fa-map-marker-alt"">
    </i>
    {{ cv.basics.location.city }}{% if cv.basics.location.region %}, {{ cv.basics.location.region }}{% endif %}{% if cv.basics.location.countryCode %}, {{ cv.basics.location.countryCode }}{% endif %}
   </div>
   {% endif %}
  </div>
  {% if cv.basics.profiles.size &gt; 0 %}
  <div class=""cv-profiles"">
   {% for profile in cv.basics.profiles %}
   <a class=""cv-profile-link"" href=""{{ profile.url }}"" target=""_blank"">
    <i class=""fab fa-{{ profile.network | downcase }}"">
    </i>
    {{ profile.network }}
   </a>
   {% endfor %}
  </div>
  {% endif %}
 </div>
 {% if cv.basics.summary %}
 <!-- Summary -->
 <div class=""cv-section"">
  <h2>
   Summary
  </h2>
  <p>
   {{ cv.basics.summary }}
  </p>
 </div>
 {% endif %}
  
  {% if cv.education.size &gt; 0 %}
 <!-- Education -->
 <div class=""cv-section"">
  <h2>
   Education
  </h2>
  <ul class=""cv-list"">
   {% for education in cv.education %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ education.area }}
     </div>
     <div class=""cv-item-date"">
      {{ education.endDate }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ education.institution }}
     </div>
     {% if education.gpa %}
     <div class=""cv-item-detail"">
      GPA: {{ education.gpa }}
     </div>
     {% endif %}
          {% if education.courses.size &gt; 0 %}
     <div class=""cv-item-detail"">
      <strong>
       Courses:
      </strong>
      {{ education.courses | join: "", "" }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.work.size &gt; 0 %}
 <!-- Work Experience -->
 <div class=""cv-section"">
  <h2>
   Work Experience
  </h2>
  <ul class=""cv-list"">
   {% for work in cv.work %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ work.position }}
     </div>
     <div class=""cv-item-date"">
      {{ work.startDate }}{% if work.endDate %} - {{ work.endDate }}{% endif %}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ work.company }}
     </div>
     {% if work.summary %}
     <div class=""cv-item-detail"">
      {{ work.summary }}
     </div>
     {% endif %}
          {% if work.highlights.size &gt; 0 %}
     <ul class=""cv-highlights"">
      {% for highlight in work.highlights %}
      <li>
       {{ highlight }}
      </li>
      {% endfor %}
     </ul>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.skills.size &gt; 0 %}
 <!-- Skills -->
 <div class=""cv-section"">
  <h2>
   Skills
  </h2>
  <div class=""cv-skills"">
   {% for skill in cv.skills %}
   <div class=""cv-skill-category"">
    <h3>
     {{ skill.name }}
    </h3>
    <ul class=""cv-skill-list"">
     {% for keyword in skill.keywords %}
     <li>
      {{ keyword }}
     </li>
     {% endfor %}
    </ul>
   </div>
   {% endfor %}
  </div>
 </div>
 {% endif %}
  
  {% if cv.publications.size &gt; 0 %}
 <!-- Publications -->
 <div class=""cv-section"">
  <h2>
   Publications
  </h2>
  <ul class=""cv-list"">
   {% for publication in cv.publications %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ publication.name }}
     </div>
     <div class=""cv-item-date"">
      {{ publication.releaseDate | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ publication.publisher }}
     </div>
     {% if publication.summary %}
     <div class=""cv-item-detail"">
      {{ publication.summary }}
     </div>
     {% endif %}
          {% if publication.website %}
     <div class=""cv-item-detail"">
      <a href=""{{ publication.website }}"" target=""_blank"">
       View Publication
      </a>
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.presentations.size &gt; 0 %}
 <!-- Presentations/Talks -->
 <div class=""cv-section"">
  <h2>
   Presentations
  </h2>
  <ul class=""cv-list"">
   {% for talk in cv.presentations %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ talk.name }}
     </div>
     <div class=""cv-item-date"">
      {{ talk.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ talk.event }}
     </div>
     {% if talk.location %}
     <div class=""cv-item-detail"">
      {{ talk.location }}
     </div>
     {% endif %}
          {% if talk.description %}
     <div class=""cv-item-detail"">
      {{ talk.description }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.teaching.size &gt; 0 %}
 <!-- Teaching -->
 <div class=""cv-section"">
  <h2>
   Teaching
  </h2>
  <ul class=""cv-list"">
   {% for teaching in cv.teaching %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ teaching.course }}
     </div>
     <div class=""cv-item-date"">
      {{ teaching.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ teaching.institution }}
     </div>
     {% if teaching.role %}
     <div class=""cv-item-detail"">
      Role: {{ teaching.role }}
     </div>
     {% endif %}
          {% if teaching.description %}
     <div class=""cv-item-detail"">
      {{ teaching.description }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.portfolio.size &gt; 0 %}
 <!-- Portfolio -->
 <div class=""cv-section"">
  <h2>
   Portfolio
  </h2>
  <ul class=""cv-list"">
   {% for item in cv.portfolio %}
   <li class=""cv-item"">
    <div class=""cv-item-header"">
     <div class=""cv-item-title"">
      {{ item.name }}
     </div>
     <div class=""cv-item-date"">
      {{ item.date | slice: 0, 4 }}
     </div>
    </div>
    <div class=""cv-item-content"">
     <div class=""cv-item-subtitle"">
      {{ item.category | capitalize }}
     </div>
     {% if item.description %}
     <div class=""cv-item-detail"">
      {{ item.description }}
     </div>
     {% endif %}
          {% if item.url %}
     <div class=""cv-item-detail"">
      <a href=""{{ item.url }}"" target=""_blank"">
       View Project
      </a>
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.languages.size &gt; 0 %}
 <!-- Languages -->
 <div class=""cv-section"">
  <h2>
   Languages
  </h2>
  <ul class=""cv-list"">
   {% for language in cv.languages %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ language.language }}
     </div>
     <div class=""cv-item-detail"">
      {{ language.fluency }}
     </div>
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.interests.size &gt; 0 %}
 <!-- Interests -->
 <div class=""cv-section"">
  <h2>
   Interests
  </h2>
  <ul class=""cv-list"">
   {% for interest in cv.interests %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ interest.name }}
     </div>
     {% if interest.keywords.size &gt; 0 %}
     <div class=""cv-item-detail"">
      {{ interest.keywords | join: "", "" }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
  
  {% if cv.references.size &gt; 0 %}
 <!-- References -->
 <div class=""cv-section"">
  <h2>
   References
  </h2>
  <ul class=""cv-list"">
   {% for reference in cv.references %}
   <li class=""cv-item"">
    <div class=""cv-item-content"">
     <div class=""cv-item-title"">
      {{ reference.name }}
     </div>
     {% if reference.reference %}
     <div class=""cv-item-detail"">
      {{ reference.reference }}
     </div>
     {% endif %}
    </div>
   </li>
   {% endfor %}
  </ul>
 </div>
 {% endif %}
</div>
","['{% assign cv = site.data.cv %}', '', '<div class=""cv-container"">', '<!-- Basic Information -->', '<div class=""cv-section cv-header"">', '<h1>{{ cv.basics.name }}</h1>', '{% if cv.basics.label %}', '<h2>{{ cv.basics.label }}</h2>', '{% endif %}', '', '<div class=""cv-contact"">', '{% if cv.basics.email %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-envelope""></i> {{ cv.basics.email }}', '</div>', '{% endif %}', '', '{% if cv.basics.phone %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-phone""></i> {{ cv.basics.phone }}', '</div>', '{% endif %}', '', '{% if cv.basics.website %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-globe""></i> <a href=""{{ cv.basics.website }}"" target=""_blank"">{{ cv.basics.website }}</a>', '</div>', '{% endif %}', '', '{% if cv.basics.location.city %}', '<div class=""cv-contact-item"">', '<i class=""fas fa-map-marker-alt""></i> {{ cv.basics.location.city }}{% if cv.basics.location.region %}, {{ cv.basics.location.region }}{% endif %}{% if cv.basics.location.countryCode %}, {{ cv.basics.location.countryCode }}{% endif %}', '</div>', '{% endif %}', '</div>', '', '{% if cv.basics.profiles.size > 0 %}', '<div class=""cv-profiles"">', '{% for profile in cv.basics.profiles %}', '<a href=""{{ profile.url }}"" target=""_blank"" class=""cv-profile-link"">', '<i class=""fab fa-{{ profile.network | downcase }}""></i> {{ profile.network }}', '</a>', '{% endfor %}', '</div>', '{% endif %}', '</div>', '', '{% if cv.basics.summary %}', '<!-- Summary -->', '<div class=""cv-section"">', '<h2>Summary</h2>', '<p>{{ cv.basics.summary }}</p>', '</div>', '{% endif %}', '', '{% if cv.education.size > 0 %}', '<!-- Education -->', '<div class=""cv-section"">', '<h2>Education</h2>', '<ul class=""cv-list"">', '{% for education in cv.education %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ education.area }}</div>', '<div class=""cv-item-date"">{{ education.endDate }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ education.institution }}</div>', '{% if education.gpa %}', '<div class=""cv-item-detail"">GPA: {{ education.gpa }}</div>', '{% endif %}', '{% if education.courses.size > 0 %}', '<div class=""cv-item-detail"">', '<strong>Courses:</strong> {{ education.courses | join: "", "" }}', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.work.size > 0 %}', '<!-- Work Experience -->', '<div class=""cv-section"">', '<h2>Work Experience</h2>', '<ul class=""cv-list"">', '{% for work in cv.work %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ work.position }}</div>', '<div class=""cv-item-date"">{{ work.startDate }}{% if work.endDate %} - {{ work.endDate }}{% endif %}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ work.company }}</div>', '{% if work.summary %}', '<div class=""cv-item-detail"">{{ work.summary }}</div>', '{% endif %}', '{% if work.highlights.size > 0 %}', '<ul class=""cv-highlights"">', '{% for highlight in work.highlights %}', '<li>{{ highlight }}</li>', '{% endfor %}', '</ul>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.skills.size > 0 %}', '<!-- Skills -->', '<div class=""cv-section"">', '<h2>Skills</h2>', '<div class=""cv-skills"">', '{% for skill in cv.skills %}', '<div class=""cv-skill-category"">', '<h3>{{ skill.name }}</h3>', '<ul class=""cv-skill-list"">', '{% for keyword in skill.keywords %}', '<li>{{ keyword }}</li>', '{% endfor %}', '</ul>', '</div>', '{% endfor %}', '</div>', '</div>', '{% endif %}', '', '{% if cv.publications.size > 0 %}', '<!-- Publications -->', '<div class=""cv-section"">', '<h2>Publications</h2>', '<ul class=""cv-list"">', '{% for publication in cv.publications %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ publication.name }}</div>', '<div class=""cv-item-date"">{{ publication.releaseDate | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ publication.publisher }}</div>', '{% if publication.summary %}', '<div class=""cv-item-detail"">{{ publication.summary }}</div>', '{% endif %}', '{% if publication.website %}', '<div class=""cv-item-detail"">', '<a href=""{{ publication.website }}"" target=""_blank"">View Publication</a>', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.presentations.size > 0 %}', '<!-- Presentations/Talks -->', '<div class=""cv-section"">', '<h2>Presentations</h2>', '<ul class=""cv-list"">', '{% for talk in cv.presentations %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ talk.name }}</div>', '<div class=""cv-item-date"">{{ talk.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ talk.event }}</div>', '{% if talk.location %}', '<div class=""cv-item-detail"">{{ talk.location }}</div>', '{% endif %}', '{% if talk.description %}', '<div class=""cv-item-detail"">{{ talk.description }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.teaching.size > 0 %}', '<!-- Teaching -->', '<div class=""cv-section"">', '<h2>Teaching</h2>', '<ul class=""cv-list"">', '{% for teaching in cv.teaching %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ teaching.course }}</div>', '<div class=""cv-item-date"">{{ teaching.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ teaching.institution }}</div>', '{% if teaching.role %}', '<div class=""cv-item-detail"">Role: {{ teaching.role }}</div>', '{% endif %}', '{% if teaching.description %}', '<div class=""cv-item-detail"">{{ teaching.description }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.portfolio.size > 0 %}', '<!-- Portfolio -->', '<div class=""cv-section"">', '<h2>Portfolio</h2>', '<ul class=""cv-list"">', '{% for item in cv.portfolio %}', '<li class=""cv-item"">', '<div class=""cv-item-header"">', '<div class=""cv-item-title"">{{ item.name }}</div>', '<div class=""cv-item-date"">{{ item.date | slice: 0, 4 }}</div>', '</div>', '<div class=""cv-item-content"">', '<div class=""cv-item-subtitle"">{{ item.category | capitalize }}</div>', '{% if item.description %}', '<div class=""cv-item-detail"">{{ item.description }}</div>', '{% endif %}', '{% if item.url %}', '<div class=""cv-item-detail"">', '<a href=""{{ item.url }}"" target=""_blank"">View Project</a>', '</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.languages.size > 0 %}', '<!-- Languages -->', '<div class=""cv-section"">', '<h2>Languages</h2>', '<ul class=""cv-list"">', '{% for language in cv.languages %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ language.language }}</div>', '<div class=""cv-item-detail"">{{ language.fluency }}</div>', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.interests.size > 0 %}', '<!-- Interests -->', '<div class=""cv-section"">', '<h2>Interests</h2>', '<ul class=""cv-list"">', '{% for interest in cv.interests %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ interest.name }}</div>', '{% if interest.keywords.size > 0 %}', '<div class=""cv-item-detail"">{{ interest.keywords | join: "", "" }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '', '{% if cv.references.size > 0 %}', '<!-- References -->', '<div class=""cv-section"">', '<h2>References</h2>', '<ul class=""cv-list"">', '{% for reference in cv.references %}', '<li class=""cv-item"">', '<div class=""cv-item-content"">', '<div class=""cv-item-title"">{{ reference.name }}</div>', '{% if reference.reference %}', '<div class=""cv-item-detail"">{{ reference.reference }}</div>', '{% endif %}', '</div>', '</li>', '{% endfor %}', '</ul>', '</div>', '{% endif %}', '</div>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_layouts/cv-layout.html,added,"page does not exist
",[],"---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html class=""no-js"" en""="""" lang=""{{ site.locale | slice: 0,2 | default: "" }}""="""">
 <head>
  <meta charset=""utf-8""/>
  <meta content=""IE=edge"" http-equiv=""X-UA-Compatible""/>
  <meta content=""width=device-width, initial-scale=1.0"" name=""viewport""/>
  <title>
   {% if page.title %}{{ page.title | escape }}{% else %}{{ site.title | escape }}{% endif %} | {{ site.name | default: site.title }}
  </title>
  {% include head.html %}
    {% include head/custom.html %}
  <link href=""{{ site.baseurl }}/assets/css/cv-layout.css"" rel=""stylesheet""/>
 </head>
 <body class=""cv-layout"">
  {% include browser-upgrade.html %}
    {% include masthead.html %}
  <div id=""main"" role=""main"">
   <div class=""container"">
    {{ content }}
   </div>
  </div>
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['---', 'layout: compress', '---', '', '{% include base_path %}', '', '<!doctype html>', '<html lang=""{{ site.locale | slice: 0,2 | default: ""en"" }}"" class=""no-js"">', '<head>', '<meta charset=""utf-8"">', '<meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">', '<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">', '<title>{% if page.title %}{{ page.title | escape }}{% else %}{{ site.title | escape }}{% endif %} | {{ site.name | default: site.title }}</title>', '{% include head.html %}', '{% include head/custom.html %}', '<link rel=""stylesheet"" href=""{{ site.baseurl }}/assets/css/cv-layout.css"">', '</head>', '', '<body class=""cv-layout"">', '{% include browser-upgrade.html %}', '{% include masthead.html %}', '', '<div id=""main"" role=""main"">', '<div class=""container"">', '{{ content }}', '</div>', '</div>', '', '<div class=""page__footer"">', '<footer>', '{% include footer/custom.html %}', '{% include footer.html %}', '</footer>', '</div>', '', '{% include scripts.html %}', '', '</body>', '</html>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,_pages/cv-json.md,added,"page does not exist
",[],"---
layout: archive
title: ""CV""
permalink: /cv-json/
author_profile: false
redirect_from:
  - /resume-json
---

{% include base_path %}
<link href=""{{ base_path }}/assets/css/cv-style.css"" rel=""stylesheet""/>
<link href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"" rel=""stylesheet""/>
<style>
 .archive {
    width: 80%;
    margin: 0 auto;
    float: none;
    padding-right: 0;
  }
  
  @media (min-width: 80em) {
    .archive {
      width: 70%;
    }
  }
</style>
{% include cv-template.html %}
<div class=""cv-download-links"">
 <a class=""btn btn--primary"" href=""{{ base_path }}/files/cv.pdf"">
  Download CV as PDF
 </a>
 <a class=""btn btn--inverse"" href=""{{ base_path }}"">
  View Markdown CV
 </a>
</div>
","['---', 'layout: archive', 'title: ""CV""', 'permalink: /cv-json/', 'author_profile: false', 'redirect_from:', '- /resume-json', '---', '', '{% include base_path %}', '', '<link rel=""stylesheet"" href=""{{ base_path }}/assets/css/cv-style.css"">', '<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"">', '', '<style>', '.archive {', 'width: 80%;', 'margin: 0 auto;', 'float: none;', 'padding-right: 0;', '}', '', '@media (min-width: 80em) {', '.archive {', 'width: 70%;', '}', '}', '</style>', '', '{% include cv-template.html %}', '', '<div class=""cv-download-links"">', '<a href=""{{ base_path }}/files/cv.pdf"" class=""btn btn--primary"">Download CV as PDF</a>', '<a href=""{{ base_path }}"" class=""btn btn--inverse"">View Markdown CV</a>', '</div>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,assets/css/cv-layout.css,added,"page does not exist
",[],"/* CV Layout Specific Styles */
.cv-header-nav {
  padding: 1rem 0;
  text-align: center;
  margin-bottom: 2rem;
  border-bottom: 1px solid #f2f2f2;
}

.cv-header-nav .home-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: #2a7ae2;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  font-weight: 500;
  transition: background-color 0.2s;
}

.cv-header-nav .home-button:hover {
  background-color: #1756a9;
}

.cv-container {
  max-width: 1000px;
  margin: 0 auto;
}

/* Download links styling */
.cv-download-links {
  margin-top: 2rem;
  text-align: center;
  padding: 1rem;
  border-top: 1px solid #f2f2f2;
}

.cv-download-links a {
  margin: 0 0.5rem;
}
","['/* CV Layout Specific Styles */', '.cv-header-nav {', 'padding: 1rem 0;', 'text-align: center;', 'margin-bottom: 2rem;', 'border-bottom: 1px solid #f2f2f2;', '}', '', '.cv-header-nav .home-button {', 'display: inline-flex;', 'align-items: center;', 'gap: 0.5rem;', 'padding: 0.5rem 1rem;', 'background-color: #2a7ae2;', 'color: white;', 'text-decoration: none;', 'border-radius: 4px;', 'font-weight: 500;', 'transition: background-color 0.2s;', '}', '', '.cv-header-nav .home-button:hover {', 'background-color: #1756a9;', '}', '', '.cv-container {', 'max-width: 1000px;', 'margin: 0 auto;', '}', '', '/* Download links styling */', '.cv-download-links {', 'margin-top: 2rem;', 'text-align: center;', 'padding: 1rem;', 'border-top: 1px solid #f2f2f2;', '}', '', '.cv-download-links a {', 'margin: 0 0.5rem;', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,assets/css/cv-style.css,added,"page does not exist
",[],"/* CV Template Styles */
.cv-container {
  max-width: 1000px;
  margin: 0 auto;
  font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  color: #333;
  line-height: 1.6;
}

/* Header Styles */
.cv-header {
  margin-bottom: 2rem;
  border-bottom: 2px solid #f2f2f2;
  padding-bottom: 1rem;
}

.cv-header h1 {
  margin-bottom: 0.5rem;
  color: #2a7ae2;
}

.cv-contact-info {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 0.5rem;
}

.cv-contact-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.cv-profiles {
  display: flex;
  gap: 1rem;
  margin-top: 0.5rem;
}

.cv-profile-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.cv-profile-item a {
  color: #2a7ae2;
  text-decoration: none;
}

.cv-profile-item a:hover {
  text-decoration: underline;
}

/* Section Styles */
.cv-section {
  margin-bottom: 2rem;
}

.cv-section h2 {
  border-bottom: 1px solid #f2f2f2;
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #2a7ae2;
}

.cv-section h2 i {
  color: #666;
}

/* Item Styles */
.cv-item {
  margin-bottom: 1.5rem;
}

.cv-item-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.cv-item-title {
  font-weight: bold;
  font-size: 1.1rem;
}

.cv-item-date {
  color: #666;
}

.cv-item-subtitle {
  color: #666;
  margin-bottom: 0.5rem;
}

.cv-item-summary {
  margin-bottom: 0.5rem;
}

.cv-item-highlights {
  margin-top: 0.5rem;
  padding-left: 1.5rem;
}

.cv-item-highlights li {
  margin-bottom: 0.25rem;
}

.cv-item-courses ul {
  margin-top: 0.25rem;
  padding-left: 1.5rem;
}

.cv-item-courses li {
  margin-bottom: 0.25rem;
}

/* Skills Styles */
.cv-skills {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.cv-skill-category h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.cv-skill-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.cv-skill-keyword {
  background-color: #f2f2f2;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* Project Styles */
.cv-project-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

.cv-project-keyword {
  background-color: #e6f3ff;
  color: #2a7ae2;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* Languages Styles */
.cv-languages {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.cv-language {
  display: flex;
  flex-direction: column;
}

.cv-language-name {
  font-weight: bold;
}

.cv-language-fluency {
  color: #666;
  font-size: 0.9rem;
}

/* Interests Styles */
.cv-interests {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.cv-interest h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.cv-interest-keywords {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.cv-interest-keyword {
  background-color: #f9f9f9;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.9rem;
}

/* References Styles */
.cv-references {
  font-style: italic;
  color: #666;
}

/* Print Styles */
@media print {
  .cv-container {
    max-width: 100%;
  }
  
  .cv-header {
    border-bottom-color: #ccc;
  }
  
  .cv-section h2 {
    border-bottom-color: #ccc;
  }
  
  .cv-skill-keyword,
  .cv-project-keyword,
  .cv-interest-keyword {
    border: 1px solid #ccc;
    background-color: transparent;
  }
}
","['/* CV Template Styles */', '.cv-container {', 'max-width: 1000px;', 'margin: 0 auto;', ""font-family: 'Roboto', 'Helvetica Neue', Helvetica, Arial, sans-serif;"", 'color: #333;', 'line-height: 1.6;', '}', '', '/* Header Styles */', '.cv-header {', 'margin-bottom: 2rem;', 'border-bottom: 2px solid #f2f2f2;', 'padding-bottom: 1rem;', '}', '', '.cv-header h1 {', 'margin-bottom: 0.5rem;', 'color: #2a7ae2;', '}', '', '.cv-contact-info {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 1rem;', 'margin-bottom: 0.5rem;', '}', '', '.cv-contact-item {', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', '}', '', '.cv-profiles {', 'display: flex;', 'gap: 1rem;', 'margin-top: 0.5rem;', '}', '', '.cv-profile-item {', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', '}', '', '.cv-profile-item a {', 'color: #2a7ae2;', 'text-decoration: none;', '}', '', '.cv-profile-item a:hover {', 'text-decoration: underline;', '}', '', '/* Section Styles */', '.cv-section {', 'margin-bottom: 2rem;', '}', '', '.cv-section h2 {', 'border-bottom: 1px solid #f2f2f2;', 'padding-bottom: 0.5rem;', 'margin-bottom: 1rem;', 'display: flex;', 'align-items: center;', 'gap: 0.5rem;', 'color: #2a7ae2;', '}', '', '.cv-section h2 i {', 'color: #666;', '}', '', '/* Item Styles */', '.cv-item {', 'margin-bottom: 1.5rem;', '}', '', '.cv-item-header {', 'display: flex;', 'justify-content: space-between;', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-title {', 'font-weight: bold;', 'font-size: 1.1rem;', '}', '', '.cv-item-date {', 'color: #666;', '}', '', '.cv-item-subtitle {', 'color: #666;', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-summary {', 'margin-bottom: 0.5rem;', '}', '', '.cv-item-highlights {', 'margin-top: 0.5rem;', 'padding-left: 1.5rem;', '}', '', '.cv-item-highlights li {', 'margin-bottom: 0.25rem;', '}', '', '.cv-item-courses ul {', 'margin-top: 0.25rem;', 'padding-left: 1.5rem;', '}', '', '.cv-item-courses li {', 'margin-bottom: 0.25rem;', '}', '', '/* Skills Styles */', '.cv-skills {', 'display: grid;', 'grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));', 'gap: 1.5rem;', '}', '', '.cv-skill-category h3 {', 'margin-bottom: 0.5rem;', 'color: #333;', '}', '', '.cv-skill-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', '}', '', '.cv-skill-keyword {', 'background-color: #f2f2f2;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* Project Styles */', '.cv-project-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', 'margin-top: 0.5rem;', '}', '', '.cv-project-keyword {', 'background-color: #e6f3ff;', 'color: #2a7ae2;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* Languages Styles */', '.cv-languages {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 1rem;', '}', '', '.cv-language {', 'display: flex;', 'flex-direction: column;', '}', '', '.cv-language-name {', 'font-weight: bold;', '}', '', '.cv-language-fluency {', 'color: #666;', 'font-size: 0.9rem;', '}', '', '/* Interests Styles */', '.cv-interests {', 'display: grid;', 'grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));', 'gap: 1.5rem;', '}', '', '.cv-interest h3 {', 'margin-bottom: 0.5rem;', 'color: #333;', '}', '', '.cv-interest-keywords {', 'display: flex;', 'flex-wrap: wrap;', 'gap: 0.5rem;', '}', '', '.cv-interest-keyword {', 'background-color: #f9f9f9;', 'padding: 0.25rem 0.5rem;', 'border-radius: 4px;', 'font-size: 0.9rem;', '}', '', '/* References Styles */', '.cv-references {', 'font-style: italic;', 'color: #666;', '}', '', '/* Print Styles */', '@media print {', '.cv-container {', 'max-width: 100%;', '}', '', '.cv-header {', 'border-bottom-color: #ccc;', '}', '', '.cv-section h2 {', 'border-bottom-color: #ccc;', '}', '', '.cv-skill-keyword,', '.cv-project-keyword,', '.cv-interest-keyword {', 'border: 1px solid #ccc;', 'background-color: transparent;', '}', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,scripts/cv_markdown_to_json.py,added,"page does not exist
",[],"#!/usr/bin/env python3
""""""
Script to convert markdown CV to JSON format
Author: Yuan Chen
""""""

import os
import re
import json
import yaml
import argparse
from datetime import datetime, date
from pathlib import Path
import glob

# Custom JSON encoder to handle date objects
class DateTimeEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, (datetime, date)):
            return obj.isoformat()
        return super().default(obj)

def parse_markdown_cv(md_file):
    """"""Parse the markdown CV file and extract sections.""""""
    with open(md_file, 'r', encoding='utf-8') as file:
        content = file.read()
    
    # Remove YAML front matter
    content = re.sub(r'^---.*?---\s*', '', content, flags=re.DOTALL)
    
    # Extract sections
    sections = {}
    current_section = None
    section_content = []
    
    for line in content.split('\n'):
        if re.match(r'^=+$', line):
            continue
        
        section_match = re.match(r'^([A-Za-z\s]+)$', line.strip())
        if section_match and len(line.strip()) &gt; 0:
            if current_section:
                sections[current_section] = '\n'.join(section_content).strip()
                section_content = []
            current_section = section_match.group(1).strip()
        elif current_section:
            section_content.append(line)
    
    # Add the last section
    if current_section and section_content:
        sections[current_section] = '\n'.join(section_content).strip()
    
    return sections

def parse_config(config_file):
    """"""Parse the Jekyll _config.yml file for additional information.""""""
    if not os.path.exists(config_file):
        return {}
    
    with open(config_file, 'r', encoding='utf-8') as file:
        config = yaml.safe_load(file)
    
    return config

def extract_author_info(config):
    """"""Extract author information from the config file.""""""
    author_info = {
        ""name"": config.get('name', ''),
        ""email"": """",
        ""phone"": """",
        ""website"": config.get('url', ''),
        ""summary"": """",
        ""location"": {
            ""address"": """",
            ""postalCode"": """",
            ""city"": """",
            ""countryCode"": ""US"",
            ""region"": """"
        },
        ""profiles"": []
    }
    
    # Extract author details if available
    if 'author' in config:
        author = config.get('author', {})
        
        # Override name if author name is available
        if author.get('name'):
            author_info['name'] = author.get('name')
        
        # Add email
        if author.get('email'):
            author_info['email'] = author.get('email')
        
        # Add location
        if author.get('location'):
            author_info['location']['city'] = author.get('location', '')
        
        # Add employer as part of summary
        if author.get('employer'):
            author_info['summary'] = f""Currently employed at {author.get('employer')}""
        
        # Add bio to summary if available
        if author.get('bio'):
            if author_info['summary']:
                author_info['summary'] += f"". {author.get('bio')}""
            else:
                author_info['summary'] = author.get('bio')
        
        # Add social profiles
        profiles = []
        
        # Academic profiles
        if author.get('googlescholar'):
            profiles.append({
                ""network"": ""Google Scholar"",
                ""username"": """",
                ""url"": author.get('googlescholar')
            })
        
        if author.get('orcid'):
            profiles.append({
                ""network"": ""ORCID"",
                ""username"": """",
                ""url"": author.get('orcid')
            })
        
        if author.get('researchgate'):
            profiles.append({
                ""network"": ""ResearchGate"",
                ""username"": """",
                ""url"": author.get('researchgate')
            })
        
        # Social media profiles
        if author.get('github'):
            profiles.append({
                ""network"": ""GitHub"",
                ""username"": author.get('github'),
                ""url"": f""https://github.com/{author.get('github')}""
            })
        
        if author.get('linkedin'):
            profiles.append({
                ""network"": ""LinkedIn"",
                ""username"": author.get('linkedin'),
                ""url"": f""https://www.linkedin.com/in/{author.get('linkedin')}""
            })
        
        if author.get('twitter'):
            profiles.append({
                ""network"": ""Twitter"",
                ""username"": author.get('twitter'),
                ""url"": f""https://twitter.com/{author.get('twitter')}""
            })
        
        author_info['profiles'] = profiles
    
    return author_info

def parse_education(education_text):
    """"""Parse education section from markdown.""""""
    education_entries = []
    
    # Extract education entries
    entries = re.findall(r'\* (.*?)(?=\n\*|\Z)', education_text, re.DOTALL)
    
    for entry in entries:
        # Parse degree, institution, and year
        match = re.match(r'([^,]+), ([^,]+), (\d{4})(.*)', entry.strip())
        if match:
            degree, institution, year, additional = match.groups()
            
            # Extract GPA if available
            gpa_match = re.search(r'GPA: ([\d\.]+)', additional)
            gpa = gpa_match.group(1) if gpa_match else None
            
            education_entries.append({
                ""institution"": institution.strip(),
                ""area"": degree.strip(),
                ""studyType"": """",
                ""startDate"": """",
                ""endDate"": year.strip(),
                ""gpa"": gpa,
                ""courses"": []
            })
    
    return education_entries

def parse_work_experience(work_text):
    """"""Parse work experience section from markdown.""""""
    work_entries = []
    
    # Extract work entries
    entries = re.findall(r'\* (.*?)(?=\n\*|\Z)', work_text, re.DOTALL)
    
    for entry in entries:
        lines = entry.strip().split('\n')
        if not lines:
            continue
            
        # Parse position and company
        first_line = lines[0].strip()
        position_match = re.match(r'(.*?), (.*?)(?:, |$)', first_line)
        
        if position_match:
            position, company = position_match.groups()
            
            # Extract dates if available
            date_match = re.search(r'(\d{4})\s*-\s*(\d{4}|present)', entry, re.IGNORECASE)
            start_date = date_match.group(1) if date_match else """"
            end_date = date_match.group(2) if date_match else """"
            
            # Extract highlights
            highlights = []
            for line in lines[1:]:
                if line.strip().startswith('*') or line.strip().startswith('-'):
                    highlights.append(line.strip()[1:].strip())
            
            work_entries.append({
                ""company"": company.strip(),
                ""position"": position.strip(),
                ""website"": """",
                ""startDate"": start_date,
                ""endDate"": end_date,
                ""summary"": """",
                ""highlights"": highlights
            })
    
    return work_entries

def parse_skills(skills_text):
    """"""Parse skills section from markdown.""""""
    skills_entries = []
    
    # Extract skill categories
    categories = re.findall(r'(?:^|\n)(\w+.*?):\s*(.*?)(?=\n\w+.*?:|\Z)', skills_text, re.DOTALL)
    
    for category, skills in categories:
        # Extract individual skills
        skill_list = [s.strip() for s in re.split(r',|\n', skills) if s.strip()]
        
        skills_entries.append({
            ""name"": category.strip(),
            ""level"": """",
            ""keywords"": skill_list
        })
    
    return skills_entries

def parse_publications(pub_dir):
    """"""Parse publications from the _publications directory.""""""
    publications = []
    
    if not os.path.exists(pub_dir):
        return publications
    
    for pub_file in sorted(glob.glob(os.path.join(pub_dir, ""*.md""))):
        with open(pub_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract publication details
            pub_entry = {
                ""name"": front_matter.get('title', ''),
                ""publisher"": front_matter.get('venue', ''),
                ""releaseDate"": front_matter.get('date', ''),
                ""website"": front_matter.get('paperurl', ''),
                ""summary"": front_matter.get('excerpt', '')
            }
            
            publications.append(pub_entry)
    
    return publications

def parse_talks(talks_dir):
    """"""Parse talks from the _talks directory.""""""
    talks = []
    
    if not os.path.exists(talks_dir):
        return talks
    
    for talk_file in sorted(glob.glob(os.path.join(talks_dir, ""*.md""))):
        with open(talk_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract talk details
            talk_entry = {
                ""name"": front_matter.get('title', ''),
                ""event"": front_matter.get('venue', ''),
                ""date"": front_matter.get('date', ''),
                ""location"": front_matter.get('location', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            talks.append(talk_entry)
    
    return talks

def parse_teaching(teaching_dir):
    """"""Parse teaching from the _teaching directory.""""""
    teaching = []
    
    if not os.path.exists(teaching_dir):
        return teaching
    
    for teaching_file in sorted(glob.glob(os.path.join(teaching_dir, ""*.md""))):
        with open(teaching_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract teaching details
            teaching_entry = {
                ""course"": front_matter.get('title', ''),
                ""institution"": front_matter.get('venue', ''),
                ""date"": front_matter.get('date', ''),
                ""role"": front_matter.get('type', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            teaching.append(teaching_entry)
    
    return teaching

def parse_portfolio(portfolio_dir):
    """"""Parse portfolio items from the _portfolio directory.""""""
    portfolio = []
    
    if not os.path.exists(portfolio_dir):
        return portfolio
    
    for portfolio_file in sorted(glob.glob(os.path.join(portfolio_dir, ""*.md""))):
        with open(portfolio_file, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # Extract front matter
        front_matter_match = re.match(r'^---\s*(.*?)\s*---', content, re.DOTALL)
        if front_matter_match:
            front_matter = yaml.safe_load(front_matter_match.group(1))
            
            # Extract portfolio details
            portfolio_entry = {
                ""name"": front_matter.get('title', ''),
                ""category"": front_matter.get('collection', 'portfolio'),
                ""date"": front_matter.get('date', ''),
                ""url"": front_matter.get('permalink', ''),
                ""description"": front_matter.get('excerpt', '')
            }
            
            portfolio.append(portfolio_entry)
    
    return portfolio

def create_cv_json(md_file, config_file, repo_root, output_file):
    """"""Create a JSON CV from markdown and other repository data.""""""
    # Parse the markdown CV
    sections = parse_markdown_cv(md_file)
    
    # Parse config file
    config = parse_config(config_file)
    
    # Extract author information
    author_info = extract_author_info(config)
    
    # Create the JSON structure
    cv_json = {
        ""basics"": author_info,
        ""work"": parse_work_experience(sections.get('Work experience', '')),
        ""education"": parse_education(sections.get('Education', '')),
        ""skills"": parse_skills(sections.get('Skills', '')),
        ""languages"": [],
        ""interests"": [],
        ""references"": []
    }
    
    # Add publications
    cv_json[""publications""] = parse_publications(os.path.join(repo_root, ""_publications""))
    
    # Add talks
    cv_json[""presentations""] = parse_talks(os.path.join(repo_root, ""_talks""))
    
    # Add teaching
    cv_json[""teaching""] = parse_teaching(os.path.join(repo_root, ""_teaching""))
    
    # Add portfolio
    cv_json[""portfolio""] = parse_portfolio(os.path.join(repo_root, ""_portfolio""))
    
    # Extract languages and interests from config if available
    if 'languages' in config:
        cv_json[""languages""] = config.get('languages', [])
    
    if 'interests' in config:
        cv_json[""interests""] = config.get('interests', [])
    
    # Write the JSON to a file
    with open(output_file, 'w', encoding='utf-8') as file:
        json.dump(cv_json, file, indent=2, cls=DateTimeEncoder)
    
    print(f""Successfully converted {md_file} to {output_file}"")

def main():
    """"""Main function to parse arguments and run the conversion.""""""
    parser = argparse.ArgumentParser(description='Convert markdown CV to JSON format')
    parser.add_argument('--input', '-i', required=True, help='Input markdown CV file')
    parser.add_argument('--output', '-o', required=True, help='Output JSON file')
    parser.add_argument('--config', '-c', help='Jekyll _config.yml file')
    
    args = parser.parse_args()
    
    # Get repository root (parent directory of the input file's directory)
    repo_root = str(Path(args.input).parent.parent)
    
    create_cv_json(args.input, args.config, repo_root, args.output)

if __name__ == '__main__':
    main()
","['#!/usr/bin/env python3', '""""""', 'Script to convert markdown CV to JSON format', 'Author: Yuan Chen', '""""""', '', 'import os', 'import re', 'import json', 'import yaml', 'import argparse', 'from datetime import datetime, date', 'from pathlib import Path', 'import glob', '', '# Custom JSON encoder to handle date objects', 'class DateTimeEncoder(json.JSONEncoder):', 'def default(self, obj):', 'if isinstance(obj, (datetime, date)):', 'return obj.isoformat()', 'return super().default(obj)', '', 'def parse_markdown_cv(md_file):', '""""""Parse the markdown CV file and extract sections.""""""', ""with open(md_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Remove YAML front matter', ""content = re.sub(r'^---.*?---\\s*', '', content, flags=re.DOTALL)"", '', '# Extract sections', 'sections = {}', 'current_section = None', 'section_content = []', '', ""for line in content.split('\\n'):"", ""if re.match(r'^=+$', line):"", 'continue', '', ""section_match = re.match(r'^([A-Za-z\\s]+)$', line.strip())"", 'if section_match and len(line.strip()) > 0:', 'if current_section:', ""sections[current_section] = '\\n'.join(section_content).strip()"", 'section_content = []', 'current_section = section_match.group(1).strip()', 'elif current_section:', 'section_content.append(line)', '', '# Add the last section', 'if current_section and section_content:', ""sections[current_section] = '\\n'.join(section_content).strip()"", '', 'return sections', '', 'def parse_config(config_file):', '""""""Parse the Jekyll _config.yml file for additional information.""""""', 'if not os.path.exists(config_file):', 'return {}', '', ""with open(config_file, 'r', encoding='utf-8') as file:"", 'config = yaml.safe_load(file)', '', 'return config', '', 'def extract_author_info(config):', '""""""Extract author information from the config file.""""""', 'author_info = {', '""name"": config.get(\'name\', \'\'),', '""email"": """",', '""phone"": """",', '""website"": config.get(\'url\', \'\'),', '""summary"": """",', '""location"": {', '""address"": """",', '""postalCode"": """",', '""city"": """",', '""countryCode"": ""US"",', '""region"": """"', '},', '""profiles"": []', '}', '', '# Extract author details if available', ""if 'author' in config:"", ""author = config.get('author', {})"", '', '# Override name if author name is available', ""if author.get('name'):"", ""author_info['name'] = author.get('name')"", '', '# Add email', ""if author.get('email'):"", ""author_info['email'] = author.get('email')"", '', '# Add location', ""if author.get('location'):"", ""author_info['location']['city'] = author.get('location', '')"", '', '# Add employer as part of summary', ""if author.get('employer'):"", 'author_info[\'summary\'] = f""Currently employed at {author.get(\'employer\')}""', '', '# Add bio to summary if available', ""if author.get('bio'):"", ""if author_info['summary']:"", 'author_info[\'summary\'] += f"". {author.get(\'bio\')}""', 'else:', ""author_info['summary'] = author.get('bio')"", '', '# Add social profiles', 'profiles = []', '', '# Academic profiles', ""if author.get('googlescholar'):"", 'profiles.append({', '""network"": ""Google Scholar"",', '""username"": """",', '""url"": author.get(\'googlescholar\')', '})', '', ""if author.get('orcid'):"", 'profiles.append({', '""network"": ""ORCID"",', '""username"": """",', '""url"": author.get(\'orcid\')', '})', '', ""if author.get('researchgate'):"", 'profiles.append({', '""network"": ""ResearchGate"",', '""username"": """",', '""url"": author.get(\'researchgate\')', '})', '', '# Social media profiles', ""if author.get('github'):"", 'profiles.append({', '""network"": ""GitHub"",', '""username"": author.get(\'github\'),', '""url"": f""https://github.com/{author.get(\'github\')}""', '})', '', ""if author.get('linkedin'):"", 'profiles.append({', '""network"": ""LinkedIn"",', '""username"": author.get(\'linkedin\'),', '""url"": f""https://www.linkedin.com/in/{author.get(\'linkedin\')}""', '})', '', ""if author.get('twitter'):"", 'profiles.append({', '""network"": ""Twitter"",', '""username"": author.get(\'twitter\'),', '""url"": f""https://twitter.com/{author.get(\'twitter\')}""', '})', '', ""author_info['profiles'] = profiles"", '', 'return author_info', '', 'def parse_education(education_text):', '""""""Parse education section from markdown.""""""', 'education_entries = []', '', '# Extract education entries', ""entries = re.findall(r'\\* (.*?)(?=\\n\\*|\\Z)', education_text, re.DOTALL)"", '', 'for entry in entries:', '# Parse degree, institution, and year', ""match = re.match(r'([^,]+), ([^,]+), (\\d{4})(.*)', entry.strip())"", 'if match:', 'degree, institution, year, additional = match.groups()', '', '# Extract GPA if available', ""gpa_match = re.search(r'GPA: ([\\d\\.]+)', additional)"", 'gpa = gpa_match.group(1) if gpa_match else None', '', 'education_entries.append({', '""institution"": institution.strip(),', '""area"": degree.strip(),', '""studyType"": """",', '""startDate"": """",', '""endDate"": year.strip(),', '""gpa"": gpa,', '""courses"": []', '})', '', 'return education_entries', '', 'def parse_work_experience(work_text):', '""""""Parse work experience section from markdown.""""""', 'work_entries = []', '', '# Extract work entries', ""entries = re.findall(r'\\* (.*?)(?=\\n\\*|\\Z)', work_text, re.DOTALL)"", '', 'for entry in entries:', ""lines = entry.strip().split('\\n')"", 'if not lines:', 'continue', '', '# Parse position and company', 'first_line = lines[0].strip()', ""position_match = re.match(r'(.*?), (.*?)(?:, |$)', first_line)"", '', 'if position_match:', 'position, company = position_match.groups()', '', '# Extract dates if available', ""date_match = re.search(r'(\\d{4})\\s*-\\s*(\\d{4}|present)', entry, re.IGNORECASE)"", 'start_date = date_match.group(1) if date_match else """"', 'end_date = date_match.group(2) if date_match else """"', '', '# Extract highlights', 'highlights = []', 'for line in lines[1:]:', ""if line.strip().startswith('*') or line.strip().startswith('-'):"", 'highlights.append(line.strip()[1:].strip())', '', 'work_entries.append({', '""company"": company.strip(),', '""position"": position.strip(),', '""website"": """",', '""startDate"": start_date,', '""endDate"": end_date,', '""summary"": """",', '""highlights"": highlights', '})', '', 'return work_entries', '', 'def parse_skills(skills_text):', '""""""Parse skills section from markdown.""""""', 'skills_entries = []', '', '# Extract skill categories', ""categories = re.findall(r'(?:^|\\n)(\\w+.*?):\\s*(.*?)(?=\\n\\w+.*?:|\\Z)', skills_text, re.DOTALL)"", '', 'for category, skills in categories:', '# Extract individual skills', ""skill_list = [s.strip() for s in re.split(r',|\\n', skills) if s.strip()]"", '', 'skills_entries.append({', '""name"": category.strip(),', '""level"": """",', '""keywords"": skill_list', '})', '', 'return skills_entries', '', 'def parse_publications(pub_dir):', '""""""Parse publications from the _publications directory.""""""', 'publications = []', '', 'if not os.path.exists(pub_dir):', 'return publications', '', 'for pub_file in sorted(glob.glob(os.path.join(pub_dir, ""*.md""))):', ""with open(pub_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract publication details', 'pub_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""publisher"": front_matter.get(\'venue\', \'\'),', '""releaseDate"": front_matter.get(\'date\', \'\'),', '""website"": front_matter.get(\'paperurl\', \'\'),', '""summary"": front_matter.get(\'excerpt\', \'\')', '}', '', 'publications.append(pub_entry)', '', 'return publications', '', 'def parse_talks(talks_dir):', '""""""Parse talks from the _talks directory.""""""', 'talks = []', '', 'if not os.path.exists(talks_dir):', 'return talks', '', 'for talk_file in sorted(glob.glob(os.path.join(talks_dir, ""*.md""))):', ""with open(talk_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract talk details', 'talk_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""event"": front_matter.get(\'venue\', \'\'),', '""date"": front_matter.get(\'date\', \'\'),', '""location"": front_matter.get(\'location\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'talks.append(talk_entry)', '', 'return talks', '', 'def parse_teaching(teaching_dir):', '""""""Parse teaching from the _teaching directory.""""""', 'teaching = []', '', 'if not os.path.exists(teaching_dir):', 'return teaching', '', 'for teaching_file in sorted(glob.glob(os.path.join(teaching_dir, ""*.md""))):', ""with open(teaching_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract teaching details', 'teaching_entry = {', '""course"": front_matter.get(\'title\', \'\'),', '""institution"": front_matter.get(\'venue\', \'\'),', '""date"": front_matter.get(\'date\', \'\'),', '""role"": front_matter.get(\'type\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'teaching.append(teaching_entry)', '', 'return teaching', '', 'def parse_portfolio(portfolio_dir):', '""""""Parse portfolio items from the _portfolio directory.""""""', 'portfolio = []', '', 'if not os.path.exists(portfolio_dir):', 'return portfolio', '', 'for portfolio_file in sorted(glob.glob(os.path.join(portfolio_dir, ""*.md""))):', ""with open(portfolio_file, 'r', encoding='utf-8') as file:"", 'content = file.read()', '', '# Extract front matter', ""front_matter_match = re.match(r'^---\\s*(.*?)\\s*---', content, re.DOTALL)"", 'if front_matter_match:', 'front_matter = yaml.safe_load(front_matter_match.group(1))', '', '# Extract portfolio details', 'portfolio_entry = {', '""name"": front_matter.get(\'title\', \'\'),', '""category"": front_matter.get(\'collection\', \'portfolio\'),', '""date"": front_matter.get(\'date\', \'\'),', '""url"": front_matter.get(\'permalink\', \'\'),', '""description"": front_matter.get(\'excerpt\', \'\')', '}', '', 'portfolio.append(portfolio_entry)', '', 'return portfolio', '', 'def create_cv_json(md_file, config_file, repo_root, output_file):', '""""""Create a JSON CV from markdown and other repository data.""""""', '# Parse the markdown CV', 'sections = parse_markdown_cv(md_file)', '', '# Parse config file', 'config = parse_config(config_file)', '', '# Extract author information', 'author_info = extract_author_info(config)', '', '# Create the JSON structure', 'cv_json = {', '""basics"": author_info,', '""work"": parse_work_experience(sections.get(\'Work experience\', \'\')),', '""education"": parse_education(sections.get(\'Education\', \'\')),', '""skills"": parse_skills(sections.get(\'Skills\', \'\')),', '""languages"": [],', '""interests"": [],', '""references"": []', '}', '', '# Add publications', 'cv_json[""publications""] = parse_publications(os.path.join(repo_root, ""_publications""))', '', '# Add talks', 'cv_json[""presentations""] = parse_talks(os.path.join(repo_root, ""_talks""))', '', '# Add teaching', 'cv_json[""teaching""] = parse_teaching(os.path.join(repo_root, ""_teaching""))', '', '# Add portfolio', 'cv_json[""portfolio""] = parse_portfolio(os.path.join(repo_root, ""_portfolio""))', '', '# Extract languages and interests from config if available', ""if 'languages' in config:"", 'cv_json[""languages""] = config.get(\'languages\', [])', '', ""if 'interests' in config:"", 'cv_json[""interests""] = config.get(\'interests\', [])', '', '# Write the JSON to a file', ""with open(output_file, 'w', encoding='utf-8') as file:"", 'json.dump(cv_json, file, indent=2, cls=DateTimeEncoder)', '', 'print(f""Successfully converted {md_file} to {output_file}"")', '', 'def main():', '""""""Main function to parse arguments and run the conversion.""""""', ""parser = argparse.ArgumentParser(description='Convert markdown CV to JSON format')"", ""parser.add_argument('--input', '-i', required=True, help='Input markdown CV file')"", ""parser.add_argument('--output', '-o', required=True, help='Output JSON file')"", ""parser.add_argument('--config', '-c', help='Jekyll _config.yml file')"", '', 'args = parser.parse_args()', '', ""# Get repository root (parent directory of the input file's directory)"", 'repo_root = str(Path(args.input).parent.parent)', '', 'create_cv_json(args.input, args.config, repo_root, args.output)', '', ""if __name__ == '__main__':"", 'main()']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,feat: add json csv page and related scripts,scripts/update_cv_json.sh,added,"page does not exist
",[],"#!/bin/bash

# Script to update the CV JSON file from the markdown CV
# Author: Yuan Chen

# Set the base directory to the repository root
BASE_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")/.."" &amp;&amp; pwd)""

# Define file paths
CV_MARKDOWN=""$BASE_DIR/_pages/cv.md""
CV_JSON=""$BASE_DIR/_data/cv.json""
CONFIG_FILE=""$BASE_DIR/_config.yml""

# Check if the Python script exists
PYTHON_SCRIPT=""$BASE_DIR/scripts/cv_markdown_to_json.py""
if [ ! -f ""$PYTHON_SCRIPT"" ]; then
  echo ""Error: Python script not found at $PYTHON_SCRIPT""
  exit 1
fi

# Check if the markdown CV exists
if [ ! -f ""$CV_MARKDOWN"" ]; then
  echo ""Error: Markdown CV not found at $CV_MARKDOWN""
  exit 1
fi

# Run the Python script to convert markdown to JSON
echo ""Converting markdown CV to JSON...""
python3 ""$PYTHON_SCRIPT"" --input ""$CV_MARKDOWN"" --output ""$CV_JSON"" --config ""$CONFIG_FILE""

# Check if the conversion was successful
if [ $? -eq 0 ]; then
  echo ""Successfully updated CV JSON file at $CV_JSON""
  
  # Optional: Build the Jekyll site to see the changes
  echo ""Would you like to build the Jekyll site to see the changes? (y/n)""
  read -r answer
  if [[ ""$answer"" =~ ^[Yy]$ ]]; then
    echo ""Building Jekyll site...""
    cd ""$BASE_DIR"" &amp;&amp; bundle exec jekyll serve
  fi
else
  echo ""Error: Failed to update CV JSON file""
  exit 1
fi

exit 0
","['#!/bin/bash', '', '# Script to update the CV JSON file from the markdown CV', '# Author: Yuan Chen', '', '# Set the base directory to the repository root', 'BASE_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")/.."" && pwd)""', '', '# Define file paths', 'CV_MARKDOWN=""$BASE_DIR/_pages/cv.md""', 'CV_JSON=""$BASE_DIR/_data/cv.json""', 'CONFIG_FILE=""$BASE_DIR/_config.yml""', '', '# Check if the Python script exists', 'PYTHON_SCRIPT=""$BASE_DIR/scripts/cv_markdown_to_json.py""', 'if [ ! -f ""$PYTHON_SCRIPT"" ]; then', 'echo ""Error: Python script not found at $PYTHON_SCRIPT""', 'exit 1', 'fi', '', '# Check if the markdown CV exists', 'if [ ! -f ""$CV_MARKDOWN"" ]; then', 'echo ""Error: Markdown CV not found at $CV_MARKDOWN""', 'exit 1', 'fi', '', '# Run the Python script to convert markdown to JSON', 'echo ""Converting markdown CV to JSON...""', 'python3 ""$PYTHON_SCRIPT"" --input ""$CV_MARKDOWN"" --output ""$CV_JSON"" --config ""$CONFIG_FILE""', '', '# Check if the conversion was successful', 'if [ $? -eq 0 ]; then', 'echo ""Successfully updated CV JSON file at $CV_JSON""', '', '# Optional: Build the Jekyll site to see the changes', 'echo ""Would you like to build the Jekyll site to see the changes? (y/n)""', 'read -r answer', 'if [[ ""$answer"" =~ ^[Yy]$ ]]; then', 'echo ""Building Jekyll site...""', 'cd ""$BASE_DIR"" && bundle exec jekyll serve', 'fi', 'else', 'echo ""Error: Failed to update CV JSON file""', 'exit 1', 'fi', '', 'exit 0']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,_includes/masthead.html,modified,"{% include base_path %}
<div class=""masthead"">
 <div class=""masthead__inner-wrap"">
  <div class=""masthead__menu"">
   <nav class=""greedy-nav"" id=""site-nav"">
    <button>
     <div class=""navicon"">
     </div>
    </button>
    <ul class=""visible-links"">
     <li class=""masthead__menu-item masthead__menu-item--lg"">
      <a href=""{{ base_path }}/"">
       {{ site.title }}
      </a>
     </li>
     {% for link in site.data.navigation.main %}
            {% if link.url contains 'http' %}
              {% assign domain = '' %}
              {% else %}
              {% assign domain = base_path %}
            {% endif %}
     <li class=""masthead__menu-item"">
      <a href=""{{ domain }}{{ link.url }}"">
       {{ link.title }}
      </a>
     </li>
     {% endfor %}
    </ul>
    <ul class=""hidden-links hidden"">
    </ul>
   </nav>
  </div>
 </div>
</div>
","['<li class=""masthead__menu-item masthead__menu-item--lg""><a href=""{{ base_path }}/"">{{ site.title }}</a></li>', '{% else %}']","{% include base_path %}
<div class=""masthead"">
 <div class=""masthead__inner-wrap"">
  <div class=""masthead__menu"">
   <nav class=""greedy-nav"" id=""site-nav"">
    <button>
     <div class=""navicon"">
     </div>
    </button>
    <ul class=""visible-links"">
     <li class=""masthead__menu-item masthead__menu-item--lg persist"">
      <a href=""{{ base_path }}/"">
       {{ site.title }}
      </a>
     </li>
     {% for link in site.data.navigation.main %}
            {% if link.url contains 'http' %}
              {% assign domain = '' %}
            {% else %}
              {% assign domain = base_path %}
            {% endif %}
     <li class=""masthead__menu-item"">
      <a href=""{{ domain }}{{ link.url }}"">
       {{ link.title }}
      </a>
     </li>
     {% endfor %}
     <li class=""masthead__menu-item persist tail"" id=""theme-toggle"">
      <a>
       <i aria-hidden=""true"" class=""fa-solid fa-sun"" id=""theme-icon"" title=""toggle theme"">
       </i>
      </a>
     </li>
    </ul>
    <ul class=""hidden-links hidden"">
    </ul>
   </nav>
  </div>
 </div>
</div>
","['<li class=""masthead__menu-item masthead__menu-item--lg persist""><a href=""{{ base_path }}/"">{{ site.title }}</a></li>', '{% else %}', '<li id=""theme-toggle"" class=""masthead__menu-item persist tail"">', '<a><i id=""theme-icon"" class=""fa-solid fa-sun"" aria-hidden=""true"" title=""toggle theme""></i></a>', '</li>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,_layouts/default.html,modified,"---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html class=""no-js"" lang=""{{ site.locale | slice: 0,2 }}"">
 <head>
  {% include head.html %}
    {% include head/custom.html %}
 </head>
 <body>
  {% include browser-upgrade.html %}
    {% include masthead.html %}

    {{ content }}
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['<html lang=""{{ site.locale | slice: 0,2 }}"" class=""no-js"">']","---
layout: compress
---

{% include base_path %}
<!DOCTYPE html>
<html %}="""" class=""no-js"" data-theme=""dark"" endif="""" if="""" lang=""{{ site.locale | slice: 0,2 }}"" site.site_theme=""dark"" {%="""">
 <head>
  {% include head.html %}
    {% include head/custom.html %}
 </head>
 <body>
  {% include browser-upgrade.html %}
    {% include masthead.html %}

    {{ content }}
  <div class=""page__footer"">
   <footer>
    {% include footer/custom.html %}
        {% include footer.html %}
   </footer>
  </div>
  {% include scripts.html %}
 </body>
</html>
","['<html lang=""{{ site.locale | slice: 0,2 }}"" class=""no-js""{% if site.site_theme == ""dark"" %} data-theme=""dark""{% endif %}>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,_sass/layout/_navigation.scss,modified,"/* ==========================================================================
   NAVIGATION
   ========================================================================== */

/*
   Breadcrumb navigation links
   ========================================================================== */

.breadcrumbs {
  @include container;
  @include clearfix;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
  padding-right: 2em;
  font-family: $sans-serif;
  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.30s;
          animation-delay: 0.30s;

  @include breakpoint($large) {
    padding-left: 1em;
    padding-right: 1em;
  }

  @include breakpoint($x-large) {
    max-width: $x-large;
  }

  ol {
    padding: 0;
    list-style: none;
    font-size: $type-size-6;

    @include breakpoint($large) {
      @include span(10 of 12 last);
    }

    @include breakpoint($x-large) {
      @include prefix(0.5 of 12);
    }
  }

  li {
    display: inline;
  }

  .current {
    font-weight: bold;
  }
}


/*
   Post pagination navigation links
   ========================================================================== */

.pagination {
  @include full();
  @include clearfix();
  margin-top: 1em;
  padding-top: 1em;

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    font-family: $sans-serif;
  }

  li {
    display: block;
    float: left;
    margin-left: -1px;

    a {
      margin-bottom: 0.25em;
      padding: 0.5em 1em;
      font-family: $sans-serif;
      font-size: 14px;
      font-weight: bold;
      line-height: 1.5;
      text-align: center;
      text-decoration: none;
      color: var(--global-text-color-light);
      border: 1px solid var(var(--global-border-color));
      border-radius: 0;

      &amp;:hover {
        color: var(--global-link-color-hover);
      }

      &amp;.current {
        color: #fff;
        background: var(--global-base-color);
      }

      &amp;.disabled {
        color: var(--global-text-color-light);
        pointer-events: none;
        cursor: not-allowed;
      }
    }

    &amp;:first-child {
      margin-left: 0;

      a {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
      }
    }

    &amp;:last-child {
      a {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }
    }
  }

  /* next/previous buttons */
  &amp;--pager {
    display: block;
    padding: 1em 2em;
    float: left;
    width: 50%;
    font-family: $sans-serif;
    font-size: $type-size-5;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--global-text-color-light);
    border: 1px solid var(var(--global-border-color));
    border-radius: $border-radius;

    &amp;:hover {
      color: var(--global-link-color-hover);
    }

    &amp;:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &amp;:last-child {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &amp;.disabled {
      color: var(--global-text-color-light);
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}

.page__content + .pagination,
.page__meta + .pagination,
.page__share + .pagination,
.page__comments + .pagination {
  margin-top: 2em;
  padding-top: 2em;
  border-top: 1px solid var(--global-border-color);
}


/*
   Priority plus navigation
   ========================================================================== */

.greedy-nav {
  position: relative;
  min-width: 250px;
  background: var(--global-bg-color);

  a {
    display: block;
    margin: 0 1rem;
    padding: 0.5rem 0;
    color: var(--global-masthead-link-color);
    text-decoration: none;

    &amp;:hover {
      color: var(--global-masthead-link-color-hover);
    }
  }

  button {
    position: absolute;
    height: 2.5rem;
    right: 0;
    padding: 0 0.5rem;
    border: 0;
    outline: none;
    background-color: var(--global-base-color);
    color: #fff;
    cursor: pointer;
    z-index: 100;
  }

  .visible-links {
    display: table;

    li {
      display: table-cell;
      vertical-align: middle;

      &amp;:first-child {
        font-weight: bold;
        text-wrap: wrap;

        a {
          margin-left: 0;
        }
      }

      &amp;:last-child {
        a {
          margin-right: 0;
        }
      }
    }

    a {
      position: relative;

      &amp;:before {
        content: """";
        position: absolute;
        left: 0;
        bottom: 0;
        height: 4px;
        background: var(--global-border-color);
        width: 100%;
        -webkit-transition: $global-transition;
        transition: $global-transition;
        -webkit-transform: scaleX(0);
            -ms-transform: scaleX(0);
                transform: scaleX(0); /* hide*/
      }

      &amp;:hover:before {
        -webkit-transform: scaleX(1);
            -ms-transform: scaleX(1);
                transform: scaleX(1); /* reveal*/
      }
    }
  }

  .hidden-links {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 15px;
    padding: 5px;
    border: 1px solid var(--global-border-color);
    border-radius: $border-radius;
    background: #fff;
    box-shadow: 0 0 10px rgba(#000, 0.25);

    a {
      margin: 0;
      padding: 10px 20px;
      font-size: $type-size-5;

      &amp;:hover {
        color: var(--global-masthead-link-color-hover);
        background: var(--global-border-color);
      }
    }

    &amp;:before {
      content: """";
      position: absolute;
      top: -11px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: var(--global-border-color) transparent;
      display: block;
      z-index: 0;
    }

    &amp;:after {
      content: """";
      position: absolute;
      top: -10px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: #fff transparent;
      display: block;
      z-index: 1;
    }

    li {
      display: block;
      border-bottom: 1px solid var(--global-border-color);

      &amp;:last-child {
        border-bottom: none;
      }
    }
  }
}


/*
   Navigation list
   ========================================================================== */

.nav__list {
  font-size: 1.25rem;

  ul {
    margin-bottom: 1em;
  }

  a {
    display: block;
    padding: 0.125em 0;
    color: inherit;

    &amp;:hover {
      text-decoration: underline;
    }
  }

  .active {
    margin-left: -0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    color: #fff;
    font-weight: bold;
    background: var(--global-base-color);
    border-radius: $border-radius;

    &amp;:hover {
      color: #fff;
    }
  }
}

.nav__title {
  margin: 0;
  padding: 0.5rem 1rem;
  font-family: $sans-serif-narrow;
  font-size: $type-size-5;
  font-weight: bold;
}

.nav__sub-title {
  display: block;
  margin: 0.5rem 0;
  padding: 0.5rem 0;
  font-family: $sans-serif-narrow;
  font-size: $type-size-6;
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 1px solid var(--global-border-color);
}


/*
   Table of contents navigation
   ========================================================================== */

.toc {
  font-family: $sans-serif-narrow;
  color: var(--global-text-color-light);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #fff;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  .nav__title {
    color: #fff;
    font-size: $type-size-6;
    background: var(--global-base-color);
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}

.toc__menu {
  margin: 0;
  padding: 0;
  width: 100%;
  list-style: none;
  font-size: 0.8rem;

  a {
    display: block;
    padding: 0.5rem 1rem;
    color: var(--global-text-color-light);
    font-size: $type-size-7;
    font-weight: bold;
    line-height: 1.5;
    border-bottom: 1px solid var(--global-border-color);
    text-decoration-line: none !important;

    &amp;:hover {
      color: #000;
      background: var(--global-link-color-hover);
    }
  }

  &gt; li:last-child {
    a {
      border-bottom: none;
    }
  }

  li ul &gt; li a {
    padding-left: 2rem;
    font-weight: normal;
  }

  /* hide sub sub links on small screens*/
  li &gt; ul li {
    display: none;

    @include breakpoint($medium) {
      display: block;
    }
  }
}
",[],"/* ==========================================================================
   NAVIGATION
   ========================================================================== */

/*
   Breadcrumb navigation links
   ========================================================================== */

.breadcrumbs {
  @include container;
  @include clearfix;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 2em;
  padding-right: 2em;
  font-family: $sans-serif;
  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.30s;
          animation-delay: 0.30s;

  @include breakpoint($large) {
    padding-left: 1em;
    padding-right: 1em;
  }

  @include breakpoint($x-large) {
    max-width: $x-large;
  }

  ol {
    padding: 0;
    list-style: none;
    font-size: $type-size-6;

    @include breakpoint($large) {
      @include span(10 of 12 last);
    }

    @include breakpoint($x-large) {
      @include prefix(0.5 of 12);
    }
  }

  li {
    display: inline;
  }

  .current {
    font-weight: bold;
  }
}


/*
   Post pagination navigation links
   ========================================================================== */

.pagination {
  @include full();
  @include clearfix();
  margin-top: 1em;
  padding-top: 1em;

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    font-family: $sans-serif;
  }

  li {
    display: block;
    float: left;
    margin-left: -1px;

    a {
      margin-bottom: 0.25em;
      padding: 0.5em 1em;
      font-family: $sans-serif;
      font-size: 14px;
      font-weight: bold;
      line-height: 1.5;
      text-align: center;
      text-decoration: none;
      color: var(--global-text-color-light);
      border: 1px solid var(var(--global-border-color));
      border-radius: 0;

      &amp;:hover {
        color: var(--global-link-color-hover);
      }

      &amp;.current {
        color: #fff;
        background: var(--global-base-color);
      }

      &amp;.disabled {
        color: var(--global-text-color-light);
        pointer-events: none;
        cursor: not-allowed;
      }
    }

    &amp;:first-child {
      margin-left: 0;

      a {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
      }
    }

    &amp;:last-child {
      a {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }
    }
  }

  /* next/previous buttons */
  &amp;--pager {
    display: block;
    padding: 1em 2em;
    float: left;
    width: 50%;
    font-family: $sans-serif;
    font-size: $type-size-5;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--global-text-color-light);
    border: 1px solid var(var(--global-border-color));
    border-radius: $border-radius;

    &amp;:hover {
      color: var(--global-link-color-hover);
    }

    &amp;:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &amp;:last-child {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &amp;.disabled {
      color: var(--global-text-color-light);
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}

.page__content + .pagination,
.page__meta + .pagination,
.page__share + .pagination,
.page__comments + .pagination {
  margin-top: 2em;
  padding-top: 2em;
  border-top: 1px solid var(--global-border-color);
}


/*
   Priority plus navigation
   ========================================================================== */

.greedy-nav {
  position: relative;
  min-width: 250px;
  background: var(--global-bg-color);

  a {
    display: block;
    margin: 0 1rem;
    padding: 0.5rem 0;
    color: var(--global-masthead-link-color);
    text-decoration: none;

    &amp;:hover {
      color: var(--global-masthead-link-color-hover);
    }
  }

  button {
    position: absolute;
    height: 2.5rem;
    right: 0;
    padding: 0 0.5rem;
    border: 0;
    outline: none;
    background-color: var(--global-base-color);
    color: #fff;
    cursor: pointer;
    z-index: 100;
  }

  .visible-links {
    display: table;

    li {
      display: table-cell;
      vertical-align: middle;

      &amp;:first-child {
        font-weight: bold;
        text-wrap: wrap;

        a {
          margin-left: 0;
        }
      }

      &amp;:last-child {
        a {
          margin-right: 0;
        }
      }
    }

    #theme-toggle {
      a {
        width: 25px;
        display: flex;
        justify-content: center;
        cursor: pointer;
      }
    }

    a {
      position: relative;

      &amp;:before {
        content: """";
        position: absolute;
        left: 0;
        bottom: 0;
        height: 4px;
        background: var(--global-border-color);
        width: 100%;
        -webkit-transition: $global-transition;
        transition: $global-transition;
        -webkit-transform: scaleX(0);
            -ms-transform: scaleX(0);
                transform: scaleX(0); /* hide*/
      }

      &amp;:hover:before {
        -webkit-transform: scaleX(1);
            -ms-transform: scaleX(1);
                transform: scaleX(1); /* reveal*/
      }
    }
  }

  .hidden-links {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 15px;
    padding: 5px;
    border: 1px solid var(--global-border-color);
    border-radius: $border-radius;
    background: #fff;
    box-shadow: 0 0 10px rgba(#000, 0.25);

    a {
      margin: 0;
      padding: 10px 20px;
      font-size: $type-size-5;

      &amp;:hover {
        color: var(--global-masthead-link-color-hover);
        background: var(--global-border-color);
      }
    }

    &amp;:before {
      content: """";
      position: absolute;
      top: -11px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: var(--global-border-color) transparent;
      display: block;
      z-index: 0;
    }

    &amp;:after {
      content: """";
      position: absolute;
      top: -10px;
      right: 10px;
      width: 0;
      border-style: solid;
      border-width: 0 10px 10px;
      border-color: #fff transparent;
      display: block;
      z-index: 1;
    }

    li {
      display: block;
      border-bottom: 1px solid var(--global-border-color);

      &amp;:last-child {
        border-bottom: none;
      }
    }
  }
}


/*
   Navigation list
   ========================================================================== */

.nav__list {
  font-size: 1.25rem;

  ul {
    margin-bottom: 1em;
  }

  a {
    display: block;
    padding: 0.125em 0;
    color: inherit;

    &amp;:hover {
      text-decoration: underline;
    }
  }

  .active {
    margin-left: -0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    color: #fff;
    font-weight: bold;
    background: var(--global-base-color);
    border-radius: $border-radius;

    &amp;:hover {
      color: #fff;
    }
  }
}

.nav__title {
  margin: 0;
  padding: 0.5rem 1rem;
  font-family: $sans-serif-narrow;
  font-size: $type-size-5;
  font-weight: bold;
}

.nav__sub-title {
  display: block;
  margin: 0.5rem 0;
  padding: 0.5rem 0;
  font-family: $sans-serif-narrow;
  font-size: $type-size-6;
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 1px solid var(--global-border-color);
}


/*
   Table of contents navigation
   ========================================================================== */

.toc {
  font-family: $sans-serif-narrow;
  color: var(--global-text-color-light);
  text-transform: uppercase;
  letter-spacing: 1px;
  background-color: #fff;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  box-shadow: $box-shadow;

  .nav__title {
    color: #fff;
    font-size: $type-size-6;
    background: var(--global-base-color);
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}

.toc__menu {
  margin: 0;
  padding: 0;
  width: 100%;
  list-style: none;
  font-size: 0.8rem;

  a {
    display: block;
    padding: 0.5rem 1rem;
    color: var(--global-text-color-light);
    font-size: $type-size-7;
    font-weight: bold;
    line-height: 1.5;
    border-bottom: 1px solid var(--global-border-color);
    text-decoration-line: none !important;

    &amp;:hover {
      color: #000;
      background: var(--global-link-color-hover);
    }
  }

  &gt; li:last-child {
    a {
      border-bottom: none;
    }
  }

  li ul &gt; li a {
    padding-left: 2rem;
    font-weight: normal;
  }

  /* hide sub sub links on small screens*/
  li &gt; ul li {
    display: none;

    @include breakpoint($medium) {
      display: block;
    }
  }
}
","['#theme-toggle {', 'a {', 'width: 25px;', 'display: flex;', 'justify-content: center;', 'cursor: pointer;', '}', '}', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,_sass/theme/_dark.scss,modified,"/* ==========================================================================
   DARK THEME
   ========================================================================== */

/* Color codes used for the theme */
$gray                       : #7a8288;
$dark-gray                  : mix(#000, $gray, 40%);
$darker-gray                : mix(#000, $gray, 60%);
$light-gray                 : mix(#fff, $gray, 50%);

$background                 : #474747;
$background-light           : mix(#fff, $background, 80%);
$background-lighter         : mix(#fff, $background, 90%);
$text                       : #ffffff;
$link                       : #0ea1c5;
$link-dark                  : mix(#000, $link, 25%);
$link-light                 : mix(#fff, $link, 25%);

/* Color codes used for the site */
$danger-color               : #ee5f5b;
$info-color                 : #2f7f93;
$notice-color               : #7a8288;
$success-color              : #62c462;
$warning-color              : #f89406;

/* Other basic settings for the template */
$border-radius              : 4px;
$box-shadow                 : 0 1px 1px rgba(0, 0, 0, 0.125);
$global-transition          : all 0.2s ease-in-out;
$masthead-height            : 70px;
$navicon-width              : 28px;
$navicon-height             : 4px;
$sidebar-link-max-width     : 250px;
$sidebar-screen-min-width   : 1024px;

/* Dark theme for the site */
:root {
    --global-base-color                 : #{$background};
    --global-bg-color                   : #{$background};
    --global-border-color               : #{$background-light};
    --global-code-background-color      : #fafafa;
    --global-code-text-color            : #{$darker-gray};
    --global-fig-caption-color          : #{$dark-gray};
    --global-link-color                 : #{$link};
    --global-link-color-hover           : #{$link-dark};
    --global-link-color-visited         : #{$link-light};    
    --global-masthead-link-color        : #{$text};
    --global-masthead-link-color-hover  : #{$background-light};    
    --global-text-color                 : #{$text};
    --global-text-color-light           : #{$light-gray};
    --global-thead-color                : #{$background-lighter};
}
","[':root {', '--global-link-color-visited         : #{$link-light};', '--global-masthead-link-color-hover  : #{$background-light};']","/* ==========================================================================
   DARK THEME
   ========================================================================== */

/* Color codes used for the theme */
$gray                       : #7a8288;
$dark-gray                  : mix(#000, $gray, 40%);
$darker-gray                : mix(#000, $gray, 60%);
$light-gray                 : mix(#fff, $gray, 50%);

$background                 : #474747;
$background-light           : mix(#fff, $background, 80%);
$background-lighter         : mix(#fff, $background, 90%);
$text                       : #ffffff;
$link                       : #0ea1c5;
$link-dark                  : mix(#000, $link, 25%);
$link-light                 : mix(#fff, $link, 25%);

/* Color codes used for the site */
$danger-color               : #ee5f5b;
$info-color                 : #2f7f93;
$notice-color               : #7a8288;
$success-color              : #62c462;
$warning-color              : #f89406;

/* Other basic settings for the template */
$border-radius              : 4px;
$box-shadow                 : 0 1px 1px rgba(0, 0, 0, 0.125);
$global-transition          : all 0.2s ease-in-out;
$masthead-height            : 70px;
$navicon-width              : 28px;
$navicon-height             : 4px;
$sidebar-link-max-width     : 250px;
$sidebar-screen-min-width   : 1024px;

/* Dark theme for the site */
html[data-theme=""dark""] {
    --global-base-color                 : #{$background};
    --global-bg-color                   : #{$background};
    --global-border-color               : #{$background-light};
    --global-code-background-color      : #fafafa;
    --global-code-text-color            : #{$darker-gray};
    --global-fig-caption-color          : #{$dark-gray};
    --global-link-color                 : #{$link};
    --global-link-color-hover           : #{$link-dark};
    --global-link-color-visited         : #{$link-light};
    --global-masthead-link-color        : #{$text};
    --global-masthead-link-color-hover  : #{$background-light};
    --global-text-color                 : #{$text};
    --global-text-color-light           : #{$light-gray};
    --global-thead-color                : #{$background-lighter};
}
","['html[data-theme=""dark""] {', '--global-link-color-visited         : #{$link-light};', '--global-masthead-link-color-hover  : #{$background-light};']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,assets/css/main.scss,modified,"---
---

/*
 * This file controls what is imported from /_sass
 *
 * Note that the files are processed in the order they are imported, so they are partly
   sorted by the dependencies. Also, the first two lines of the file are required by Jekyll.
 */

@import 
    ""vendor/breakpoint/breakpoint"",

    ""themes"",
    ""theme/{{ site.site_theme | default: 'default' }}"",

    ""include/mixins"",
    ""vendor/susy/susy"",

    ""layout/reset"",
    ""layout/base"",

    ""include/utilities"",
    ""layout/tables"",
    ""layout/buttons"",
    ""layout/notices"",
    ""layout/masthead"",
    ""layout/navigation"",
    ""layout/footer"",
    ""syntax"",

    ""layout/forms"",

    ""layout/page"",
    ""layout/archive"",
    ""layout/sidebar"",
    
    ""vendor/font-awesome/fontawesome"",
    ""vendor/font-awesome/solid"",
    ""vendor/font-awesome/brands"",
    ""vendor/magnific-popup/magnific-popup""
;
","['@import', '""theme/{{ site.site_theme | default: \'default\' }}"",', '']","---
---

/*
 * This file controls what is imported from /_sass
 *
 * Note that the files are processed in the order they are imported, so they are partly
   sorted by the dependencies. Also, the first two lines of the file are required by Jekyll.
 */

@import
    ""vendor/breakpoint/breakpoint"",

    ""themes"",
    ""theme/default"",
    ""theme/dark"",

    ""include/mixins"",
    ""vendor/susy/susy"",

    ""layout/reset"",
    ""layout/base"",

    ""include/utilities"",
    ""layout/tables"",
    ""layout/buttons"",
    ""layout/notices"",
    ""layout/masthead"",
    ""layout/navigation"",
    ""layout/footer"",
    ""syntax"",

    ""layout/forms"",

    ""layout/page"",
    ""layout/archive"",
    ""layout/sidebar"",

    ""vendor/font-awesome/fontawesome"",
    ""vendor/font-awesome/solid"",
    ""vendor/font-awesome/brands"",
    ""vendor/magnific-popup/magnific-popup""
;
","['@import', '""theme/default"",', '""theme/dark"",', '']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,assets/js/_main.js,modified,"/* ==========================================================================
   jQuery plugin settings and other scripts
   ========================================================================== */

$(document).ready(function(){
  // These should be the same as the settings in _variables.scss
  scssLarge = 925; // pixels

  // Sticky footer
  var bumpIt = function() {
      $(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));
    },
    didResize = false;

  bumpIt();

  $(window).resize(function() {
    didResize = true;
  });
  setInterval(function() {
    if (didResize) {
      didResize = false;
      bumpIt();
    }
  }, 250);
  
  // FitVids init
  fitvids();

  // Follow menu drop down
  $("".author__urls-wrapper button"").on(""click"", function() {
    $("".author__urls"").fadeToggle(""fast"", function() {});
    $("".author__urls-wrapper button"").toggleClass(""open"");
  });

  // Restore the follow menu if toggled on a window resize
  jQuery(window).on('resize', function() {
    if ($('.author__urls.social-icons').css('display') == 'none' &amp;&amp; $(window).width() &gt;= scssLarge) {
      $("".author__urls"").css('display', 'block')
    }
  });    

  // init smooth scroll, this needs to be slightly more than then fixed masthead height
  $(""a"").smoothScroll({offset: -65});

  // add lightbox class to all image links
  $(""a[href$='.jpg'],a[href$='.jpeg'],a[href$='.JPG'],a[href$='.png'],a[href$='.gif']"").addClass(""image-popup"");

  // Magnific-Popup options
  $("".image-popup"").magnificPopup({
    type: 'image',
    tLoading: 'Loading image #%curr%...',
    gallery: {
      enabled: true,
      navigateByImgClick: true,
      preload: [0,1] // Will preload 0 - before current, and 1 after the current image
    },
    image: {
      tError: '
<a href=""%url%"">
 Image #%curr%
</a>
could not be loaded.',
    },
    removalDelay: 500, // Delay in milliseconds before popup is removed
    // Class that is added to body when popup is open.
    // make it unique to apply your CSS animations just to this exact popup
    mainClass: 'mfp-zoom-in',
    callbacks: {
      beforeOpen: function() {
        // just a hack that adds mfp-anim class to markup
        this.st.image.markup = this.st.image.markup.replace('mfp-figure', 'mfp-figure mfp-with-anim');
      }
    },
    closeOnContentClick: true,
    midClick: true // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
  });

});
","['$(document).ready(function(){', 'scssLarge = 925; // pixels', 'var bumpIt = function() {', '$(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));', '},', '$(window).resize(function() {', 'setInterval(function() {', '', '$("".author__urls-wrapper button"").on(""click"", function() {', '$("".author__urls"").fadeToggle(""fast"", function() {});', ""jQuery(window).on('resize', function() {"", '});', '$(""a"").smoothScroll({offset: -65});', 'preload: [0,1] // Will preload 0 - before current, and 1 after the current image', 'beforeOpen: function() {']","/* ==========================================================================
   jQuery plugin settings and other scripts
   ========================================================================== */

$(document).ready(function () {
  // Set the theme on page load
  var setTheme = function (theme) {
    const use_theme = theme || localStorage.getItem(""theme"") || $(""html"").attr(""data-theme"");
    if (use_theme === ""dark"") {
      $(""html"").attr(""data-theme"", ""dark"");
      $(""#theme-icon"").removeClass(""fa-sun"").addClass(""fa-moon"");
    } else if (use_theme === ""light"") {
      $(""html"").removeAttr(""data-theme"");
      $(""#theme-icon"").removeClass(""fa-moon"").addClass(""fa-sun"");
    }
  }
  setTheme();

  // Toggle the theme
  var toggleTheme = function () {
    const current_theme = $(""html"").attr(""data-theme"");
    const new_theme = current_theme === ""dark"" ? ""light"" : ""dark"";
    localStorage.setItem(""theme"", new_theme);
    setTheme(new_theme);
  }
  $('#theme-toggle').on('click', function () {
    toggleTheme();
  });

  // These should be the same as the settings in _variables.scss
  const scssLarge = 925; // pixels

  // Sticky footer
  var bumpIt = function () {
    $(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));
  },
    didResize = false;

  bumpIt();

  $(window).resize(function () {
    didResize = true;
  });
  setInterval(function () {
    if (didResize) {
      didResize = false;
      bumpIt();
    }
  }, 250);

  // FitVids init
  fitvids();

  // Follow menu drop down
  $("".author__urls-wrapper button"").on(""click"", function () {
    $("".author__urls"").fadeToggle(""fast"", function () { });
    $("".author__urls-wrapper button"").toggleClass(""open"");
  });

  // Restore the follow menu if toggled on a window resize
  jQuery(window).on('resize', function () {
    if ($('.author__urls.social-icons').css('display') == 'none' &amp;&amp; $(window).width() &gt;= scssLarge) {
      $("".author__urls"").css('display', 'block')
    }
  });

  // init smooth scroll, this needs to be slightly more than then fixed masthead height
  $(""a"").smoothScroll({ offset: -65 });

  // add lightbox class to all image links
  $(""a[href$='.jpg'],a[href$='.jpeg'],a[href$='.JPG'],a[href$='.png'],a[href$='.gif']"").addClass(""image-popup"");

  // Magnific-Popup options
  $("".image-popup"").magnificPopup({
    type: 'image',
    tLoading: 'Loading image #%curr%...',
    gallery: {
      enabled: true,
      navigateByImgClick: true,
      preload: [0, 1] // Will preload 0 - before current, and 1 after the current image
    },
    image: {
      tError: '
<a href=""%url%"">
 Image #%curr%
</a>
could not be loaded.',
    },
    removalDelay: 500, // Delay in milliseconds before popup is removed
    // Class that is added to body when popup is open.
    // make it unique to apply your CSS animations just to this exact popup
    mainClass: 'mfp-zoom-in',
    callbacks: {
      beforeOpen: function () {
        // just a hack that adds mfp-anim class to markup
        this.st.image.markup = this.st.image.markup.replace('mfp-figure', 'mfp-figure mfp-with-anim');
      }
    },
    closeOnContentClick: true,
    midClick: true // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
  });

});
","['$(document).ready(function () {', '// Set the theme on page load', 'var setTheme = function (theme) {', 'const use_theme = theme || localStorage.getItem(""theme"") || $(""html"").attr(""data-theme"");', 'if (use_theme === ""dark"") {', '$(""html"").attr(""data-theme"", ""dark"");', '$(""#theme-icon"").removeClass(""fa-sun"").addClass(""fa-moon"");', '} else if (use_theme === ""light"") {', '$(""html"").removeAttr(""data-theme"");', '$(""#theme-icon"").removeClass(""fa-moon"").addClass(""fa-sun"");', '}', '}', 'setTheme();', '', '// Toggle the theme', 'var toggleTheme = function () {', 'const current_theme = $(""html"").attr(""data-theme"");', 'const new_theme = current_theme === ""dark"" ? ""light"" : ""dark"";', 'localStorage.setItem(""theme"", new_theme);', 'setTheme(new_theme);', '}', ""$('#theme-toggle').on('click', function () {"", 'toggleTheme();', '});', '', 'const scssLarge = 925; // pixels', 'var bumpIt = function () {', '$(""body"").css(""margin-bottom"", $("".page__footer"").outerHeight(true));', '},', '$(window).resize(function () {', 'setInterval(function () {', '', '$("".author__urls-wrapper button"").on(""click"", function () {', '$("".author__urls"").fadeToggle(""fast"", function () { });', ""jQuery(window).on('resize', function () {"", '});', '$(""a"").smoothScroll({ offset: -65 });', 'preload: [0, 1] // Will preload 0 - before current, and 1 after the current image', 'beforeOpen: function () {']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,assets/js/main.min.js,modified,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,allow theme change on client side; a theme toggle button is added to the navbar,assets/js/plugins/jquery.greedy-navigation.js,modified,"/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if ($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children('*:not(.masthead__menu-item--lg)').length &gt; 0) {

      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);

      availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;

      // Show the dropdown btn
      $btn.removeClass(""hidden"");
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while (breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length - 1]) {
      // Move the item to the visible list
      $hlinks.children().first().appendTo($vlinks);
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if (breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

  // update masthead height and the body/sidebar top padding
  var mastheadHeight = $('.masthead').height();
  $('body').css('padding-top', mastheadHeight + 'px');
  if ($("".author__urls-wrapper button"").is("":visible"")) {
    $("".sidebar"").css(""padding-top"", """");
  } else {
    $("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");
  }

}

// Window listeners

$(window).on('resize', function () {
  updateNav();
});
screen.orientation.addEventListener(""change"", function () {
  updateNav();
});

$btn.on('click', function () {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","[""while ($vlinks.width() > availableSpace && $vlinks.children('*:not(.masthead__menu-item--lg)').length > 0) {"", '', ""$vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);"", '$hlinks.children().first().appendTo($vlinks);']","/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $vlinks_persist_tail = $vlinks.children(""*.persist.tail"");
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if ($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children(""*:not(.persist)"").length &gt; 0) {
      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children(""*:not(.persist)"").last().prependTo($hlinks);

      availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;

      // Show the dropdown btn
      $btn.removeClass(""hidden"");
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while (breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length - 1]) {
      // Move the item to the visible list
      if ($vlinks_persist_tail.children().length &gt; 0) {
        $hlinks.children().first().insertBefore($vlinks_persist_tail);
      } else {
        $hlinks.children().first().appendTo($vlinks);
      }
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if (breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

  // update masthead height and the body/sidebar top padding
  var mastheadHeight = $('.masthead').height();
  $('body').css('padding-top', mastheadHeight + 'px');
  if ($("".author__urls-wrapper button"").is("":visible"")) {
    $("".sidebar"").css(""padding-top"", """");
  } else {
    $("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");
  }

}

// Window listeners

$(window).on('resize', function () {
  updateNav();
});
screen.orientation.addEventListener(""change"", function () {
  updateNav();
});

$btn.on('click', function () {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","['var $vlinks_persist_tail = $vlinks.children(""*.persist.tail"");', 'while ($vlinks.width() > availableSpace && $vlinks.children(""*:not(.persist)"").length > 0) {', '$vlinks.children(""*:not(.persist)"").last().prependTo($hlinks);', 'if ($vlinks_persist_tail.children().length > 0) {', '$hlinks.children().first().insertBefore($vlinks_persist_tail);', '} else {', '$hlinks.children().first().appendTo($vlinks);', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/layout/_masthead.scss,modified,"/* ==========================================================================
   MASTHEAD
   ========================================================================== */

.masthead {
  position: fixed;
  background: var(--global-bg-color);
  border-bottom: 1px solid var(--global-border-color);
  height: $masthead-height;
  top: 0;
  width: 100%;

  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
  z-index: 20;

  &amp;__inner-wrap {
    @include container;
    @include clearfix;
    padding: 1em 1em 1em;
    font-family: $sans-serif-narrow;

    @include breakpoint($x-large) {
      max-width: $x-large;
    }

    nav {
      z-index: 10;
    }

    a {
      text-decoration: none;
    }
  }
}

.masthead__menu {

  ul {
    margin: 0;
    padding: 0;
    clear: both;
    list-style-type: none;
  }
}

.masthead__menu-item {
  background-color: var(--global-bg-color);
  display: block;
  list-style-type: none;
  white-space: nowrap;

  &amp;--lg {
    padding-right: 2em;
    font-weight: 700;
  }
}
","['border-bottom: 1px solid var(--global-border-color);', 'height: $masthead-height;', 'padding: 1em 1em 1em;']","/* ==========================================================================
   MASTHEAD
   ========================================================================== */

.masthead {
  position: fixed;
  background: var(--global-bg-color);
  height: fit-content;
  top: 0;
  width: 100%;

  -webkit-animation: intro 0.3s both;
          animation: intro 0.3s both;
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
  z-index: 20;

  &amp;::after {
    content: """";
    position: absolute;
    bottom: 0;
    height: 1px;
    background: var(--global-border-color);
    width: 100%;
  }

  &amp;__inner-wrap {
    @include container;
    @include clearfix;
    padding: 0.5em 1em;
    font-family: $sans-serif-narrow;

    @include breakpoint($x-large) {
      max-width: $x-large;
    }

    nav {
      z-index: 10;
    }

    a {
      text-decoration: none;
    }
  }
}

.masthead__menu {

  ul {
    margin: 0;
    padding: 0;
    clear: both;
    list-style-type: none;
  }
}

.masthead__menu-item {
  background-color: var(--global-bg-color);
  display: block;
  list-style-type: none;
  white-space: nowrap;

  &amp;--lg {
    padding-right: 2em;
    font-weight: 700;
  }
}
","['height: fit-content;', '&::after {', 'content: """";', 'position: absolute;', 'bottom: 0;', 'height: 1px;', 'background: var(--global-border-color);', 'width: 100%;', '}', '', 'padding: 0.5em 1em;']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",_sass/layout/_sidebar.scss,modified,"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;
   
  @media (orientation: portrait) {
    margin-top: 5em;
  }

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
","['', 'margin-top: 5em;']","/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;

  @media (orientation: portrait) {
    margin-top: 1em;
  }

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
","['', 'margin-top: 1em;']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/js/main.min.js,modified,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"deprecate $masthead-height variable, use automatic padding instead in case of height overflows",assets/js/plugins/jquery.greedy-navigation.js,modified,"/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children('*:not(.masthead__menu-item--lg)').length &gt; 0) {

      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);

      availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;
      
      // Show the dropdown btn
      if($btn.hasClass('hidden')) {
        $btn.removeClass('hidden');
      }
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while(breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length-1]) {
      // Move the item to the visible list
      $hlinks.children().first().appendTo($vlinks);
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if(breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

}

// Window listeners

$(window).on('resize', function() {
  updateNav();
});
screen.orientation.addEventListener(""change"", function(){
  updateNav();
});

$btn.on('click', function() {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","['if($vlinks.width() > availableSpace) {', ""availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;"", '', ""if($btn.hasClass('hidden')) {"", ""$btn.removeClass('hidden');"", '}', 'while(breaks.length > 0 && availableSpace > breaks[breaks.length-1]) {', 'if(breaks.length < 1) {', ""$(window).on('resize', function() {"", 'screen.orientation.addEventListener(""change"", function(){', ""$btn.on('click', function() {""]","/*
* Greedy Navigation
*
* http://codepen.io/lukejacksonn/pen/PwmwWV
*
*/

var $nav = $('#site-nav');
var $btn = $('#site-nav button');
var $vlinks = $('#site-nav .visible-links');
var $hlinks = $('#site-nav .hidden-links');

var breaks = [];

function updateNav() {

  var availableSpace = $btn.hasClass('hidden') ? $nav.width() : $nav.width() - $btn.width() - 30;

  // The visible list is overflowing the nav
  if ($vlinks.width() &gt; availableSpace) {

    while ($vlinks.width() &gt; availableSpace &amp;&amp; $vlinks.children('*:not(.masthead__menu-item--lg)').length &gt; 0) {

      // Record the width of the list
      breaks.push($vlinks.width());

      // Move item to the hidden list
      $vlinks.children('*:not(.masthead__menu-item--lg)').last().prependTo($hlinks);

      availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;

      // Show the dropdown btn
      $btn.removeClass(""hidden"");
    }

    // The visible list is not overflowing
  } else {

    // There is space for another item in the nav
    while (breaks.length &gt; 0 &amp;&amp; availableSpace &gt; breaks[breaks.length - 1]) {
      // Move the item to the visible list
      $hlinks.children().first().appendTo($vlinks);
      breaks.pop();
    }

    // Hide the dropdown btn if hidden list is empty
    if (breaks.length &lt; 1) {
      $btn.addClass('hidden');
      $btn.removeClass('close');
      $hlinks.addClass('hidden');
    }
  }

  // Keep counter updated
  $btn.attr(""count"", breaks.length);

  // update masthead height and the body/sidebar top padding
  var mastheadHeight = $('.masthead').height();
  $('body').css('padding-top', mastheadHeight + 'px');
  if ($("".author__urls-wrapper button"").is("":visible"")) {
    $("".sidebar"").css(""padding-top"", """");
  } else {
    $("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");
  }

}

// Window listeners

$(window).on('resize', function () {
  updateNav();
});
screen.orientation.addEventListener(""change"", function () {
  updateNav();
});

$btn.on('click', function () {
  $hlinks.toggleClass('hidden');
  $(this).toggleClass('close');
});

updateNav();
","['if ($vlinks.width() > availableSpace) {', 'availableSpace = $btn.hasClass(""hidden"") ? $nav.width() : $nav.width() - $btn.width() - 30;', '', '$btn.removeClass(""hidden"");', 'while (breaks.length > 0 && availableSpace > breaks[breaks.length - 1]) {', 'if (breaks.length < 1) {', '// update masthead height and the body/sidebar top padding', ""var mastheadHeight = $('.masthead').height();"", ""$('body').css('padding-top', mastheadHeight + 'px');"", 'if ($("".author__urls-wrapper button"").is("":visible"")) {', '$("".sidebar"").css(""padding-top"", """");', '} else {', '$("".sidebar"").css(""padding-top"", mastheadHeight + ""px"");', '}', '', ""$(window).on('resize', function () {"", 'screen.orientation.addEventListener(""change"", function () {', ""$btn.on('click', function () {""]"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Update _sidebar.scss

Fixes an issue where the sidebar (profile image/description) goes behind the navigation bar on mobile view (portrait)",_sass/layout/_sidebar.scss,modified,"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
",[],"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;
   
  @media (orientation: portrait) {
    margin-top: 5em;
  }

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
","['', '@media (orientation: portrait) {', 'margin-top: 5em;', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Update README.md

Updated line 20 to improve sentence flow.",README.md,modified,"# Academic Pages
**Academic Pages is a GitHub Pages template for personal and professional portfolio-oriented websites.**

![Academic Pages template example](images/homepage.png ""Academic Pages template example"")

# Getting Started

1. Register a GitHub account if you don't have one and confirm your e-mail (required!)
1. Click the ""Use this template"" button in the top right.
1. On the ""New repository"" page, enter your repository name as ""[your GitHub username].github.io"", which will also be your website's URL.
1. Set site-wide configuration and add your content.
1. Upload any files (like PDFs, .zip files, etc.) to the `files/` directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.
1. Check status by going to the repository settings, in the ""GitHub pages"" section
1. (Optional) Use the Jupyter notebooks or python scripts in the `markdown_generator` folder to generate markdown files for publications and talks from a TSV file.

See more info at https://academicpages.github.io/

## Running locally

When you are initially working your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:

1. Clone the repository and made updates as detailed above.
1. Make sure you have ruby-dev, bundler, and nodejs installed
    
    On most Linux distribution and [Windows Subsystem Linux](https://learn.microsoft.com/en-us/windows/wsl/about) the command is:
    ```bash
    sudo apt install ruby-dev ruby-bundler nodejs
    ```
    If you see error `Unable to locate package ruby-bundler`, `Unable to locate package nodejs `, run the following:
    ```bash
    sudo apt update &amp;&amp; sudo apt upgrade -y
    ```
    then try run `sudo apt install ruby-dev ruby-bundler nodejs` again.

    On MacOS the commands are:
    ```bash
    brew install ruby
    brew install node
    gem install bundler
    ```
1. Run `bundle install` to install ruby dependencies. If you get errors, delete Gemfile.lock and try again.

    If you see file permission error like `Fetching bundler-2.6.3.gem ERROR:  While executing gem (Gem::FilePermissionError) You don't have write permissions for the /var/lib/gems/3.2.0 directory.` or `Bundler::PermissionError: There was an error while trying to write to /usr/local/bin.`
    Install Gems Locally (Recommended):
    ```bash
    bundle config set --local path 'vendor/bundle'
    ```
    then try run `bundle install` again. If succeeded, you should see a folder called `vendor` and open `.gitignore` then add `vendor` inside it.

1. Run `jekyll serve -l -H localhost` to generate the HTML and serve it from `localhost:4000` the local server will automatically rebuild and refresh the pages on change.
    You may also try `bundle exec jekyll serve -l -H localhost` to ensure jekyll to use specific dependencies on your own local machine.

If you are running on Linux it may be necessary to install some additional dependencies prior to being able to run locally: `sudo apt install build-essential gcc make`

## Using Docker

Working from a different OS, or just want to avoid installing dependencies? You can use the provided `Dockerfile` to build a container that will run the site for you if you have [Docker](https://www.docker.com/) installed.

You can build and execute the container by running the following command in the repository:

```bash
docker compose up
```

You should now be able to access the website from `localhost:4000`.

# Maintenance

Bug reports and feature requests to the template should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).

This repository was forked (then detached) by [Stuart Geiger](https://github.com/staeiou) from the [Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/), which is © 2016 Michael Rose and released under the MIT License (see LICENSE.md). It is currently being maintained by [Robert Zupko](https://github.com/rjzupkoii) and additional maintainers would be welcomed.

## Bugfixes and enhancements

If you have bugfixes and enhancements that you would like to submit as a pull request, you will need to [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) this repository as opposed to using it as a template. This will also allow you to [synchronize your copy](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork) of template to your fork as well.

Unfortunately, one logistical issue with a template theme like Academic Pages that makes it a little tricky to get bug fixes and updates to the core theme. If you use this template and customize it, you will probably get merge conflicts if you attempt to synchronize. If you want to save your various .yml configuration files and markdown files, you can delete the repository and fork it again. Or you can manually patch.

---
<div align=""center"">
 ![pages-build-deployment](https://github.com/academicpages/academicpages.github.io/actions/workflows/pages/pages-build-deployment/badge.svg)
[![GitHub contributors](https://img.shields.io/github/contributors/academicpages/academicpages.github.io.svg)](https://github.com/academicpages/academicpages.github.io/graphs/contributors)
[![GitHub release](https://img.shields.io/github/v/release/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/releases/latest)
[![GitHub license](https://img.shields.io/github/license/academicpages/academicpages.github.io?color=blue)](https://github.com/academicpages/academicpages.github.io/blob/master/LICENSE)

[![GitHub stars](https://img.shields.io/github/stars/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io)
[![GitHub forks](https://img.shields.io/github/forks/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/fork)
</div>
","['When you are initially working your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:']","# Academic Pages
**Academic Pages is a GitHub Pages template for personal and professional portfolio-oriented websites.**

![Academic Pages template example](images/homepage.png ""Academic Pages template example"")

# Getting Started

1. Register a GitHub account if you don't have one and confirm your e-mail (required!)
1. Click the ""Use this template"" button in the top right.
1. On the ""New repository"" page, enter your repository name as ""[your GitHub username].github.io"", which will also be your website's URL.
1. Set site-wide configuration and add your content.
1. Upload any files (like PDFs, .zip files, etc.) to the `files/` directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.
1. Check status by going to the repository settings, in the ""GitHub pages"" section
1. (Optional) Use the Jupyter notebooks or python scripts in the `markdown_generator` folder to generate markdown files for publications and talks from a TSV file.

See more info at https://academicpages.github.io/

## Running locally

When you are initially working on your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:

1. Clone the repository and made updates as detailed above.
1. Make sure you have ruby-dev, bundler, and nodejs installed
    
    On most Linux distribution and [Windows Subsystem Linux](https://learn.microsoft.com/en-us/windows/wsl/about) the command is:
    ```bash
    sudo apt install ruby-dev ruby-bundler nodejs
    ```
    If you see error `Unable to locate package ruby-bundler`, `Unable to locate package nodejs `, run the following:
    ```bash
    sudo apt update &amp;&amp; sudo apt upgrade -y
    ```
    then try run `sudo apt install ruby-dev ruby-bundler nodejs` again.

    On MacOS the commands are:
    ```bash
    brew install ruby
    brew install node
    gem install bundler
    ```
1. Run `bundle install` to install ruby dependencies. If you get errors, delete Gemfile.lock and try again.

    If you see file permission error like `Fetching bundler-2.6.3.gem ERROR:  While executing gem (Gem::FilePermissionError) You don't have write permissions for the /var/lib/gems/3.2.0 directory.` or `Bundler::PermissionError: There was an error while trying to write to /usr/local/bin.`
    Install Gems Locally (Recommended):
    ```bash
    bundle config set --local path 'vendor/bundle'
    ```
    then try run `bundle install` again. If succeeded, you should see a folder called `vendor` and open `.gitignore` then add `vendor` inside it.

1. Run `jekyll serve -l -H localhost` to generate the HTML and serve it from `localhost:4000` the local server will automatically rebuild and refresh the pages on change.
    You may also try `bundle exec jekyll serve -l -H localhost` to ensure jekyll to use specific dependencies on your own local machine.

If you are running on Linux it may be necessary to install some additional dependencies prior to being able to run locally: `sudo apt install build-essential gcc make`

## Using Docker

Working from a different OS, or just want to avoid installing dependencies? You can use the provided `Dockerfile` to build a container that will run the site for you if you have [Docker](https://www.docker.com/) installed.

You can build and execute the container by running the following command in the repository:

```bash
docker compose up
```

You should now be able to access the website from `localhost:4000`.

# Maintenance

Bug reports and feature requests to the template should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).

This repository was forked (then detached) by [Stuart Geiger](https://github.com/staeiou) from the [Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/), which is © 2016 Michael Rose and released under the MIT License (see LICENSE.md). It is currently being maintained by [Robert Zupko](https://github.com/rjzupkoii) and additional maintainers would be welcomed.

## Bugfixes and enhancements

If you have bugfixes and enhancements that you would like to submit as a pull request, you will need to [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) this repository as opposed to using it as a template. This will also allow you to [synchronize your copy](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork) of template to your fork as well.

Unfortunately, one logistical issue with a template theme like Academic Pages that makes it a little tricky to get bug fixes and updates to the core theme. If you use this template and customize it, you will probably get merge conflicts if you attempt to synchronize. If you want to save your various .yml configuration files and markdown files, you can delete the repository and fork it again. Or you can manually patch.

---
<div align=""center"">
 ![pages-build-deployment](https://github.com/academicpages/academicpages.github.io/actions/workflows/pages/pages-build-deployment/badge.svg)
[![GitHub contributors](https://img.shields.io/github/contributors/academicpages/academicpages.github.io.svg)](https://github.com/academicpages/academicpages.github.io/graphs/contributors)
[![GitHub release](https://img.shields.io/github/v/release/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/releases/latest)
[![GitHub license](https://img.shields.io/github/license/academicpages/academicpages.github.io?color=blue)](https://github.com/academicpages/academicpages.github.io/blob/master/LICENSE)

[![GitHub stars](https://img.shields.io/github/stars/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io)
[![GitHub forks](https://img.shields.io/github/forks/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/fork)
</div>
","['When you are initially working on your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap/org-locations.js,modified,"var addressPoints = [
  [
    ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK"",
    51.4893335,
    -0.14405508452768728
  ],
  [
    ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA"",
    37.8708393,
    -122.272863
  ],
  [
    ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA"",
    37.7792588,
    -122.4193286
  ],
  [
    ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA"",
    34.0536909,
    -118.242766
  ]
];
","['[', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA"",', '37.7792588,', '-122.4193286', '],']","var addressPoints = [
  [
    ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK"",
    51.4893335,
    -0.14405508452768728
  ],
  [
    ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA"",
    37.8708393,
    -122.272863
  ],
  [
    ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA"",
    34.0536909,
    -118.242766
  ],
  [
    ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA"",
    37.7792588,
    -122.4193286
  ]
];
","['],', '[', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA"",', '37.7792588,', '-122.4193286']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:16.810855Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:16.810657Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.938183Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.937505Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n"",
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n"",
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.940290Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.940054Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.943342Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.942828Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.945196Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.945010Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.969546Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.969023Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.971475Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.971291Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:23.694311Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:23.693697Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK London, Greater London, England, United Kingdom\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA Berkeley, Alameda County, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:23.696332Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:23.696137Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:23.704293Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:23.703718Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""iopub.execute_input"": ""2025-02-25T03:09:16.810855Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:16.810657Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.938183Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.937505Z""', '""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\\r\\n""', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n"",', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: wrapt<2,>=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated->pygithub->getorg) (1.17.2)\\r\\n"",', '""Installing collected packages: python-frontmatter\\r\\n"",', '""from geopy import Nominatim""', '""iopub.execute_input"": ""2025-02-25T03:09:17.940290Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.940054Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.943342Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.942828Z""', '""iopub.execute_input"": ""2025-02-25T03:09:17.945196Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.945010Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.969546Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.969023Z""', '""iopub.execute_input"": ""2025-02-25T03:09:17.971475Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.971291Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:23.694311Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:23.693697Z""', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\\n""', '""Conference Proceeding talk 3 on Relevant Topic in Your Field<br />Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\\n""', '""    location_dict[description] = geocoder.geocode(location)\\n"",', '""    print(description, location_dict[description])""', '""iopub.execute_input"": ""2025-02-25T03:09:23.696332Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:23.696137Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:23.704293Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:23.703718Z""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-26T03:36:06.769536Z"",
     ""iopub.status.busy"": ""2025-02-26T03:36:06.769131Z"",
     ""iopub.status.idle"": ""2025-02-26T03:36:07.934020Z"",
     ""shell.execute_reply"": ""2025-02-26T03:36:07.933257Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n"",
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim\n"",
    ""from geopy.exc import GeocoderTimedOut""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-26T03:36:07.936149Z"",
     ""iopub.status.busy"": ""2025-02-26T03:36:07.935901Z"",
     ""iopub.status.idle"": ""2025-02-26T03:36:07.939314Z"",
     ""shell.execute_reply"": ""2025-02-26T03:36:07.938765Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-26T03:36:07.941580Z"",
     ""iopub.status.busy"": ""2025-02-26T03:36:07.941049Z"",
     ""iopub.status.idle"": ""2025-02-26T03:36:07.966143Z"",
     ""shell.execute_reply"": ""2025-02-26T03:36:07.965594Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Set the default timeout, in seconds\n"",
    ""TIMEOUT = 5\n"",
    ""\n"",
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-26T03:36:07.968167Z"",
     ""iopub.status.busy"": ""2025-02-26T03:36:07.967976Z"",
     ""iopub.status.idle"": ""2025-02-26T03:36:11.603488Z"",
     ""shell.execute_reply"": ""2025-02-26T03:36:11.602744Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK London, Greater London, England, United Kingdom\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA Berkeley, Alameda County, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    try:\n"",
    ""        location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)\n"",
    ""        print(description, location_dict[description])\n"",
    ""    except ValueError as ex:\n"",
    ""        print(f\""Error: geocode failed on input {location} with message {ex}\"")\n"",
    ""    except GeocoderTimedOut as ex:\n"",
    ""        print(f\""Error: geocode timed out on input {location} with message {ex}\"")\n"",
    ""    except Exception as ex:\n"",
    ""        print(f\""An unhandled exception occurred while processing input {location} with message {ex}\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-26T03:36:11.605607Z"",
     ""iopub.status.busy"": ""2025-02-26T03:36:11.605411Z"",
     ""iopub.status.idle"": ""2025-02-26T03:36:11.613528Z"",
     ""shell.execute_reply"": ""2025-02-26T03:36:11.612932Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""iopub.execute_input"": ""2025-02-26T03:36:06.769536Z"",', '""iopub.status.busy"": ""2025-02-26T03:36:06.769131Z"",', '""iopub.status.idle"": ""2025-02-26T03:36:07.934020Z"",', '""shell.execute_reply"": ""2025-02-26T03:36:07.933257Z""', '""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\\r\\n"",', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: wrapt<2,>=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated->pygithub->getorg) (1.17.2)\\r\\n""', '""Installing collected packages: python-frontmatter\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""from geopy import Nominatim\\n"",', '""from geopy.exc import GeocoderTimedOut""', '""iopub.execute_input"": ""2025-02-26T03:36:07.936149Z"",', '""iopub.status.busy"": ""2025-02-26T03:36:07.935901Z"",', '""iopub.status.idle"": ""2025-02-26T03:36:07.939314Z"",', '""shell.execute_reply"": ""2025-02-26T03:36:07.938765Z""', '""iopub.execute_input"": ""2025-02-26T03:36:07.941580Z"",', '""iopub.status.busy"": ""2025-02-26T03:36:07.941049Z"",', '""iopub.status.idle"": ""2025-02-26T03:36:07.966143Z"",', '""shell.execute_reply"": ""2025-02-26T03:36:07.965594Z""', '""# Set the default timeout, in seconds\\n"",', '""TIMEOUT = 5\\n"",', '""\\n"",', '""iopub.execute_input"": ""2025-02-26T03:36:07.968167Z"",', '""iopub.status.busy"": ""2025-02-26T03:36:07.967976Z"",', '""iopub.status.idle"": ""2025-02-26T03:36:11.603488Z"",', '""shell.execute_reply"": ""2025-02-26T03:36:11.602744Z""', '""Conference Proceeding talk 3 on Relevant Topic in Your Field<br />Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\\n""', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\\n""', '""    try:\\n"",', '""        location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)\\n"",', '""        print(description, location_dict[description])\\n"",', '""    except ValueError as ex:\\n"",', '""        print(f\\""Error: geocode failed on input {location} with message {ex}\\"")\\n"",', '""    except GeocoderTimedOut as ex:\\n"",', '""        print(f\\""Error: geocode timed out on input {location} with message {ex}\\"")\\n"",', '""    except Exception as ex:\\n"",', '""        print(f\\""An unhandled exception occurred while processing input {location} with message {ex}\\"")""', '""iopub.execute_input"": ""2025-02-26T03:36:11.605607Z"",', '""iopub.status.busy"": ""2025-02-26T03:36:11.605411Z"",', '""iopub.status.idle"": ""2025-02-26T03:36:11.613528Z"",', '""shell.execute_reply"": ""2025-02-26T03:36:11.612932Z""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#2865 Try to add a bit of error handling,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""from geopy import Nominatim""', '""    location_dict[description] = geocoder.geocode(location)\\n"",', '""    print(description, location_dict[description])""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim\n"",
    ""from geopy.exc import GeocoderTimedOut""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Set the default timeout, in seconds\n"",
    ""TIMEOUT = 5\n"",
    ""\n"",
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    try:\n"",
    ""        location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)\n"",
    ""        print(description, location_dict[description])\n"",
    ""    except ValueError as ex:\n"",
    ""        print(f\""Error: geocode failed on input {location} with message {ex}\"")\n"",
    ""    except GeocoderTimedOut as ex:\n"",
    ""        print(f\""Error: geocode timed out on input {location} with message {ex}\"")\n"",
    ""    except Exception as ex:\n"",
    ""        print(f\""An unhandled exception occurred while processing input {location} with message {ex}\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""from geopy import Nominatim\\n"",', '""from geopy.exc import GeocoderTimedOut""', '""# Set the default timeout, in seconds\\n"",', '""TIMEOUT = 5\\n"",', '""\\n"",', '""    try:\\n"",', '""        location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)\\n"",', '""        print(description, location_dict[description])\\n"",', '""    except ValueError as ex:\\n"",', '""        print(f\\""Error: geocode failed on input {location} with message {ex}\\"")\\n"",', '""    except GeocoderTimedOut as ex:\\n"",', '""        print(f\\""Error: geocode timed out on input {location} with message {ex}\\"")\\n"",', '""    except Exception as ex:\\n"",', '""        print(f\\""An unhandled exception occurred while processing input {location} with message {ex}\\"")""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#2865 Try to add a bit of error handling,talkmap.py,modified,"# Leaflet cluster map of talk locations
#
# Run this from the _talks/ directory, which contains .md files of all your
# talks. This scrapes the location YAML field from each .md file, geolocates it
# with geopy/Nominatim, and uses the getorg library to output data, HTML, and
# Javascript for a standalone cluster map. This is functionally the same as the
# #talkmap Jupyter notebook.
import frontmatter
import glob
import getorg
from geopy import Nominatim

# Collect the Markdown files
g = glob.glob(""_talks/*.md"")

# Prepare to geolocate
geocoder = Nominatim(user_agent=""academicpages.github.io"")
location_dict = {}
location = """"
permalink = """"
title = """"

# Perform geolocation
for file in g:
    # Read the file
    data = frontmatter.load(file)
    data = data.to_dict()

    # Press on if the location is not present
    if 'location' not in data:
        continue

    # Prepare the description
    title = data['title'].strip()
    venue = data['venue'].strip()
    location = data['location'].strip()
    description = f""{title}
<br/>
{venue}; {location}""

    # Geocode the location and report the status
    location_dict[description] = geocoder.geocode(location)
    print(description, location_dict[description])

# Save the map
m = getorg.orgmap.create_map_obj()
getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""talkmap"", hashed_usernames=False)
","['location_dict[description] = geocoder.geocode(location)', 'print(description, location_dict[description])']","# Leaflet cluster map of talk locations
#
# Run this from the _talks/ directory, which contains .md files of all your
# talks. This scrapes the location YAML field from each .md file, geolocates it
# with geopy/Nominatim, and uses the getorg library to output data, HTML, and
# Javascript for a standalone cluster map. This is functionally the same as the
# #talkmap Jupyter notebook.
import frontmatter
import glob
import getorg
from geopy import Nominatim
from geopy.exc import GeocoderTimedOut

# Set the default timeout, in seconds
TIMEOUT = 5

# Collect the Markdown files
g = glob.glob(""_talks/*.md"")

# Prepare to geolocate
geocoder = Nominatim(user_agent=""academicpages.github.io"")
location_dict = {}
location = """"
permalink = """"
title = """"

# Perform geolocation
for file in g:
    # Read the file
    data = frontmatter.load(file)
    data = data.to_dict()

    # Press on if the location is not present
    if 'location' not in data:
        continue

    # Prepare the description
    title = data['title'].strip()
    venue = data['venue'].strip()
    location = data['location'].strip()
    description = f""{title}
<br/>
{venue}; {location}""

    # Geocode the location and report the status
    try:
        location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)
        print(description, location_dict[description])
    except ValueError as ex:
        print(f""Error: geocode failed on input {location} with message {ex}"")
    except GeocoderTimedOut as ex:
        print(f""Error: geocode timed out on input {location} with message {ex}"")
    except Exception as ex:
        print(f""An unhandled exception occurred while processing input {location} with message {ex}"")

# Save the map
m = getorg.orgmap.create_map_obj()
getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""talkmap"", hashed_usernames=False)
","['from geopy.exc import GeocoderTimedOut', '', '# Set the default timeout, in seconds', 'TIMEOUT = 5', 'try:', 'location_dict[description] = geocoder.geocode(location, timeout=TIMEOUT)', 'print(description, location_dict[description])', 'except ValueError as ex:', 'print(f""Error: geocode failed on input {location} with message {ex}"")', 'except GeocoderTimedOut as ex:', 'print(f""Error: geocode timed out on input {location} with message {ex}"")', 'except Exception as ex:', 'print(f""An unhandled exception occurred while processing input {location} with message {ex}"")']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Close #30, update stand-alone script",talkmap.py,modified,"# # Leaflet cluster map of talk locations
#
# (c) 2016-2017 R. Stuart Geiger, released under the MIT license
#
# Run this from the _talks/ directory, which contains .md files of all your talks. 
# This scrapes the location YAML field from each .md file, geolocates it with
# geopy/Nominatim, and uses the getorg library to output data, HTML,
# and Javascript for a standalone cluster map.
#
# Requires: glob, getorg, geopy

import glob
import getorg
from geopy import Nominatim

g = glob.glob(""*.md"")


geocoder = Nominatim()
location_dict = {}
location = """"
permalink = """"
title = """"


for file in g:
    with open(file, 'r') as f:
        lines = f.read()
        if lines.find('location: ""') &gt; 1:
            loc_start = lines.find('location: ""') + 11
            lines_trim = lines[loc_start:]
            loc_end = lines_trim.find('""')
            location = lines_trim[:loc_end]
                            
           
        location_dict[location] = geocoder.geocode(location)
        print(location, ""\n"", location_dict[location])


m = getorg.orgmap.create_map_obj()
getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""../talkmap"", hashed_usernames=False)
","['', '', '# # Leaflet cluster map of talk locations', '#', '# (c) 2016-2017 R. Stuart Geiger, released under the MIT license', '# Run this from the _talks/ directory, which contains .md files of all your talks.', '# This scrapes the location YAML field from each .md file, geolocates it with', '# geopy/Nominatim, and uses the getorg library to output data, HTML,', '# and Javascript for a standalone cluster map.', '#', '# Requires: glob, getorg, geopy', '', 'g = glob.glob(""*.md"")', '', 'geocoder = Nominatim()', '', ""with open(file, 'r') as f:"", 'lines = f.read()', 'if lines.find(\'location: ""\') > 1:', 'loc_start = lines.find(\'location: ""\') + 11', 'lines_trim = lines[loc_start:]', 'loc_end = lines_trim.find(\'""\')', 'location = lines_trim[:loc_end]', '', '', 'location_dict[location] = geocoder.geocode(location)', 'print(location, ""\\n"", location_dict[location])', '', '', 'm = getorg.orgmap.create_map_obj()', 'getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""../talkmap"", hashed_usernames=False)']","# Leaflet cluster map of talk locations
#
# Run this from the _talks/ directory, which contains .md files of all your
# talks. This scrapes the location YAML field from each .md file, geolocates it
# with geopy/Nominatim, and uses the getorg library to output data, HTML, and
# Javascript for a standalone cluster map. This is functionally the same as the
# #talkmap Jupyter notebook.
import frontmatter
import glob
import getorg
from geopy import Nominatim

# Collect the Markdown files
g = glob.glob(""_talks/*.md"")

# Prepare to geolocate
geocoder = Nominatim(user_agent=""academicpages.github.io"")
location_dict = {}
location = """"
permalink = """"
title = """"

# Perform geolocation
for file in g:
    # Read the file
    data = frontmatter.load(file)
    data = data.to_dict()

    # Press on if the location is not present
    if 'location' not in data:
        continue

    # Prepare the description
    title = data['title'].strip()
    venue = data['venue'].strip()
    location = data['location'].strip()
    description = f""{title}
<br/>
{venue}; {location}""

    # Geocode the location and report the status
    location_dict[description] = geocoder.geocode(location)
    print(description, location_dict[description])

# Save the map
m = getorg.orgmap.create_map_obj()
getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""talkmap"", hashed_usernames=False)
","['# Leaflet cluster map of talk locations', '# Run this from the _talks/ directory, which contains .md files of all your', '# talks. This scrapes the location YAML field from each .md file, geolocates it', '# with geopy/Nominatim, and uses the getorg library to output data, HTML, and', '# Javascript for a standalone cluster map. This is functionally the same as the', '# #talkmap Jupyter notebook.', 'import frontmatter', '# Collect the Markdown files', 'g = glob.glob(""_talks/*.md"")', '# Prepare to geolocate', 'geocoder = Nominatim(user_agent=""academicpages.github.io"")', '# Perform geolocation', '# Read the file', 'data = frontmatter.load(file)', 'data = data.to_dict()', '# Press on if the location is not present', ""if 'location' not in data:"", 'continue', '# Prepare the description', ""title = data['title'].strip()"", ""venue = data['venue'].strip()"", ""location = data['location'].strip()"", 'description = f""{title}<br />{venue}; {location}""', '# Geocode the location and report the status', 'location_dict[description] = geocoder.geocode(location)', 'print(description, location_dict[description])', '# Save the map', 'm = getorg.orgmap.create_map_obj()', 'getorg.orgmap.output_html_cluster_map(location_dict, folder_name=""talkmap"", hashed_usernames=False)']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap/org-locations.js,modified,"var addressPoints = [
  [
    ""Berkeley CA, USA"",
    37.8708393,
    -122.2728638
  ],
  [
    ""London, UK"",
    51.5073219,
    -0.1276473
  ],
  [
    ""San Francisco, California"",
    37.7792808,
    -122.4192362
  ],
  [
    ""Los Angeles, CA"",
    34.0543942,
    -118.2439408
  ]
];
","['""Berkeley CA, USA"",', '37.8708393,', '-122.2728638', '""London, UK"",', '51.5073219,', '-0.1276473', '""San Francisco, California"",', '37.7792808,', '-122.4192362', '""Los Angeles, CA"",', '34.0543942,', '-118.2439408']","var addressPoints = [
  [
    ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK"",
    51.4893335,
    -0.14405508452768728
  ],
  [
    ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA"",
    37.8708393,
    -122.272863
  ],
  [
    ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA"",
    37.7792588,
    -122.4193286
  ],
  [
    ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA"",
    34.0536909,
    -118.242766
  ]
];
","['""Talk 2 on Relevant Topic in Your Field<br />London School of Testing; London, UK"",', '51.4893335,', '-0.14405508452768728', '""Tutorial 1 on Relevant Topic in Your Field<br />UC-Berkeley Institute for Testing Science; Berkeley, CA, USA"",', '37.8708393,', '-122.272863', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA"",', '37.7792588,', '-122.4193286', '""Conference Proceeding talk 3 on Relevant Topic in Your Field<br />Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA"",', '34.0536909,', '-118.242766']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n"",
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}\\n{venue}; {location}\""\n"",
    ""    print(description)\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n""', '""Installing collected packages: python-frontmatter\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""', '""g = glob.glob(\\""*.md\\"")""', '""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""', '""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""', '""outputs"": [],', '""    description = f\\""{title}\\\\n{venue}; {location}\\""\\n"",', '""    print(description)\\n"",', '""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""', '""\'Written map to ../talkmap/\'""', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""../talkmap\\"", hashed_usernames=False)""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:16.810855Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:16.810657Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.938183Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.937505Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n"",
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n"",
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.940290Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.940054Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.943342Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.942828Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.945196Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.945010Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:17.969546Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:17.969023Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:17.971475Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:17.971291Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:23.694311Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:23.693697Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 2 on Relevant Topic in Your Field
<br/>
London School of Testing; London, UK London, Greater London, England, United Kingdom\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Tutorial 1 on Relevant Topic in Your Field
<br/>
UC-Berkeley Institute for Testing Science; Berkeley, CA, USA Berkeley, Alameda County, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Talk 1 on Relevant Topic in Your Field
<br/>
UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Conference Proceeding talk 3 on Relevant Topic in Your Field
<br/>
Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T03:09:23.696332Z"",
     ""iopub.status.busy"": ""2025-02-25T03:09:23.696137Z"",
     ""iopub.status.idle"": ""2025-02-25T03:09:23.704293Z"",
     ""shell.execute_reply"": ""2025-02-25T03:09:23.703718Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""iopub.execute_input"": ""2025-02-25T03:09:16.810855Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:16.810657Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.938183Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.937505Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Installing collected packages: python-frontmatter\\r\\n"",', '""iopub.execute_input"": ""2025-02-25T03:09:17.940290Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.940054Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.943342Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.942828Z""', '""g = glob.glob(\\""_talks/*.md\\"")""', '""iopub.execute_input"": ""2025-02-25T03:09:17.945196Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.945010Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:17.969546Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:17.969023Z""', '{', '""cell_type"": ""markdown"",', '""metadata"": {},', '""source"": [', '""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""', ']', '},', '""iopub.execute_input"": ""2025-02-25T03:09:17.971475Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:17.971291Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:23.694311Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:23.693697Z""', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Talk 2 on Relevant Topic in Your Field<br />London School of Testing; London, UK London, Greater London, England, United Kingdom\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Tutorial 1 on Relevant Topic in Your Field<br />UC-Berkeley Institute for Testing Science; Berkeley, CA, USA Berkeley, Alameda County, California, United States\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Talk 1 on Relevant Topic in Your Field<br />UC San Francisco, Department of Testing; San Francisco, CA, USA San Francisco, California, United States\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Conference Proceeding talk 3 on Relevant Topic in Your Field<br />Testing Institute of America 2014 Annual Conference; Los Angeles, CA, USA Los Angeles, Los Angeles County, California, United States\\n""', ']', '}', '],', '""    description = f\\""{title}<br />{venue}; {location}\\""\\n"",', '""iopub.execute_input"": ""2025-02-25T03:09:23.696332Z"",', '""iopub.status.busy"": ""2025-02-25T03:09:23.696137Z"",', '""iopub.status.idle"": ""2025-02-25T03:09:23.704293Z"",', '""shell.execute_reply"": ""2025-02-25T03:09:23.703718Z""', '""\'Written map to talkmap/\'""', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""talkmap\\"", hashed_usernames=False)""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n""', '""!pip install getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""', '""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""', '""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '}', '],', '""    with open(file, \'r\') as f:\\n"",', '""        lines = f.read()\\n"",', '""        if lines.find(\'location: \\""\') > 1:\\n"",', '""            loc_start = lines.find(\'location: \\""\') + 11\\n"",', '""            lines_trim = lines[loc_start:]\\n"",', '""            loc_end = lines_trim.find(\'\\""\')\\n"",', '""            location = lines_trim[:loc_end]\\n"",', '""                            \\n"",', '""           \\n"",', '""        location_dict[location] = geocoder.geocode(location)\\n"",', '""        print(location, \\""\\\\n\\"", location_dict[location])\\n""', '""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n"",
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}\\n{venue}; {location}\""\n"",
    ""    print(description)\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install python-frontmatter getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""', '""Collecting python-frontmatter\\r\\n"",', '""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\\r\\n""', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n"",', '""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\\r\\n"",', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n""', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n"",', '""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Installing collected packages: python-frontmatter\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Successfully installed python-frontmatter-1.1.0\\r\\n""', '""!pip install python-frontmatter getorg --upgrade\\n"",', '""import frontmatter\\n"",', '""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""', '""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""', '""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""', '""outputs"": [],', '""    # Read the file\\n"",', '""    data = frontmatter.load(file)\\n"",', '""    data = data.to_dict()\\n"",', '""\\n"",', '""    # Press on if the location is not present\\n"",', '""    if \'location\' not in data:\\n"",', '""        continue\\n"",', '""\\n"",', '""    # Prepare the description\\n"",', '""    title = data[\'title\'].strip()\\n"",', '""    venue = data[\'venue\'].strip()\\n"",', '""    location = data[\'location\'].strip()\\n"",', '""    description = f\\""{title}\\\\n{venue}; {location}\\""\\n"",', '""    print(description)\\n"",', '""\\n"",', '""    # Geocode the location and report the status\\n"",', '""    location_dict[description] = geocoder.geocode(location)\\n"",', '""    print(description, location_dict[description])""', '""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#30 fix geolocation bug,_talks/2012-03-01-talk-1.md,modified,"---
title: ""Talk 1 on Relevant Topic in Your Field""
collection: talks
type: ""Talk""
permalink: /talks/2012-03-01-talk-1
venue: ""UC San Francisco, Department of Testing""
date: 2012-03-01
location: ""San Francisco, California""
---

This is a description of your talk, which is a markdown file that can be all markdown-ified like any other post. Yay markdown!
","['location: ""San Francisco, California""']","---
title: ""Talk 1 on Relevant Topic in Your Field""
collection: talks
type: ""Talk""
permalink: /talks/2012-03-01-talk-1
venue: ""UC San Francisco, Department of Testing""
date: 2012-03-01
location: ""San Francisco, CA, USA""
---

This is a description of your talk, which is a markdown file that can be all markdown-ified like any other post. Yay markdown!
","['location: ""San Francisco, CA, USA""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#30 fix geolocation bug,_talks/2013-03-01-tutorial-1.md,modified,"---
title: ""Tutorial 1 on Relevant Topic in Your Field""
collection: talks
type: ""Tutorial""
permalink: /talks/2013-03-01-tutorial-1
venue: ""UC-Berkeley Institute for Testing Science""
date: 2013-03-01
location: ""Berkeley CA, USA""
---

[More information here](http://exampleurl.com)

This is a description of your tutorial, note the different field in type. This is a markdown files that can be all markdown-ified like any other post. Yay markdown!
","['location: ""Berkeley CA, USA""']","---
title: ""Tutorial 1 on Relevant Topic in Your Field""
collection: talks
type: ""Tutorial""
permalink: /talks/2013-03-01-tutorial-1
venue: ""UC-Berkeley Institute for Testing Science""
date: 2013-03-01
location: ""Berkeley, CA, USA""
---

[More information here](http://exampleurl.com)

This is a description of your tutorial, note the different field in type. This is a markdown files that can be all markdown-ified like any other post. Yay markdown!
","['location: ""Berkeley, CA, USA""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#30 fix geolocation bug,_talks/2014-03-01-talk-3.md,modified,"---
title: ""Conference Proceeding talk 3 on Relevant Topic in Your Field""
collection: talks
type: ""Conference proceedings talk""
permalink: /talks/2014-03-01-talk-3
venue: ""Testing Institute of America 2014 Annual Conference""
date: 2014-03-01
location: ""Los Angeles, CA""
---

This is a description of your conference proceedings talk, note the different field in type. You can put anything in this field.
","['location: ""Los Angeles, CA""']","---
title: ""Conference Proceeding talk 3 on Relevant Topic in Your Field""
collection: talks
type: ""Conference proceedings talk""
permalink: /talks/2014-03-01-talk-3
venue: ""Testing Institute of America 2014 Annual Conference""
date: 2014-03-01
location: ""Los Angeles, CA, USA""
---

This is a description of your conference proceedings talk, note the different field in type. You can put anything in this field.
","['location: ""Los Angeles, CA, USA""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#30 fix geolocation bug,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}\\n{venue}; {location}\""\n"",
    ""    print(description)\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""g = glob.glob(\\""*.md\\"")""', '""    description = f\\""{title}\\\\n{venue}; {location}\\""\\n"",', '""    print(description)\\n"",', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""../talkmap\\"", hashed_usernames=False)""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""_talks/*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}
<br/>
{venue}; {location}\""\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""g = glob.glob(\\""_talks/*.md\\"")""', '{', '""cell_type"": ""markdown"",', '""metadata"": {},', '""source"": [', '""In the event that this times out with an error, double check to make sure that the location is can be properly geolocated.""', ']', '},', '""    description = f\\""{title}<br />{venue}; {location}\\""\\n"",', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""talkmap\\"", hashed_usernames=False)""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n""', '""!pip install getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""', '""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""', '""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '}', '],', '""    with open(file, \'r\') as f:\\n"",', '""        lines = f.read()\\n"",', '""        if lines.find(\'location: \\""\') > 1:\\n"",', '""            loc_start = lines.find(\'location: \\""\') + 11\\n"",', '""            lines_trim = lines[loc_start:]\\n"",', '""            loc_end = lines_trim.find(\'\\""\')\\n"",', '""            location = lines_trim[:loc_end]\\n"",', '""                            \\n"",', '""           \\n"",', '""        location_dict[location] = geocoder.geocode(location)\\n"",', '""        print(location, \\""\\\\n\\"", location_dict[location])\\n""', '""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Collecting python-frontmatter\r\n"",
      ""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n"",
      ""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\r\n"",
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n"",
      ""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Installing collected packages: python-frontmatter\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Successfully installed python-frontmatter-1.1.0\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}\\n{venue}; {location}\""\n"",
    ""    print(description)\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",
     ""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",
     ""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",
     ""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install python-frontmatter getorg --upgrade\\n"",', '""iopub.execute_input"": ""2025-02-25T02:57:21.388444Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:21.387866Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.511527Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.510903Z""', '""Collecting python-frontmatter\\r\\n"",', '""  Downloading python_frontmatter-1.1.0-py3-none-any.whl.metadata (4.1 kB)\\r\\n""', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n"",', '""Requirement already satisfied: PyYAML in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from python-frontmatter) (6.0.2)\\r\\n"",', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n""', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n"",', '""Downloading python_frontmatter-1.1.0-py3-none-any.whl (9.8 kB)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Installing collected packages: python-frontmatter\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Successfully installed python-frontmatter-1.1.0\\r\\n""', '""!pip install python-frontmatter getorg --upgrade\\n"",', '""import frontmatter\\n"",', '""iopub.execute_input"": ""2025-02-25T02:57:22.513776Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.513344Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.516648Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.516090Z""', '""iopub.execute_input"": ""2025-02-25T02:57:22.518622Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.518252Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.543417Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.542908Z""', '""iopub.execute_input"": ""2025-02-25T02:57:22.545540Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.545175Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.549637Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.549147Z""', '""outputs"": [],', '""    # Read the file\\n"",', '""    data = frontmatter.load(file)\\n"",', '""    data = data.to_dict()\\n"",', '""\\n"",', '""    # Press on if the location is not present\\n"",', '""    if \'location\' not in data:\\n"",', '""        continue\\n"",', '""\\n"",', '""    # Prepare the description\\n"",', '""    title = data[\'title\'].strip()\\n"",', '""    venue = data[\'venue\'].strip()\\n"",', '""    location = data[\'location\'].strip()\\n"",', '""    description = f\\""{title}\\\\n{venue}; {location}\\""\\n"",', '""    print(description)\\n"",', '""\\n"",', '""    # Geocode the location and report the status\\n"",', '""    location_dict[description] = geocoder.geocode(location)\\n"",', '""    print(description, location_dict[description])""', '""iopub.execute_input"": ""2025-02-25T02:57:22.551418Z"",', '""iopub.status.busy"": ""2025-02-25T02:57:22.551243Z"",', '""iopub.status.idle"": ""2025-02-25T02:57:22.558593Z"",', '""shell.execute_reply"": ""2025-02-25T02:57:22.557942Z""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""', '""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""', '""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""', '""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""', '""\\n"",', '""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\\n"",', '""\\n"",', '""```bash\\n"",', '""sudo apt install jupyter\\n"",', '""sudo apt install python3-pip\\n"",', '""pip install getorg --upgrade\\n"",', '""```\\n"",', '""\\n"",', '""After which you can run this from the `_talks/` directory, via:\\n"",', '""\\n"",', '""```bash\\n"",', '"" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\\n"",', '""```\\n"",', '"" \\n"",', '""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""', '""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""# Start by installing the dependencies\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""', '""# Collect the Markdown files\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""', '""# Prepare to geolocate\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""', '""# Perform geolocation\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""', '""# Save the map\\n"",']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#30 updated talk descriptions,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install getorg --upgrade\\n"",', '""!pip install getorg --upgrade\\n"",', '""    with open(file, \'r\') as f:\\n"",', '""        lines = f.read()\\n"",', '""        if lines.find(\'location: \\""\') > 1:\\n"",', '""            loc_start = lines.find(\'location: \\""\') + 11\\n"",', '""            lines_trim = lines[loc_start:]\\n"",', '""            loc_end = lines_trim.find(\'\\""\')\\n"",', '""            location = lines_trim[:loc_end]\\n"",', '""                            \\n"",', '""           \\n"",', '""        location_dict[location] = geocoder.geocode(location)\\n"",', '""        print(location, \\""\\\\n\\"", location_dict[location])\\n""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install python-frontmatter getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install python-frontmatter getorg --upgrade\n"",
    ""import frontmatter\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    # Read the file\n"",
    ""    data = frontmatter.load(file)\n"",
    ""    data = data.to_dict()\n"",
    ""\n"",
    ""    # Press on if the location is not present\n"",
    ""    if 'location' not in data:\n"",
    ""        continue\n"",
    ""\n"",
    ""    # Prepare the description\n"",
    ""    title = data['title'].strip()\n"",
    ""    venue = data['venue'].strip()\n"",
    ""    location = data['location'].strip()\n"",
    ""    description = f\""{title}\\n{venue}; {location}\""\n"",
    ""    print(description)\n"",
    ""\n"",
    ""    # Geocode the location and report the status\n"",
    ""    location_dict[description] = geocoder.geocode(location)\n"",
    ""    print(description, location_dict[description])""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""pip install python-frontmatter getorg --upgrade\\n"",', '""!pip install python-frontmatter getorg --upgrade\\n"",', '""import frontmatter\\n"",', '""    # Read the file\\n"",', '""    data = frontmatter.load(file)\\n"",', '""    data = data.to_dict()\\n"",', '""\\n"",', '""    # Press on if the location is not present\\n"",', '""    if \'location\' not in data:\\n"",', '""        continue\\n"",', '""\\n"",', '""    # Prepare the description\\n"",', '""    title = data[\'title\'].strip()\\n"",', '""    venue = data[\'venue\'].strip()\\n"",', '""    location = data[\'location\'].strip()\\n"",', '""    description = f\\""{title}\\\\n{venue}; {location}\\""\\n"",', '""    print(description)\\n"",', '""\\n"",', '""    # Geocode the location and report the status\\n"",', '""    location_dict[description] = geocoder.geocode(location)\\n"",', '""    print(description, location_dict[description])""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""', '""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""', '""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""', '""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""', '""\\n"",', '""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",
     ""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",
     ""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",
     ""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\\n"",', '""\\n"",', '""```bash\\n"",', '""sudo apt install jupyter\\n"",', '""sudo apt install python3-pip\\n"",', '""pip install getorg --upgrade\\n"",', '""```\\n"",', '""\\n"",', '""After which you can run this from the `_talks/` directory, via:\\n"",', '""\\n"",', '""```bash\\n"",', '"" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\\n"",', '""```\\n"",', '"" \\n"",', '""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""', '""iopub.execute_input"": ""2025-02-22T01:30:05.703774Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:05.703517Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.843336Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.842591Z""', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""# Start by installing the dependencies\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.845946Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.845467Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.849121Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.848477Z""', '""# Collect the Markdown files\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.851364Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.850962Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:06.876444Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:06.875850Z""', '""# Prepare to geolocate\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:06.878925Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:06.878494Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.224074Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.223402Z""', '""# Perform geolocation\\n"",', '""iopub.execute_input"": ""2025-02-22T01:30:09.226429Z"",', '""iopub.status.busy"": ""2025-02-22T01:30:09.225951Z"",', '""iopub.status.idle"": ""2025-02-22T01:30:09.233806Z"",', '""shell.execute_reply"": ""2025-02-22T01:30:09.233240Z""', '""# Save the map\\n"",']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,added,"page does not exist
",[],"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['{', '""cells"": [', '{', '""cell_type"": ""markdown"",', '""metadata"": {},', '""source"": [', '""# Leaflet cluster map of talk locations\\n"",', '""\\n"",', '""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 1,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""', '}', '},', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\\r\\n"",', '""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\\r\\n"",', '""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\\r\\n"",', '""Requirement already satisfied: geographiclib<3,>=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy->getorg) (2.0)\\r\\n"",', '""Requirement already satisfied: pynacl>=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (1.5.0)\\r\\n"",', '""Requirement already satisfied: requests>=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (2.32.3)\\r\\n"",', '""Requirement already satisfied: pyjwt>=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (2.10.1)\\r\\n"",', '""Requirement already satisfied: typing-extensions>=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (4.12.2)\\r\\n"",', '""Requirement already satisfied: urllib3>=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (2.3.0)\\r\\n"",', '""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (1.2.18)\\r\\n"",', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: wrapt<2,>=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated->pygithub->getorg) (1.17.2)\\r\\n"",', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\\n"",', '""Error raised:\\n"",', '""No module named \'ipyleaflet\'\\n"",', '""Check that you have enabled ipyleaflet in Jupyter with:\\n"",', '""    jupyter nbextension enable --py ipyleaflet\\n""', ']', '}', '],', '""source"": [', '""!pip install getorg --upgrade\\n"",', '""import glob\\n"",', '""import getorg\\n"",', '""from geopy import Nominatim""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 2,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""', '}', '},', '""outputs"": [],', '""source"": [', '""g = glob.glob(\\""*.md\\"")""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 3,', '""metadata"": {', '""collapsed"": true,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""', '}', '},', '""outputs"": [],', '""source"": [', '""geocoder = Nominatim(user_agent=\\""academicpages.github.io\\"")\\n"",', '""location_dict = {}\\n"",', '""location = \\""\\""\\n"",', '""permalink = \\""\\""\\n"",', '""title = \\""\\""""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 4,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""', '}', '},', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '}', '],', '""source"": [', '""\\n"",', '""for file in g:\\n"",', '""    with open(file, \'r\') as f:\\n"",', '""        lines = f.read()\\n"",', '""        if lines.find(\'location: \\""\') > 1:\\n"",', '""            loc_start = lines.find(\'location: \\""\') + 11\\n"",', '""            lines_trim = lines[loc_start:]\\n"",', '""            loc_end = lines_trim.find(\'\\""\')\\n"",', '""            location = lines_trim[:loc_end]\\n"",', '""                            \\n"",', '""           \\n"",', '""        location_dict[location] = geocoder.geocode(location)\\n"",', '""        print(location, \\""\\\\n\\"", location_dict[location])\\n""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 5,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""', '}', '},', '""outputs"": [', '{', '""data"": {', '""text/plain"": [', '""\'Written map to ../talkmap/\'""', ']', '},', '""execution_count"": 5,', '""metadata"": {},', '""output_type"": ""execute_result""', '}', '],', '""source"": [', '""m = getorg.orgmap.create_map_obj()\\n"",', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""../talkmap\\"", hashed_usernames=False)""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": null,', '""metadata"": {', '""collapsed"": true', '},', '""outputs"": [],', '""source"": []', '}', '],', '""metadata"": {', '""anaconda-cloud"": {},', '""kernelspec"": {', '""display_name"": ""Python 3"",', '""language"": ""python"",', '""name"": ""python3""', '},', '""language_info"": {', '""codemirror_mode"": {', '""name"": ""ipython"",', '""version"": 3', '},', '""file_extension"": "".py"",', '""mimetype"": ""text/x-python"",', '""name"": ""python"",', '""nbconvert_exporter"": ""python"",', '""pygments_lexer"": ""ipython3"",', '""version"": ""3.9.21""', '}', '},', '""nbformat"": 4,', '""nbformat_minor"": 0', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#2828 update notebook with documentation,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""', '""\\n"",']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\n"",
    ""\n"",
    ""```bash\n"",
    ""sudo apt install jupyter\n"",
    ""sudo apt install python3-pip\n"",
    ""pip install getorg --upgrade\n"",
    ""```\n"",
    ""\n"",
    ""After which you can run this from the `_talks/` directory, via:\n"",
    ""\n"",
    ""```bash\n"",
    "" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\n"",
    ""```\n"",
    "" \n"",
    ""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Start by installing the dependencies\n"",
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Collect the Markdown files\n"",
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""# Prepare to geolocate\n"",
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Perform geolocation\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""# Save the map\n"",
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""Assuming you are working in a Linux or Windows Subsystem for Linux environment, you may need to install some dependencies. Assuming a clean installation, the following will be needed:\\n"",', '""\\n"",', '""```bash\\n"",', '""sudo apt install jupyter\\n"",', '""sudo apt install python3-pip\\n"",', '""pip install getorg --upgrade\\n"",', '""```\\n"",', '""\\n"",', '""After which you can run this from the `_talks/` directory, via:\\n"",', '""\\n"",', '""```bash\\n"",', '"" jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb\\n"",', '""```\\n"",', '"" \\n"",', '""The `_talks/` directory contains `.md` files of all your talks. This scrapes the location YAML field from each `.md` file, geolocates it with `geopy/Nominatim`, and uses the `getorg` library to output data, HTML, and Javascript for a standalone cluster map.""', '""# Start by installing the dependencies\\n"",', '""# Collect the Markdown files\\n"",', '""# Prepare to geolocate\\n"",', '""# Perform geolocation\\n"",', '""# Save the map\\n"",']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,Automated update of talk locations,talkmap_out.ipynb,added,"page does not exist
",[],"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\r\n"",
      ""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\r\n"",
      ""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\r\n"",
      ""Requirement already satisfied: geographiclib&lt;3,&gt;=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy-&gt;getorg) (2.0)\r\n"",
      ""Requirement already satisfied: pynacl&gt;=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.5.0)\r\n"",
      ""Requirement already satisfied: requests&gt;=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.32.3)\r\n"",
      ""Requirement already satisfied: pyjwt&gt;=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (2.10.1)\r\n"",
      ""Requirement already satisfied: typing-extensions&gt;=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (4.12.2)\r\n"",
      ""Requirement already satisfied: urllib3&gt;=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (2.3.0)\r\n"",
      ""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub-&gt;getorg) (1.2.18)\r\n"",
      ""Requirement already satisfied: six&gt;=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying-&gt;getorg) (1.17.0)\r\n"",
      ""Requirement already satisfied: cryptography&gt;=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]&gt;=2.4.0-&gt;pygithub-&gt;getorg) (44.0.1)\r\n"",
      ""Requirement already satisfied: cffi&gt;=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (1.17.1)\r\n"",
      ""Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.4.1)\r\n"",
      ""Requirement already satisfied: idna&lt;4,&gt;=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (3.10)\r\n"",
      ""Requirement already satisfied: certifi&gt;=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests&gt;=2.14.0-&gt;pygithub-&gt;getorg) (2025.1.31)\r\n"",
      ""Requirement already satisfied: wrapt&lt;2,&gt;=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated-&gt;pygithub-&gt;getorg) (1.17.2)\r\n"",
      ""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi&gt;=1.4.1-&gt;pynacl&gt;=1.4.0-&gt;pygithub-&gt;getorg) (2.22)\r\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\n"",
      ""Error raised:\n"",
      ""No module named 'ipyleaflet'\n"",
      ""Check that you have enabled ipyleaflet in Jupyter with:\n"",
      ""    jupyter nbextension enable --py ipyleaflet\n""
     ]
    }
   ],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""
    }
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""
    }
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    },
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      "" \n"",
      "" None\n""
     ]
    }
   ],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false,
    ""execution"": {
     ""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",
     ""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",
     ""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",
     ""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""
    }
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.9.21""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['{', '""cells"": [', '{', '""cell_type"": ""markdown"",', '""metadata"": {},', '""source"": [', '""# Leaflet cluster map of talk locations\\n"",', '""\\n"",', '""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 1,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:40.748788Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:40.748590Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.820985Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.820264Z""', '}', '},', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Requirement already satisfied: getorg in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (0.3.1)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Requirement already satisfied: geopy in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.4.1)\\r\\n"",', '""Requirement already satisfied: pygithub in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (2.6.1)\\r\\n"",', '""Requirement already satisfied: retrying in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from getorg) (1.3.4)\\r\\n"",', '""Requirement already satisfied: geographiclib<3,>=1.52 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from geopy->getorg) (2.0)\\r\\n"",', '""Requirement already satisfied: pynacl>=1.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (1.5.0)\\r\\n"",', '""Requirement already satisfied: requests>=2.14.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (2.32.3)\\r\\n"",', '""Requirement already satisfied: pyjwt>=2.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (2.10.1)\\r\\n"",', '""Requirement already satisfied: typing-extensions>=4.0.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (4.12.2)\\r\\n"",', '""Requirement already satisfied: urllib3>=1.26.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (2.3.0)\\r\\n"",', '""Requirement already satisfied: Deprecated in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pygithub->getorg) (1.2.18)\\r\\n"",', '""Requirement already satisfied: six>=1.7.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from retrying->getorg) (1.17.0)\\r\\n"",', '""Requirement already satisfied: cryptography>=3.4.0 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pyjwt[crypto]>=2.4.0->pygithub->getorg) (44.0.1)\\r\\n"",', '""Requirement already satisfied: cffi>=1.4.1 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from pynacl>=1.4.0->pygithub->getorg) (1.17.1)\\r\\n"",', '""Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.4.1)\\r\\n"",', '""Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (3.10)\\r\\n"",', '""Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from requests>=2.14.0->pygithub->getorg) (2025.1.31)\\r\\n"",', '""Requirement already satisfied: wrapt<2,>=1.10 in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from Deprecated->pygithub->getorg) (1.17.2)\\r\\n"",', '""Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages (from cffi>=1.4.1->pynacl>=1.4.0->pygithub->getorg) (2.22)\\r\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Iywidgets and ipyleaflet support disabled. You must be in a Jupyter notebook to use this feature.\\n"",', '""Error raised:\\n"",', '""No module named \'ipyleaflet\'\\n"",', '""Check that you have enabled ipyleaflet in Jupyter with:\\n"",', '""    jupyter nbextension enable --py ipyleaflet\\n""', ']', '}', '],', '""source"": [', '""!pip install getorg --upgrade\\n"",', '""import glob\\n"",', '""import getorg\\n"",', '""from geopy import Nominatim""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 2,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.823539Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.823058Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.826460Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.825940Z""', '}', '},', '""outputs"": [],', '""source"": [', '""g = glob.glob(\\""*.md\\"")""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 3,', '""metadata"": {', '""collapsed"": true,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.828648Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.828276Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:41.853054Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:41.852554Z""', '}', '},', '""outputs"": [],', '""source"": [', '""geocoder = Nominatim(user_agent=\\""academicpages.github.io\\"")\\n"",', '""location_dict = {}\\n"",', '""location = \\""\\""\\n"",', '""permalink = \\""\\""\\n"",', '""title = \\""\\""""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 4,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:41.855227Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:41.854845Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.188915Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.188226Z""', '}', '},', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '},', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '"" \\n"",', '"" None\\n""', ']', '}', '],', '""source"": [', '""\\n"",', '""for file in g:\\n"",', '""    with open(file, \'r\') as f:\\n"",', '""        lines = f.read()\\n"",', '""        if lines.find(\'location: \\""\') > 1:\\n"",', '""            loc_start = lines.find(\'location: \\""\') + 11\\n"",', '""            lines_trim = lines[loc_start:]\\n"",', '""            loc_end = lines_trim.find(\'\\""\')\\n"",', '""            location = lines_trim[:loc_end]\\n"",', '""                            \\n"",', '""           \\n"",', '""        location_dict[location] = geocoder.geocode(location)\\n"",', '""        print(location, \\""\\\\n\\"", location_dict[location])\\n""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": 5,', '""metadata"": {', '""collapsed"": false,', '""execution"": {', '""iopub.execute_input"": ""2025-02-22T01:09:44.191211Z"",', '""iopub.status.busy"": ""2025-02-22T01:09:44.190804Z"",', '""iopub.status.idle"": ""2025-02-22T01:09:44.198598Z"",', '""shell.execute_reply"": ""2025-02-22T01:09:44.197939Z""', '}', '},', '""outputs"": [', '{', '""data"": {', '""text/plain"": [', '""\'Written map to ../talkmap/\'""', ']', '},', '""execution_count"": 5,', '""metadata"": {},', '""output_type"": ""execute_result""', '}', '],', '""source"": [', '""m = getorg.orgmap.create_map_obj()\\n"",', '""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\""../talkmap\\"", hashed_usernames=False)""', ']', '},', '{', '""cell_type"": ""code"",', '""execution_count"": null,', '""metadata"": {', '""collapsed"": true', '},', '""outputs"": [],', '""source"": []', '}', '],', '""metadata"": {', '""anaconda-cloud"": {},', '""kernelspec"": {', '""display_name"": ""Python 3"",', '""language"": ""python"",', '""name"": ""python3""', '},', '""language_info"": {', '""codemirror_mode"": {', '""name"": ""ipython"",', '""version"": 3', '},', '""file_extension"": "".py"",', '""mimetype"": ""text/x-python"",', '""name"": ""python"",', '""nbconvert_exporter"": ""python"",', '""pygments_lexer"": ""ipython3"",', '""version"": ""3.9.21""', '}', '},', '""nbformat"": 4,', '""nbformat_minor"": 0', '}']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#2828 address runner error,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim()\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""geocoder = Nominatim()\\n"",']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim(user_agent=\""academicpages.github.io\"")\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""geocoder = Nominatim(user_agent=\\""academicpages.github.io\\"")\\n"",']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,#2828 update kernel to python3,talkmap.ipynb,modified,"{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 1,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Requirement already up-to-date: getorg in /home/vm/anaconda3/lib/python3.5/site-packages\n"",
      ""Requirement already up-to-date: geopy in /home/vm/.local/lib/python3.5/site-packages (from getorg)\n"",
      ""Requirement already up-to-date: retrying in /home/vm/.local/lib/python3.5/site-packages (from getorg)\n"",
      ""Requirement already up-to-date: pygithub in /home/vm/anaconda3/lib/python3.5/site-packages (from getorg)\n"",
      ""Requirement already up-to-date: six&gt;=1.7.0 in /home/vm/.local/lib/python3.5/site-packages (from retrying-&gt;getorg)\n"",
      ""IPywidgets and ipyleaflet support enabled.\n""
     ]
    }
   ],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 2,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 3,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim()\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 4,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [
    {
     ""name"": ""stdout"",
     ""output_type"": ""stream"",
     ""text"": [
      ""Berkeley CA, USA \n"",
      "" Berkeley, Alameda County, California, United States of America\n"",
      ""Los Angeles, CA \n"",
      "" LA, Los Angeles County, California, United States of America\n"",
      ""London, UK \n"",
      "" London, Greater London, England, UK\n"",
      ""San Francisco, California \n"",
      "" SF, California, United States of America\n""
     ]
    }
   ],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": 5,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [
    {
     ""data"": {
      ""text/plain"": [
       ""'Written map to ../talkmap/'""
      ]
     },
     ""execution_count"": 5,
     ""metadata"": {},
     ""output_type"": ""execute_result""
    }
   ],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python [Root]"",
   ""language"": ""python"",
   ""name"": ""Python [Root]""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.5.2""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""execution_count"": 1,', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Requirement already up-to-date: getorg in /home/vm/anaconda3/lib/python3.5/site-packages\\n"",', '""Requirement already up-to-date: geopy in /home/vm/.local/lib/python3.5/site-packages (from getorg)\\n"",', '""Requirement already up-to-date: retrying in /home/vm/.local/lib/python3.5/site-packages (from getorg)\\n"",', '""Requirement already up-to-date: pygithub in /home/vm/anaconda3/lib/python3.5/site-packages (from getorg)\\n"",', '""Requirement already up-to-date: six>=1.7.0 in /home/vm/.local/lib/python3.5/site-packages (from retrying->getorg)\\n"",', '""IPywidgets and ipyleaflet support enabled.\\n""', ']', '}', '],', '""execution_count"": 2,', '""execution_count"": 3,', '""execution_count"": 4,', '""outputs"": [', '{', '""name"": ""stdout"",', '""output_type"": ""stream"",', '""text"": [', '""Berkeley CA, USA \\n"",', '"" Berkeley, Alameda County, California, United States of America\\n"",', '""Los Angeles, CA \\n"",', '"" LA, Los Angeles County, California, United States of America\\n"",', '""London, UK \\n"",', '"" London, Greater London, England, UK\\n"",', '""San Francisco, California \\n"",', '"" SF, California, United States of America\\n""', ']', '}', '],', '""execution_count"": 5,', '""outputs"": [', '{', '""data"": {', '""text/plain"": [', '""\'Written map to ../talkmap/\'""', ']', '},', '""execution_count"": 5,', '""metadata"": {},', '""output_type"": ""execute_result""', '}', '],', '""display_name"": ""Python [Root]"",', '""name"": ""Python [Root]""', '""version"": ""3.5.2""']","{
 ""cells"": [
  {
   ""cell_type"": ""markdown"",
   ""metadata"": {},
   ""source"": [
    ""# Leaflet cluster map of talk locations\n"",
    ""\n"",
    ""Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""!pip install getorg --upgrade\n"",
    ""import glob\n"",
    ""import getorg\n"",
    ""from geopy import Nominatim""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""g = glob.glob(\""*.md\"")""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": [
    ""geocoder = Nominatim()\n"",
    ""location_dict = {}\n"",
    ""location = \""\""\n"",
    ""permalink = \""\""\n"",
    ""title = \""\""""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""\n"",
    ""for file in g:\n"",
    ""    with open(file, 'r') as f:\n"",
    ""        lines = f.read()\n"",
    ""        if lines.find('location: \""') &gt; 1:\n"",
    ""            loc_start = lines.find('location: \""') + 11\n"",
    ""            lines_trim = lines[loc_start:]\n"",
    ""            loc_end = lines_trim.find('\""')\n"",
    ""            location = lines_trim[:loc_end]\n"",
    ""                            \n"",
    ""           \n"",
    ""        location_dict[location] = geocoder.geocode(location)\n"",
    ""        print(location, \""\\n\"", location_dict[location])\n""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": false
   },
   ""outputs"": [],
   ""source"": [
    ""m = getorg.orgmap.create_map_obj()\n"",
    ""getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\""../talkmap\"", hashed_usernames=False)""
   ]
  },
  {
   ""cell_type"": ""code"",
   ""execution_count"": null,
   ""metadata"": {
    ""collapsed"": true
   },
   ""outputs"": [],
   ""source"": []
  }
 ],
 ""metadata"": {
  ""anaconda-cloud"": {},
  ""kernelspec"": {
   ""display_name"": ""Python 3"",
   ""language"": ""python"",
   ""name"": ""python3""
  },
  ""language_info"": {
   ""codemirror_mode"": {
    ""name"": ""ipython"",
    ""version"": 3
   },
   ""file_extension"": "".py"",
   ""mimetype"": ""text/x-python"",
   ""name"": ""python"",
   ""nbconvert_exporter"": ""python"",
   ""pygments_lexer"": ""ipython3"",
   ""version"": ""3.8.3""
  }
 },
 ""nbformat"": 4,
 ""nbformat_minor"": 0
}
","['""execution_count"": null,', '""outputs"": [],', '""execution_count"": null,', '""execution_count"": null,', '""execution_count"": null,', '""outputs"": [],', '""execution_count"": null,', '""outputs"": [],', '""display_name"": ""Python 3"",', '""name"": ""python3""', '""version"": ""3.8.3""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Close #2841, with code from @gopisivakanth",_sass/layout/_buttons.scss,modified,"/* ==========================================================================
   BUTTONS
   ========================================================================== */

/*
   Default button
   ========================================================================== */

.btn {
  /* default button */
  display: inline-block;
  margin-bottom: 0.25em;
  padding: 0.5em 1em;
  color: #fff !important;
  font-family: $sans-serif;
  font-size: $type-size-6;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  background-color: var(--global-base-color);
  border: 0 !important;
  border-radius: $border-radius;
  cursor: pointer;

  &amp;:hover {
    background-color: mix(white, #000, 20%);
  }

  .icon {
    margin-right: 0.5em;
  }

  .icon + .hidden {
    margin-left: -0.5em; /* override for hidden text*/
  }

  /* fills width of parent container */

  &amp;--block {
    display: block;
    width: 100%;

    + .btn--block {
      margin-top: 0.25em;
    }
  }

  /* for dark backgrounds */

  &amp;--inverse {
    color: var(--global-text-color-light) !important;
    border: 1px solid var(--global-border-color) !important; /* override*/
    background-color: #fff;

    &amp;:hover {
      color: #fff !important;
      border-color: var(--global-text-color-light);
    }
  }

  /* light outline */

  &amp;--light-outline {
    border: 1px solid #fff !important; /* override*/
    background-color: transparent;
  }

  /* information */

  &amp;--info {
    background-color: $info-color;

    &amp;:hover {
      background-color: mix(#000, $info-color, 20%);
    }
  }

  /* warning */

  &amp;--warning {
    background-color: $warning-color;

    &amp;:hover {
      background-color: mix(#000, $warning-color, 20%);
    }
  }

  /* success */

  &amp;--success {
    background-color: $success-color;

    &amp;:hover {
      background-color: mix(#000, $success-color, 20%);
    }
  }

  /* danger */

  &amp;--danger {
    background-color: $danger-color;

    &amp;:hover {
      background-color: mix(#000, $danger-color, 20%);
    }
  }

  /* disabled */

  &amp;--disabled {
    pointer-events: none;
    cursor: not-allowed;
    filter: alpha(opacity=65);
    box-shadow: none;
    opacity: 0.65;
  }

  /* social buttons */

  $social:
  (facebook, $facebook-color),
  (twitter, $twitter-color),
  (google-plus, $google-plus-color),
  (linkedin, $linkedin-color);

  @each $socialnetwork, $color in $social {
    &amp;--#{$socialnetwork} {
      background-color: $color;

      &amp;:hover {
        background-color: mix(#000, $color, 20%);
      }
    }
  }

  /* extra large button */

  &amp;--x-large {
    font-size: $type-size-4;
  }

  /* large button */

  &amp;--large {
    font-size: $type-size-5;
  }

  /* small button */

  &amp;--small {
    font-size: $type-size-7;
  }
}
",['background-color: #fff;'],"/* ==========================================================================
   BUTTONS
   ========================================================================== */

/*
   Default button
   ========================================================================== */

.btn {
  /* default button */
  display: inline-block;
  margin-bottom: 0.25em;
  padding: 0.5em 1em;
  color: #fff !important;
  font-family: $sans-serif;
  font-size: $type-size-6;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  background-color: var(--global-base-color);
  border: 0 !important;
  border-radius: $border-radius;
  cursor: pointer;

  &amp;:hover {
    background-color: mix(white, #000, 20%);
  }

  .icon {
    margin-right: 0.5em;
  }

  .icon + .hidden {
    margin-left: -0.5em; /* override for hidden text*/
  }

  /* fills width of parent container */

  &amp;--block {
    display: block;
    width: 100%;

    + .btn--block {
      margin-top: 0.25em;
    }
  }

  /* for dark backgrounds */

  &amp;--inverse {
    color: var(--global-text-color-light) !important;
    border: 1px solid var(--global-border-color) !important; /* override*/
    background-color: var(--global-bg-color);

    &amp;:hover {
      color: #fff !important;
      border-color: var(--global-text-color-light);
    }
  }

  /* light outline */

  &amp;--light-outline {
    border: 1px solid #fff !important; /* override*/
    background-color: transparent;
  }

  /* information */

  &amp;--info {
    background-color: $info-color;

    &amp;:hover {
      background-color: mix(#000, $info-color, 20%);
    }
  }

  /* warning */

  &amp;--warning {
    background-color: $warning-color;

    &amp;:hover {
      background-color: mix(#000, $warning-color, 20%);
    }
  }

  /* success */

  &amp;--success {
    background-color: $success-color;

    &amp;:hover {
      background-color: mix(#000, $success-color, 20%);
    }
  }

  /* danger */

  &amp;--danger {
    background-color: $danger-color;

    &amp;:hover {
      background-color: mix(#000, $danger-color, 20%);
    }
  }

  /* disabled */

  &amp;--disabled {
    pointer-events: none;
    cursor: not-allowed;
    filter: alpha(opacity=65);
    box-shadow: none;
    opacity: 0.65;
  }

  /* social buttons */

  $social:
  (facebook, $facebook-color),
  (twitter, $twitter-color),
  (google-plus, $google-plus-color),
  (linkedin, $linkedin-color);

  @each $socialnetwork, $color in $social {
    &amp;--#{$socialnetwork} {
      background-color: $color;

      &amp;:hover {
        background-color: mix(#000, $color, 20%);
      }
    }
  }

  /* extra large button */

  &amp;--x-large {
    font-size: $type-size-4;
  }

  /* large button */

  &amp;--large {
    font-size: $type-size-5;
  }

  /* small button */

  &amp;--small {
    font-size: $type-size-7;
  }
}
",['background-color: var(--global-bg-color);']
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Close #2841, with code from @gopisivakanth",_sass/layout/_sidebar.scss,modified,"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: #fff;
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
",['background: #fff;'],"/* ==========================================================================
   SIDEBAR
   ========================================================================== */

/*
   Default
   ========================================================================== */

.sidebar {
  -webkit-transform: translate3d(0, 0 , 0);
          transform: translate3d(0, 0 , 0);

  @include clearfix();
  margin-bottom: 1em;

  @media screen and (min-width: $sidebar-screen-min-width) {
    height: 100vh;
    overflow-y: auto;               // Add scrollbar if the sidebar is too long
    position: fixed;
    padding-top: $masthead-height;
  }

  @include breakpoint($large) {
    @include span(2 of 12);
    opacity: 1;
    -webkit-transition: opacity 0.2s ease-in-out;
            transition: opacity 0.2s ease-in-out;

    &amp;:hover {
      opacity: 1;
    }
  }

  @include breakpoint($x-large) {
    max-width: $sidebar-link-max-width;
    padding-right: 0;
  }

  h2, h3, h4, h5, h6 {
    margin-bottom: 0;
    font-family: $sans-serif-narrow;
  }

  h3, h4 {
    font-size: $type-size-5;
  }

  p, li {
    font-family: $sans-serif;
    font-size: $type-size-6;
    line-height: 1.5;
  }

  img {
    width: 100%;
  }
}

.sidebar__right {
  margin-bottom: 1em;

  @include breakpoint($large) {
    position: relative;
    float: right;
    width: $right-sidebar-width-narrow;
    margin-left: span(0.5 of 12);
    z-index: 10;
  }

  @include breakpoint($x-large) {
    width: $right-sidebar-width;
  }
}

/*
   Author profile and links
   ========================================================================== */

.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 36px;
  // set width only, for non-square avatars
  // height: 36px;

  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }

  img {
    max-width: 175px;
    border-radius: 50%;

    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid var(--global-border-color);
    }
  }
}

.author__content {
  display: table-cell;
  vertical-align: top;
  padding-left: 15px;
  padding-right: 25px;
  line-height: 1;

  @include breakpoint($large) {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
}

.author__name {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}
.sidebar .author__name {
  font-family: $sans-serif;
  font-size: $type-size-5;
}

.sidebar .author__desktop {
  display: none;
  @media screen and (min-width: 1024px) {
    display: block;
  }
}

.author__pronouns {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

.author__bio {
  margin: 0;

  @include breakpoint($large) {
    margin-top: 10px;
    margin-bottom: 20px;
  }
}

.author__urls-wrapper {
  position: relative;
  display: table-cell;
  vertical-align: middle;
  font-family: $sans-serif;
  z-index: 10;
  position: relative;
  cursor: pointer;

  li:last-child {
    a {
      margin-bottom: 0;
    }
  }

  @include breakpoint($large) {
    display: block;
  }

  button {
    margin-bottom: 0;

    @include breakpoint($large) {
      display: none;
    }
  }
}

.author__urls {
  display: none;
  position: absolute;
  right: 0;
  margin-top: 15px;
  padding: 10px;
  list-style-type: none;
  border: 1px solid var(--global-border-color);
  border-radius: $border-radius;
  background: var(--global-bg-color);
  z-index: -1;
  box-shadow: 0 0 10px rgba(#000, 0.25);
  cursor: default;

  @include breakpoint($large) {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    box-shadow: none;
  }

  &amp;:before {
    display: block;
    content: """";
    position: absolute;
    top: -11px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: var(--global-border-color) transparent;
    z-index: 0;

    @include breakpoint($large) {
      display: none;
    }
  }

  &amp;:after {
    display: block;
    content: """";
    position: absolute;
    top: -10px;
    left: calc(50% - 10px);
    width: 0;
    border-style: solid;
    border-width: 0 10px 10px;
    border-color: #fff transparent;
    z-index: 1;

    @include breakpoint($large) {
      display: none;
    }
  }

  li {
    white-space: nowrap;
  }

  a {
    display: block;
    margin-bottom: 5px;
    padding-right: 5px;
    padding-top: 2px;
    padding-bottom: 2px;
    color: inherit;
    font-size: $type-size-5;
    text-decoration: none;

    &amp;:hover {
      text-decoration: underline;
    }
  }
}
",['background: var(--global-bg-color);']
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",README.md,modified,"# Academic Pages
**Academic Pages is a GitHub Pages template for personal and professional portfolio-oriented websites.**

![Academic Pages template example](images/homepage.png ""Academic Pages template example"")

# Getting Started

1. Register a GitHub account if you don't have one and confirm your e-mail (required!)
1. Click the ""Use this template"" button in the top right.
1. On the ""New repository"" page, enter your repository name as ""[your GitHub username].github.io"", which will also be your website's URL.
1. Set site-wide configuration and add your content.
1. Upload any files (like PDFs, .zip files, etc.) to the `files/` directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.
1. Check status by going to the repository settings, in the ""GitHub pages"" section
1. (Optional) Use the Jupyter notebooks or python scripts in the `markdown_generator` folder to generate markdown files for publications and talks from a TSV file.

See more info at https://academicpages.github.io/

## Running locally

When you are initially working your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:

1. Clone the repository and made updates as detailed above.
1. Make sure you have ruby-dev, bundler, and nodejs installed
    
    On most Linux distribution and [Windows Subsystem Linux](https://learn.microsoft.com/en-us/windows/wsl/about) the command is:
    ```bash
    sudo apt install ruby-dev ruby-bundler nodejs
    ```
    On MacOS the commands are:
    ```bash
    brew install ruby
    brew install node
    gem install bundler
    ```
1. Run `bundle install` to install ruby dependencies. If you get errors, delete Gemfile.lock and try again.
1. Run `jekyll serve -l -H localhost` to generate the HTML and serve it from `localhost:4000` the local server will automatically rebuild and refresh the pages on change.

If you are running on Linux it may be necessary to install some additional dependencies prior to being able to run locally: `sudo apt install build-essential gcc make`

## Using Docker

Working from a different OS, or just want to avoid installing dependencies? You can use the provided `Dockerfile` to build a container that will run the site for you if you have [Docker](https://www.docker.com/) installed.

You can build and execute the container by running the following command in the repository:

```bash
docker compose up
```

You should now be able to access the website from `localhost:4000`.

# Maintenance

Bug reports and feature requests to the template should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).

This repository was forked (then detached) by [Stuart Geiger](https://github.com/staeiou) from the [Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/), which is © 2016 Michael Rose and released under the MIT License (see LICENSE.md). It is currently being maintained by [Robert Zupko](https://github.com/rjzupkoii) and additional maintainers would be welcomed.

## Bugfixes and enhancements

If you have bugfixes and enhancements that you would like to submit as a pull request, you will need to [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) this repository as opposed to using it as a template. This will also allow you to [synchronize your copy](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork) of template to your fork as well.

Unfortunately, one logistical issue with a template theme like Academic Pages that makes it a little tricky to get bug fixes and updates to the core theme. If you use this template and customize it, you will probably get merge conflicts if you attempt to synchronize. If you want to save your various .yml configuration files and markdown files, you can delete the repository and fork it again. Or you can manually patch.

---
<div align=""center"">
 ![pages-build-deployment](https://github.com/academicpages/academicpages.github.io/actions/workflows/pages/pages-build-deployment/badge.svg)
[![GitHub contributors](https://img.shields.io/github/contributors/academicpages/academicpages.github.io.svg)](https://github.com/academicpages/academicpages.github.io/graphs/contributors)
[![GitHub release](https://img.shields.io/github/v/release/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/releases/latest)
[![GitHub license](https://img.shields.io/github/license/academicpages/academicpages.github.io?color=blue)](https://github.com/academicpages/academicpages.github.io/blob/master/LICENSE)

[![GitHub stars](https://img.shields.io/github/stars/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io)
[![GitHub forks](https://img.shields.io/github/forks/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/fork)
</div>
",[],"# Academic Pages
**Academic Pages is a GitHub Pages template for personal and professional portfolio-oriented websites.**

![Academic Pages template example](images/homepage.png ""Academic Pages template example"")

# Getting Started

1. Register a GitHub account if you don't have one and confirm your e-mail (required!)
1. Click the ""Use this template"" button in the top right.
1. On the ""New repository"" page, enter your repository name as ""[your GitHub username].github.io"", which will also be your website's URL.
1. Set site-wide configuration and add your content.
1. Upload any files (like PDFs, .zip files, etc.) to the `files/` directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.
1. Check status by going to the repository settings, in the ""GitHub pages"" section
1. (Optional) Use the Jupyter notebooks or python scripts in the `markdown_generator` folder to generate markdown files for publications and talks from a TSV file.

See more info at https://academicpages.github.io/

## Running locally

When you are initially working your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:

1. Clone the repository and made updates as detailed above.
1. Make sure you have ruby-dev, bundler, and nodejs installed
    
    On most Linux distribution and [Windows Subsystem Linux](https://learn.microsoft.com/en-us/windows/wsl/about) the command is:
    ```bash
    sudo apt install ruby-dev ruby-bundler nodejs
    ```
    If you see error `Unable to locate package ruby-bundler`, `Unable to locate package nodejs `, run the following:
    ```bash
    sudo apt update &amp;&amp; sudo apt upgrade -y
    ```
    then try run `sudo apt install ruby-dev ruby-bundler nodejs` again.

    On MacOS the commands are:
    ```bash
    brew install ruby
    brew install node
    gem install bundler
    ```
1. Run `bundle install` to install ruby dependencies. If you get errors, delete Gemfile.lock and try again.

    If you see file permission error like `Fetching bundler-2.6.3.gem ERROR:  While executing gem (Gem::FilePermissionError) You don't have write permissions for the /var/lib/gems/3.2.0 directory.` or `Bundler::PermissionError: There was an error while trying to write to /usr/local/bin.`
    Install Gems Locally (Recommended):
    ```bash
    bundle config set --local path 'vendor/bundle'
    ```
    then try run `bundle install` again. If succeeded, you should see a folder called `vendor` and open `.gitignore` then add `vendor` inside it.

1. Run `jekyll serve -l -H localhost` to generate the HTML and serve it from `localhost:4000` the local server will automatically rebuild and refresh the pages on change.
    You may also try `bundle exec jekyll serve -l -H localhost` to ensure jekyll to use specific dependencies on your own local machine.

If you are running on Linux it may be necessary to install some additional dependencies prior to being able to run locally: `sudo apt install build-essential gcc make`

## Using Docker

Working from a different OS, or just want to avoid installing dependencies? You can use the provided `Dockerfile` to build a container that will run the site for you if you have [Docker](https://www.docker.com/) installed.

You can build and execute the container by running the following command in the repository:

```bash
docker compose up
```

You should now be able to access the website from `localhost:4000`.

# Maintenance

Bug reports and feature requests to the template should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).

This repository was forked (then detached) by [Stuart Geiger](https://github.com/staeiou) from the [Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/), which is © 2016 Michael Rose and released under the MIT License (see LICENSE.md). It is currently being maintained by [Robert Zupko](https://github.com/rjzupkoii) and additional maintainers would be welcomed.

## Bugfixes and enhancements

If you have bugfixes and enhancements that you would like to submit as a pull request, you will need to [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) this repository as opposed to using it as a template. This will also allow you to [synchronize your copy](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork) of template to your fork as well.

Unfortunately, one logistical issue with a template theme like Academic Pages that makes it a little tricky to get bug fixes and updates to the core theme. If you use this template and customize it, you will probably get merge conflicts if you attempt to synchronize. If you want to save your various .yml configuration files and markdown files, you can delete the repository and fork it again. Or you can manually patch.

---
<div align=""center"">
 ![pages-build-deployment](https://github.com/academicpages/academicpages.github.io/actions/workflows/pages/pages-build-deployment/badge.svg)
[![GitHub contributors](https://img.shields.io/github/contributors/academicpages/academicpages.github.io.svg)](https://github.com/academicpages/academicpages.github.io/graphs/contributors)
[![GitHub release](https://img.shields.io/github/v/release/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/releases/latest)
[![GitHub license](https://img.shields.io/github/license/academicpages/academicpages.github.io?color=blue)](https://github.com/academicpages/academicpages.github.io/blob/master/LICENSE)

[![GitHub stars](https://img.shields.io/github/stars/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io)
[![GitHub forks](https://img.shields.io/github/forks/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/fork)
</div>
","['If you see error `Unable to locate package ruby-bundler`, `Unable to locate package nodejs `, run the following:', '```bash', 'sudo apt update && sudo apt upgrade -y', '```', 'then try run `sudo apt install ruby-dev ruby-bundler nodejs` again.', '', '', ""If you see file permission error like `Fetching bundler-2.6.3.gem ERROR:  While executing gem (Gem::FilePermissionError) You don't have write permissions for the /var/lib/gems/3.2.0 directory.` or `Bundler::PermissionError: There was an error while trying to write to /usr/local/bin.`"", 'Install Gems Locally (Recommended):', '```bash', ""bundle config set --local path 'vendor/bundle'"", '```', 'then try run `bundle install` again. If succeeded, you should see a folder called `vendor` and open `.gitignore` then add `vendor` inside it.', '', 'You may also try `bundle exec jekyll serve -l -H localhost` to ensure jekyll to use specific dependencies on your own local machine.']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",_includes/head/custom.html,modified,"{% include base_path %}
<!-- start custom head snippets -->
<link href=""{{ base_path }}/images/apple-touch-icon-57x57.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""57x57""/>
<link href=""{{ base_path }}/images/apple-touch-icon-60x60.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""60x60""/>
<link href=""{{ base_path }}/images/apple-touch-icon-72x72.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""72x72""/>
<link href=""{{ base_path }}/images/apple-touch-icon-76x76.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""76x76""/>
<link href=""{{ base_path }}/images/apple-touch-icon-114x114.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""114x114""/>
<link href=""{{ base_path }}/images/apple-touch-icon-120x120.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""120x120""/>
<link href=""{{ base_path }}/images/apple-touch-icon-144x144.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""144x144""/>
<link href=""{{ base_path }}/images/apple-touch-icon-152x152.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""152x152""/>
<link href=""{{ base_path }}/images/apple-touch-icon-180x180.png?v=M44lzPylqQ"" rel=""apple-touch-icon"" sizes=""180x180""/>
<link href=""{{ base_path }}/images/favicon-32x32.png?v=M44lzPylqQ"" rel=""icon"" sizes=""32x32"" type=""image/png""/>
<link href=""{{ base_path }}/images/android-chrome-192x192.png?v=M44lzPylqQ"" rel=""icon"" sizes=""192x192"" type=""image/png""/>
<link href=""{{ base_path }}/images/favicon-96x96.png?v=M44lzPylqQ"" rel=""icon"" sizes=""96x96"" type=""image/png""/>
<link href=""{{ base_path }}/images/favicon-16x16.png?v=M44lzPylqQ"" rel=""icon"" sizes=""16x16"" type=""image/png""/>
<link href=""{{ base_path }}/images/manifest.json?v=M44lzPylqQ"" rel=""manifest""/>
<link color=""#000000"" href=""{{ base_path }}/images/safari-pinned-tab.svg?v=M44lzPylqQ"" rel=""mask-icon""/>
<link href=""/images/favicon.ico?v=M44lzPylqQ"" rel=""shortcut icon""/>
<meta content=""#000000"" name=""msapplication-TileColor""/>
<meta content=""{{ base_path }}/images/mstile-144x144.png?v=M44lzPylqQ"" name=""msapplication-TileImage""/>
<meta content=""{{ base_path }}/images/browserconfig.xml?v=M44lzPylqQ"" name=""msapplication-config""/>
<meta content=""#ffffff"" name=""theme-color""/>
<link href=""{{ base_path }}/assets/css/academicons.css"" rel=""stylesheet"">
 <!-- Support for MatJax -->
 <script src=""https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?features=es6"">
 </script>
 <script async="""" id=""MathJax-script"" src=""https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"">
 </script>
 <!-- end custom head snippets -->
</link>
","['<link rel=""apple-touch-icon"" sizes=""57x57"" href=""{{ base_path }}/images/apple-touch-icon-57x57.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""60x60"" href=""{{ base_path }}/images/apple-touch-icon-60x60.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""72x72"" href=""{{ base_path }}/images/apple-touch-icon-72x72.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""76x76"" href=""{{ base_path }}/images/apple-touch-icon-76x76.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""114x114"" href=""{{ base_path }}/images/apple-touch-icon-114x114.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""120x120"" href=""{{ base_path }}/images/apple-touch-icon-120x120.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""144x144"" href=""{{ base_path }}/images/apple-touch-icon-144x144.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""152x152"" href=""{{ base_path }}/images/apple-touch-icon-152x152.png?v=M44lzPylqQ"">', '<link rel=""apple-touch-icon"" sizes=""180x180"" href=""{{ base_path }}/images/apple-touch-icon-180x180.png?v=M44lzPylqQ"">', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/favicon-32x32.png?v=M44lzPylqQ"" sizes=""32x32"">', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/android-chrome-192x192.png?v=M44lzPylqQ"" sizes=""192x192"">', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/favicon-96x96.png?v=M44lzPylqQ"" sizes=""96x96"">', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/favicon-16x16.png?v=M44lzPylqQ"" sizes=""16x16"">', '<link rel=""manifest"" href=""{{ base_path }}/images/manifest.json?v=M44lzPylqQ"">', '<link rel=""mask-icon"" href=""{{ base_path }}/images/safari-pinned-tab.svg?v=M44lzPylqQ"" color=""#000000"">', '<link rel=""shortcut icon"" href=""/images/favicon.ico?v=M44lzPylqQ"">', '<meta name=""msapplication-TileColor"" content=""#000000"">', '<meta name=""msapplication-TileImage"" content=""{{ base_path }}/images/mstile-144x144.png?v=M44lzPylqQ"">', '<meta name=""msapplication-config"" content=""{{ base_path }}/images/browserconfig.xml?v=M44lzPylqQ"">', '<meta name=""theme-color"" content=""#ffffff"">']","{% include base_path %}
<!-- start custom head snippets -->
<!-- favicon from https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg -->
<link href=""{{ base_path }}/images/apple-touch-icon-180x180.png"" rel=""apple-touch-icon"" sizes=""180x180""/>
<link href=""{{ base_path }}/images/favicon.svg"" rel=""icon"" type=""image/svg+xml""/>
<link href=""{{ base_path }}/images/favicon-32x32.png"" rel=""icon"" sizes=""32x32"" type=""image/png""/>
<link href=""{{ base_path }}/images/favicon-192x192.png"" rel=""icon"" sizes=""192x192"" type=""image/png""/>
<link href=""{{ base_path }}/images/manifest.json"" rel=""manifest""/>
<link href=""/images/favicon.ico"" rel=""icon""/>
<meta content=""#ffffff"" name=""theme-color""/>
<link href=""{{ base_path }}/assets/css/academicons.css"" rel=""stylesheet""/>
<!-- Support for MatJax -->
<script src=""https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?features=es6"">
</script>
<script async="""" id=""MathJax-script"" src=""https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"">
</script>
<!-- end custom head snippets -->
","['<!-- favicon from https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg -->', '<link rel=""apple-touch-icon"" sizes=""180x180"" href=""{{ base_path }}/images/apple-touch-icon-180x180.png""/>', '<link rel=""icon"" type=""image/svg+xml"" href=""{{ base_path }}/images/favicon.svg""/>', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/favicon-32x32.png"" sizes=""32x32""/>', '<link rel=""icon"" type=""image/png"" href=""{{ base_path }}/images/favicon-192x192.png"" sizes=""192x192""/>', '<link rel=""manifest"" href=""{{ base_path }}/images/manifest.json""/>', '<link rel=""icon"" href=""/images/favicon.ico""/>', '<meta name=""theme-color"" content=""#ffffff""/>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/apple-touch-icon-180x180.png,added,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/browserconfig.xml,removed,"<?xml version=""1.0"" encoding=""utf-8""?>
<browserconfig>
 <msapplication>
  <tile>
   <square70x70logo src=""/images/mstile-70x70.png?v=M44lzPylqQ"">
   </square70x70logo>
   <square150x150logo src=""/images/mstile-150x150.png?v=M44lzPylqQ"">
   </square150x150logo>
   <square310x310logo src=""/images/mstile-310x310.png?v=M44lzPylqQ"">
   </square310x310logo>
   <wide310x150logo src=""/images/mstile-310x150.png?v=M44lzPylqQ"">
   </wide310x150logo>
   <tilecolor>
    #000000
   </tilecolor>
  </tile>
 </msapplication>
</browserconfig>
","['<?xml version=""1.0"" encoding=""utf-8""?>', '<browserconfig>', '<msapplication>', '<tile>', '<square70x70logo src=""/images/mstile-70x70.png?v=M44lzPylqQ""/>', '<square150x150logo src=""/images/mstile-150x150.png?v=M44lzPylqQ""/>', '<square310x310logo src=""/images/mstile-310x310.png?v=M44lzPylqQ""/>', '<wide310x150logo src=""/images/mstile-310x150.png?v=M44lzPylqQ""/>', '<TileColor>#000000</TileColor>', '</tile>', '</msapplication>', '</browserconfig>']","404: Not Found
",[]
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/favicon-192x192.png,added,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/favicon-32x32.png,added,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/favicon-512x512.png,added,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/favicon.ico,modified,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/favicon.svg,added,"page does not exist
",[],"<svg viewbox=""2 2 20 20"" xmlns=""http://www.w3.org/2000/svg"">
 <title>
  OOjs_UI_icon_academic-progressive
 </title>
 <path d=""M12.13,14,12,14l-.13,0L7,12.63V16c0,1.1,2.24,2,5,2s5-.9,5-2V12.63Z"" fill=""#36c"">
 </path>
 <path d=""M21.13,9.52l-9-2.5a.39.39,0,0,0-.26,0l-9,2.5a.5.5,0,0,0,0,1l9,2.5L12,13l.13,0,9-2.5a.5.5,0,0,0,0-1Z"" fill=""#36c"">
 </path>
 <path d=""M19.5,14.5a1,1,0,0,0-.5-.85V10H18v3.65a1,1,0,0,0-.5.85,1,1,0,0,0,.45.81L17.5,18c0,.37.45.67,1,.67s1-.3,1-.67l-.45-2.69A1,1,0,0,0,19.5,14.5Z"" fill=""#36c"">
 </path>
</svg>
","['<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""2 2 20 20""><title>OOjs_UI_icon_academic-progressive</title><path d=""M12.13,14,12,14l-.13,0L7,12.63V16c0,1.1,2.24,2,5,2s5-.9,5-2V12.63Z"" fill=""#36c""/><path d=""M21.13,9.52l-9-2.5a.39.39,0,0,0-.26,0l-9,2.5a.5.5,0,0,0,0,1l9,2.5L12,13l.13,0,9-2.5a.5.5,0,0,0,0-1Z"" fill=""#36c""/><path d=""M19.5,14.5a1,1,0,0,0-.5-.85V10H18v3.65a1,1,0,0,0-.5.85,1,1,0,0,0,.45.81L17.5,18c0,.37.45.67,1,.67s1-.3,1-.67l-.45-2.69A1,1,0,0,0,19.5,14.5Z"" fill=""#36c""/></svg>']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/manifest.json,modified,"{
	""name"": ""Minimal Mistakes"",
	""icons"": [
		{
			""src"": ""\/images\/android-chrome-36x36.png?v=M44lzPylqQ"",
			""sizes"": ""36x36"",
			""type"": ""image\/png"",
			""density"": 0.75
		},
		{
			""src"": ""\/images\/android-chrome-48x48.png?v=M44lzPylqQ"",
			""sizes"": ""48x48"",
			""type"": ""image\/png"",
			""density"": 1
		},
		{
			""src"": ""\/images\/android-chrome-72x72.png?v=M44lzPylqQ"",
			""sizes"": ""72x72"",
			""type"": ""image\/png"",
			""density"": 1.5
		},
		{
			""src"": ""\/images\/android-chrome-96x96.png?v=M44lzPylqQ"",
			""sizes"": ""96x96"",
			""type"": ""image\/png"",
			""density"": 2
		},
		{
			""src"": ""\/images\/android-chrome-144x144.png?v=M44lzPylqQ"",
			""sizes"": ""144x144"",
			""type"": ""image\/png"",
			""density"": 3
		},
		{
			""src"": ""\/images\/android-chrome-192x192.png?v=M44lzPylqQ"",
			""sizes"": ""192x192"",
			""type"": ""image\/png"",
			""density"": 4
		}
	]
}
","['""name"": ""Minimal Mistakes"",', '""src"": ""\\/images\\/android-chrome-36x36.png?v=M44lzPylqQ"",', '""sizes"": ""36x36"",', '""type"": ""image\\/png"",', '""density"": 0.75', '},', '{', '""src"": ""\\/images\\/android-chrome-48x48.png?v=M44lzPylqQ"",', '""sizes"": ""48x48"",', '""type"": ""image\\/png"",', '""density"": 1', '},', '{', '""src"": ""\\/images\\/android-chrome-72x72.png?v=M44lzPylqQ"",', '""sizes"": ""72x72"",', '""type"": ""image\\/png"",', '""density"": 1.5', '},', '{', '""src"": ""\\/images\\/android-chrome-96x96.png?v=M44lzPylqQ"",', '""sizes"": ""96x96"",', '""type"": ""image\\/png"",', '""density"": 2', '},', '{', '""src"": ""\\/images\\/android-chrome-144x144.png?v=M44lzPylqQ"",', '""sizes"": ""144x144"",', '""type"": ""image\\/png"",', '""density"": 3', '""src"": ""\\/images\\/android-chrome-192x192.png?v=M44lzPylqQ"",', '""sizes"": ""192x192"",', '""type"": ""image\\/png"",', '""density"": 4']","{
	""name"": ""OOjs UI icon academic-progressive"",
	""icons"": [
		{
			""src"": ""/images/favicon-192x192.png"",
			""sizes"": ""192x192"",
			""type"": ""image/png""
		},
		{
			""src"": ""/images/favicon-512x512.png"",
			""sizes"": ""512x512"",
			""type"": ""image/png""
		}
	]
}
","['""name"": ""OOjs UI icon academic-progressive"",', '""src"": ""/images/favicon-192x192.png"",', '""sizes"": ""192x192"",', '""type"": ""image/png""', '""src"": ""/images/favicon-512x512.png"",', '""sizes"": ""512x512"",', '""type"": ""image/png""']"
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/mstile-144x144.png,removed,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/mstile-150x150.png,removed,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/mstile-310x150.png,removed,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/mstile-310x310.png,removed,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/mstile-70x70.png,removed,,,,
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Fix handling of favicon

Follow the blog of https://blog.ghkk.net/post/how-to-favicon-in-2021-six-files-that-fit-most-needs/

* Remove everything about mstile.
* Regenerate favicon using SVG file from
  https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_academic-progressive.svg
  with minor tweaks in SVG viewBox.
* Provide .svg, .ico, 32x32, 192x192, 512x512, and apple 180x180 .png icons.

This commit closes: #2337 .",images/safari-pinned-tab.svg,removed,"<?xml version=""1.0"" standalone=""no""?>
<!DOCTYPE svg PUBLIC ""-//W3C//DTD SVG 20010904//EN""
 ""http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"">
<svg height=""500.000000pt"" preserveaspectratio=""xMidYMid meet"" version=""1.0"" viewbox=""0 0 500.000000 500.000000"" width=""500.000000pt"" xmlns=""http://www.w3.org/2000/svg"">
 <metadata>
  Created by potrace 1.11, written by Peter Selinger 2001-2013
 </metadata>
 <g fill=""#000000"" stroke=""none"" transform=""translate(0.000000,500.000000) scale(0.100000,-0.100000)"">
  <path d=""M0 2500 l0 -2500 2500 0 2500 0 0 2500 0 2500 -2500 0 -2500 0 0
-2500z m1294 1465 c51 -115 97 -219 102 -230 6 -13 10 63 12 213 l2 232 213 0
212 0 194 -443 c248 -565 472 -1071 475 -1075 2 -1 33 64 69 145 36 82 97 218
136 303 38 85 162 360 274 610 l205 455 201 3 201 2 2 -257 3 -258 64 145 c35
80 83 186 106 236 24 50 46 101 50 113 6 21 9 21 208 19 l202 -3 3 -1382 2
-1383 -160 0 -160 0 0 1059 c0 675 4 1106 11 1186 10 120 7 171 -6 109 -20
-94 -78 -243 -194 -504 l-131 -294 0 -778 0 -778 -160 0 -160 0 -2 414 -3 413
-184 -414 -183 -414 -81 3 -81 3 -115 258 c-63 141 -117 257 -120 257 -6 0
-26 -43 -126 -270 -26 -58 -62 -138 -80 -177 l-34 -73 -78 0 -79 0 -183 412
c-101 227 -188 417 -192 422 -5 6 -9 -178 -9 -412 l0 -422 -155 0 -155 0 0
779 0 779 -41 89 c-185 399 -279 640 -279 712 0 11 -5 23 -11 27 -9 5 -10 -1
-4 -22 4 -16 10 -554 12 -1196 l4 -1168 -160 0 -161 0 0 1378 c0 758 3 1382 7
1386 4 3 101 5 215 4 l209 -3 93 -210z m2936 -2980 l0 -155 -1730 0 -1730 0 0
155 0 155 1730 0 1730 0 0 -155z"">
  </path>
  <path d=""M1718 3397 l4 -402 90 -205 c49 -113 137 -312 195 -444 58 -131 120
-279 138 -330 18 -50 37 -90 41 -89 5 1 25 47 46 103 21 56 54 139 73 185 l36
83 -272 609 c-291 652 -298 668 -332 803 l-22 90 3 -403z"">
  </path>
  <path d=""M3280 3770 c0 -54 -90 -277 -343 -846 l-276 -622 53 -123 c29 -68 63
-154 76 -192 12 -37 26 -67 31 -67 4 0 13 17 20 38 25 79 111 286 204 492 54
118 126 279 161 358 l64 142 0 243 c0 217 11 458 25 560 3 22 1 37 -5 37 -5 0
-10 -9 -10 -20z"">
  </path>
 </g>
</svg>
","['<?xml version=""1.0"" standalone=""no""?>', '<!DOCTYPE svg PUBLIC ""-//W3C//DTD SVG 20010904//EN""', '""http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"">', '<svg version=""1.0"" xmlns=""http://www.w3.org/2000/svg""', 'width=""500.000000pt"" height=""500.000000pt"" viewBox=""0 0 500.000000 500.000000""', 'preserveAspectRatio=""xMidYMid meet"">', '<metadata>', 'Created by potrace 1.11, written by Peter Selinger 2001-2013', '</metadata>', '<g transform=""translate(0.000000,500.000000) scale(0.100000,-0.100000)""', 'fill=""#000000"" stroke=""none"">', '<path d=""M0 2500 l0 -2500 2500 0 2500 0 0 2500 0 2500 -2500 0 -2500 0 0', '212 0 194 -443 c248 -565 472 -1071 475 -1075 2 -1 33 64 69 145 36 82 97 218', '136 303 38 85 162 360 274 610 l205 455 201 3 201 2 2 -257 3 -258 64 145 c35', '80 83 186 106 236 24 50 46 101 50 113 6 21 9 21 208 19 l202 -3 3 -1382 2', 'c-101 227 -188 417 -192 422 -5 6 -9 -178 -9 -412 l0 -422 -155 0 -155 0 0', '779 0 779 -41 89 c-185 399 -279 640 -279 712 0 11 -5 23 -11 27 -9 5 -10 -1', '1386 4 3 101 5 215 4 l209 -3 93 -210z m2936 -2980 l0 -155 -1730 0 -1730 0 0', '155 0 155 1730 0 1730 0 0 -155z""/>', '<path d=""M1718 3397 l4 -402 90 -205 c49 -113 137 -312 195 -444 58 -131 120', '83 -272 609 c-291 652 -298 668 -332 803 l-22 90 3 -403z""/>', '<path d=""M3280 3770 c0 -54 -90 -277 -343 -846 l-276 -622 53 -123 c29 -68 63', '118 126 279 161 358 l64 142 0 243 c0 217 11 458 25 560 3 22 1 37 -5 37 -5 0', '</g>', '</svg>']","404: Not Found
",[]
https://github.com/chungyiweng/chungyiweng.github.io/commits/main/,"Exclude publications from category-list, close #2820",_includes/page__taxonomy.html,modified,"{% include base_path %}

{% if site.tag_archive.type and page.tags[0] %}
  {% include tag-list.html %}
{% endif %}

{% if site.category_archive.type and page.categories[0] %}
  {% include category-list.html %}
{% endif %}
",['{% if site.category_archive.type and page.categories[0] %}'],"{% include base_path %}

{% if site.tag_archive.type and page.tags[0] %}
  {% include tag-list.html %}
{% endif %}

{% if site.category_archive.type and page.categories[0] and page.collection != 'publications' %}
  {% include category-list.html %}
{% endif %}
","[""{% if site.category_archive.type and page.categories[0] and page.collection != 'publications' %}""]"
